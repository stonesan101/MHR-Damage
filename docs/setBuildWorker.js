(()=>{class t{constructor(t){this.arrs=t.reverse(),this.len=t.length,this.names=new Map,this.charms=[],this.costHash=[],this.costs=["",{total:1,skills:[],len:0},{total:2,skills:[],len:0},{total:1,skills:[],len:0},{total:1,skills:[],len:0},{total:3,skills:[],len:0}];let e=this.len;for(;e--;){let t=this.arrs[e];this.names.set(t[1],t),t[8]&&t[3]>=t[8]-1&&this.charms.push(t)}}}const e=[];for(let t=0,s=0;t<49;t++)!t||t%3||++s,e[t]=s;const s=(t,e)=>t>=e?t:e,n=(t,e)=>t<=e?t:e;let o,i;const l=new Int8Array(4);class r{constructor(t){this.armors=t,this.indexes=["arm","waist","helm","chest","leg"].map((t=>[-1,this.armors[t].length,t])),this.indexByType={helm:0,chest:1,arm:2,waist:3,leg:4},this.theseArmors=[],this.theseArmors.reset=function(){for(const t of this)t.augs[1]!==t.initAugs[1]&&(t.augs[1]=t.initAugs[1]),t.augs[2]!==t.initAugs[2]&&(t.augs[2]=t.initAugs[2]),t.augsPointer=3,t.skillLen=t.len,t.skillsRemovedCount=-1,t.quriousPoints=t.startingQuriousPoints,t.unBloatedPoints=e[t.startingQuriousPoints]}}setNextArmor(t,e,s){if(t)for(let e of t.requestedSkills)i.names.get(e)[3]+=t.skills[e];for(let s=0;s<4;++s)l[s]+=(-t?.decos[s]||0)+e.decos[s];this.theseArmors[this.indexByType[e.type]]=e;for(let t of e.requestedSkills)(i.names.get(t)[3]-=e.skills[t])<i.names.get(t)[7]&&(s=i.names.get(t));return s}addSkillToSet(t,e){let s=e.skillLen;for(;s--;)if(e.innateSkills[s]===t)return!0;if(e.skillLen<5)return e.innateSkills[e.skillLen++]=t,!0}}function u(t,e,s){let l=function(t){let e={2:0,3:0,4:0};for(let s of o.theseArmors){if(!s.decoAugs)continue;let n=s.decoAugs,o=n.length;for(;--o&&t;){let i=n[o][0]-n[o-1][0],l=n[o][1][1][0]!==n[o-1][1][1][0];if(n[o-1][1][0]<4||i>2||l)break;2===i?++e[2]:++e[3],f(s,n),--t}}return e[4]+=t,e}(e),r=[];for(let t of Object.entries(l))t[1]&&r.push([+t[0],+t[1]]);let u=t.length;t:for(;u--;){if(!e)return 0;let o=i.costs[t[u]],l=o.len;e:for(;l--&&e;){let i=o.skills[l];if(i[0]<=0)break;for(let[f,a]of i[4]){if(!e)return 0;let c=!1;for(let t=0;t<r.length;t++)if(r[t][0]>=f&&r[t][1]){c=t;break}if(!1===c)continue;let g=n(r[c][1],~~(i[0]/a));if(!(g<=0)){if(e-=g,s.arr[s.pointer++]=[i[1],a,r[c][0],g],i[0]-=g*a,0==(o.total-=g*a)){o.len=0,o.skills=[],t.splice(u,1);continue t}if(!i[0]){o.skills[l]=o.skills[--o.len];continue e}}}}}return e}function f(t,s){let n=s.length,o=6*(s[n-1][0]-s[n-2][0]);2===s.length?d(t,2):t.augs[2]={"+Slots":-6*s[n-2][0]},t.quriousPoints+=o,t.unBloatedPoints=e[t.quriousPoints]}function a(t,e,s,o,i){for(let e=0;e<4;++e)t[e]=l[e];e.pointer=0,i.costHash=[];let r,f=i.costHash,a={},c=0,g=0,h=5*s,k=0;t:for(;o--;)if(r=i.arrs[o],r[0]=r[3],!(r[0]<=0)){for(let[s,o]of r[4]){if(!t[s-1]||r[0]<o)continue;let i=n(~~(r[0]/o),t[s-1]);if(t[s-1]-=i,r[0]-=i*o,e.arr[e.pointer++]=[r[1],o,s,i],!r[0])continue t}if(!r[2]||(g+=r[0])>h+t[3])return;k===r[2]?(a.total+=r[0],a.skills[a.len++]=r):(k=r[2],a=i.costs[k],a.len=1,a.total=r[0],a.skills=[r],f[c++]=k)}if(!c)return[g,h];if(f.reverse(),t[3]){let s=u(f,t[3],e);if(0==(g-=t[3]+s))return[g,h];t[3]=s}return h-=g,[g,h]}function c(t,s,n,l){let[r,u]=t;const f=n.costHash,a=n.costs;t:for(let t of s){if(r<=0||u<0)return f.length;let e=3,s=5-t.skillLen;for(;e>r;)d(t),--e;for(;e;){if(e>s){let n=1===s?m(e,t.unBloatedPoints,f,a):m(e-1,t.unBloatedPoints-f[0],f,a);if(n){if(P(n[0],t,f,a[n[0][2]],n[1])||0==(r-=n[1]))return f.length;if(!(e-=n[1]))continue t;continue}}else{let s=2===e?h(f,t.unBloatedPoints,a):3===e?g(f,t.unBloatedPoints,a):e?k(f,t.unBloatedPoints):0;if(s){for(let n of s){if(e--,P(a[n].skills[0],t,f,a[n])||0==--r)return f.length;if(!e)continue t}continue}}if(d(t),--u<0)return f.length;if(! --e)continue t}}return f.length&&4===l&&function(t,s){let n=i.costs;for(const i of o.theseArmors){if(!t||!s.length)break;let l=i.augsPointer;if(l<6&&i.unBloatedPoints<s[0]||6===l&&i.quriousPoints<5+3*s[0])continue;let r=0,u=0;for(let t=0;t<l;++t){let e=i.augs[t];e["-Def"]?r=t:e["-Skill"]&&(u=t)}let f=6-i.augsPointer?0:r?5:u?10:"continue";if("continue"===f||e[i.quriousPoints-f]<s[0])continue;let a,c=Object.values(s).reverse();t:for(let t of c){if(i.quriousPoints-f<3*t)continue;let e=n[t];for(let t=0;t<e.len;++t)if(o.addSkillToSet(e.skills[t][1],i)){a=e.skills[t];break t}}if(a&&(f&&(i.quriousPoints-=f,i.unBloatedPoints=e[i.quriousPoints],i.augs.splice(r-1||u-1,1),--i.augsPointer),!P(a,i,s,n[a[2]])&&! --t))return}}(r,f),f.length}function g(t,e,s){let n=t.length,o=n;for(;o--;){if(3*t[o]>e)continue;let i=n;for(;--i>=o;){if(t[o]+2*t[i]>e||s[t[o]].total<=(o===i))continue;let l=n;for(;--l>=i;)if((i===l||t[o]+t[i]+t[l]<=e)&&s[t[l]].total>(l===o)+(l===i))return[t[o],t[i],t[l]]}}}function h(t,e,s){let n=t.length,o=n;for(;o--;){if(2*t[o]>e)continue;let i=n;for(;--i>=o;)if((o===i||t[o]+t[i]<=e)&&s[t[o]].total>(o===i))return[t[o],t[i]]}}function k(t,e){let s=t.length;for(;s--;)if(t[s]<=e)return[t[s]]}function m(t,e,s,n){let o=s.length;for(;o--;){let i=n[s[o]];if(s[o]*t<=e&&i.total-i.len>=t-1){let e=i.len;for(;e--;){let s=i.skills[e];if(s[0]>=t)return[s,t]}}}}function d(t,e){e||(e=t.augsPointer,6!==t.augsPointer&&++t.augsPointer);let s=t.fodderSkills[++t.skillsRemovedCount];s?(t.augs[e]={"-Skill":s},t.quriousPoints+=10):(t.augs[e]={"-Def":5},t.quriousPoints+=5),t.unBloatedPoints=~~(t.quriousPoints/3)}function P(t,e,s,n,i=1){let l=t[1],r=t[2];if(e.unBloatedPoints<r*i||e.augsPointer+i>6||!o.addSkillToSet(l,e))return!0;e.quriousPoints-=3*r*i,e.unBloatedPoints-=r*i;for(let t=0;t<i;++t)e.augs[e.augsPointer++]={"+Skill":l};if(t[0]-=i,0==(n.total-=i)){n.skills.pop(),--n.len;let t=s.length-1;if(s[t]===r)s.pop();else for(;t--;)if(s[t]===r){s.splice(t,1);break}}else if(0===t[0]){let e=n.skills,s=--n.len;if(e[s]!==t)for(let n=0;n<s;++n)if(e[n]===t){e[n]=e[s];break}}}function p(t,e){let s={charm:e,decos:t.arr.splice(0,t.pointer),augments:{}};for(let t of o.theseArmors)s.augments[t.type]={augs:t.augs.slice(0,t.augsPointer),name:t.name,type:t.type};return s}function S(t,e,o,l){let r=[0,0,0,0],u=l[3];if(l[0]){let t=e.pointer,s=l[2]-u;if(s)for(;t--;){let[o,u,f,a]=e.arr[t];const c=i.names.get(o)[2]-1;if(c>2)break;if(l[c]<u)continue;let g=n(~~(s/u),a);r[f-1]<g&&(r[f-1]=g)}}for(let e=0;e<4;++e)r[e]+=t[e];u&&(r[3]+=~~((u+r[1]+r[2])/2),r[1]+=u,r[2]+=u-u%2,r[0]=l[1]);for(let t=0;t<4;++t)o[t]=s(o[t],r[t])}function A(t){const i=[0,0,0,0,0];for(let t of o.theseArmors){if(t.quriousPoints<(6===t.augsPointer?8:3)||t.skillLen>4)continue;let s=0,o=0;for(let e of t.augs)e["-Def"]?++s:e["-Skill"]&&++o;let l=6-t.augsPointer,r=--l>=0?0:--s>=0?5:--o>=0?10:"continue";if("continue"===r)continue;let u=1;for(;t.quriousPoints>=r+3*u;){let f=n(5,e[~~((t.quriousPoints-r)/u)]);for(;f--;)++i[f];if(r+=--l>=0?0:--s>=0?5:--o>=0?10:"continue","continue"===r)break;++u}}for(let e=0;e<5;e++)t[e]=s(t[e],i[e]);return i}function q(t){for(let e of o.theseArmors){if(!e.fodderCount||e.quriousPoints<5&&6===e.augsPointer)continue;const o=e.fodderCount-(e.skillsRemovedCount+3),l=6-e.augsPointer,r=n(l+~~(e.quriousPoints/5),e.fodderCount);if(r)for(let l in e.skills){if(!o&&!i.names.has(l))continue;let u=0;i.names.has(l)&&(u=i.names.get(l)[7],!u)||(t[l]=s(t[l]||0,n(e.skills[l]-u,r)))}}}"undefined"!=typeof self&&(self.onmessage=e=>{for(let t=0;t<4;++t)l[t]=e.data.charmSlots[t];o=new r(e.data.armors),i=new t(e.data.skills);const{setLimiter:s,setBonus:n,canPrune:u}=e.data.skillInfo;e=null,postMessage(function(t,e,s){const n={sets:[{count:0,usedSkills:[]}],count:{sets:0,combos:0},stats:{quriousSkills:[0,0,0,0,0],armorSkills:{},remainingSlots:[0,0,0,0]},name:self.name};let l=n.sets[0],r=l.usedSkills;const u={arr:[],pointer:0},f=new Int8Array(4);let g=0,h=[],k=[];t:for(;;){for(let t of o.indexes){let e=o.theseArmors[o.indexByType[t[2]]],s=0;if(g&&e?.skills[g[1]]&&(s=e.skills[g[1]]),(++t[0]===t[1]||g&&!s)&&(t[0]=0,"leg"===t[2]&&e))return n.sets.pop(),n;if(s&&g[2]+s>=0&&(g=!1),g=o.setNextArmor(e,o.armors[t[2]][t[0]],g),0!==t[0])break}if(g)continue;if(e)for(const t in e)if(i.names.get(t)[3]-e[t]>0)continue t;for(h of(o.theseArmors.sort(((t,e)=>[e].len-[t].len||[t].unBloatedPoints-[e].unBloatedPoints)),l.count=0,i.charms))if(!(h[3]-h[8]<0)){for(k of(h[3]-=h[8],i.charms)){if(h===k||k[3]-(k[8]-1)<0)continue;k[3]-=k[8]-1,o.theseArmors.reset();let e=a(f,u,t,i.len,i);!e||e[0]&&c(e,o.theseArmors,i,t)?k[3]+=k[8]-1:(l.count||(q(n.stats.armorSkills),S(f,u,n.stats.remainingSlots,A(n.stats.quriousSkills))),r[l.count++]=p(u,[[h[1],h[8]],[k[1],k[8]-1]]),k[3]+=k[8]-1)}h[3]+=h[8]}if(!l.count)continue;++n.count.sets,n.count.combos+=l.count;let s=n.sets.length-1;if(!(11===s&&n.sets[--s].count>=l.count)){for(;s>0&&n.sets[s-1].count<l.count;)n.sets[s]=n.sets[--s];n.sets[s]=l,n.sets.length<11&&n.sets.push({count:0,usedSkills:[]}),l=n.sets[n.sets.length-1],r=l.usedSkills}}}(s,n)),self.location.href.includes("GitHub")&&self.close()})})();