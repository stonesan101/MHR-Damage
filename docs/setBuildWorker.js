(()=>{"use strict";const e=JSON.parse('{"decos":{"AffinitySliding":1,"BlastResistance":1,"Bombardier":1,"Botanist":1,"CarvingPro":1,"ChameleosBlessing":1,"DefenseBoost":1,"Defiance":1,"Diversion":1,"DragonAttack":1,"DragonResistance":1,"FireAttack":1,"FireResistance":1,"FlinchFree":1,"FreeMeal":1,"Geologist":1,"HornMaestro":1,"HungerResistance":1,"IceAttack":1,"IceResistance":1,"IntrepidHeart":1,"KushalaBlessing":1,"LeapofFaith":1,"MuckResistance":1,"ParalysisResistance":1,"PoisonAttack":1,"PoisonResistance":1,"RecoilDown":1,"RecoverySpeed":1,"ReloadSpeed":1,"ShockAbsorber":1,"SleepResistance":1,"SpeedSharpening":1,"SpiribirdsCall":1,"StaminaThief":1,"Steadiness":1,"StunResistance":1,"TeostraBlessing":1,"ThunderAttack":1,"ThunderResistance":1,"WallRunnerBoost":1,"WaterAttack":1,"WaterResistance":1,"Windproof":1,"AdrenalineRush":2,"Agitator":2,"Artillery":2,"AttackBoost":2,"Ballistics":2,"BladescaleHone":2,"BlastAttack":2,"BlightResistance":2,"Bludgeoner":2,"BubblyDance":2,"Burst":2,"ChargeMaster":2,"Coalescence":2,"Constitution":2,"Counterstrike":2,"CriticalBoost":2,"CriticalElement":2,"CriticalEye":2,"DivineBlessing":2,"ElementExploit":2,"Embolden":2,"EvadeExtender":2,"EvadeWindow":2,"Focus":2,"Foray":2,"Fortify":2,"Guard":2,"GuardUp":2,"Heroics":2,"ItemProlonger":2,"LatentPower":2,"LoadShells":2,"MarathonRunner":2,"MasterMounter":2,"MastersTouch":2,"MaximumMight":2,"MindsEye":2,"ParalysisAttack":2,"Partbreaker":2,"PeakPerformance":2,"PowerProlonger":2,"ProtectivePolish":2,"PunishingDraw":2,"QuickSheathe":2,"RapidMorph":2,"RazorSharp":2,"RecoveryUp":2,"Resentment":2,"Resuscitate":2,"SleepAttack":2,"Slugger":2,"SneakAttack":2,"SpareShot":2,"SpecialAmmoBoost":2,"SpeedEating":2,"StaminaSurge":2,"TremorResistance":2,"WallRunner":2,"WeaknessExploit":2,"Wide-Range":2,"WirebugWhisperer":2,"AmmoUp":3,"BloodRite":3,"CriticalDraw":3,"Earplugs":3,"GoodLuck":3,"GrinderS":3,"Handicraft":3,"HellfireCloak":3,"JumpMaster":3,"Mushroomancer":3,"NormalRapidUp":3,"OffensiveGuard":3,"PierceUp":3,"QuickBreath":3,"RapidFireUp":3,"Redirection":3,"SpreadUp":3,"StatusTrigger":3,"Tune-Up":3,"Bloodlust":4,"BowChargePlus":4,"Dragonheart":4},"maxLevel":{"AdrenalineRush":3,"AffinitySliding":1,"Agitator":5,"AmmoUp":3,"Artillery":3,"AttackBoost":7,"Ballistics":3,"Berserk":2,"BladescaleHone":3,"BlastAttack":3,"BlastResistance":3,"BlightResistance":3,"Bloodlust":3,"BloodRite":3,"Bludgeoner":3,"Bombardier":3,"Botanist":4,"BowChargePlus":1,"BubblyDance":3,"BuildupBoost":3,"Burst":3,"CaptureMaster":1,"CarvingMaster":1,"CarvingPro":1,"ChameleosBlessing":4,"ChargeMaster":3,"Coalescence":3,"Constitution":5,"Counterstrike":3,"CriticalBoost":3,"CriticalDraw":3,"CriticalElement":3,"CriticalEye":7,"DefenseBoost":7,"Defiance":5,"Dereliction":3,"Diversion":1,"DivineBlessing":3,"DragonAttack":5,"DragonConversion":3,"Dragonheart":5,"DragonResistance":3,"Earplugs":5,"ElementExploit":3,"Embolden":3,"EvadeExtender":3,"EvadeWindow":5,"FireAttack":5,"FireResistance":3,"FlinchFree":3,"Focus":3,"Foray":3,"Fortify":1,"FreeMeal":3,"FrenziedBloodlust":3,"Frostcraft":3,"Furious":3,"Geologist":3,"GoodLuck":3,"GrinderS":3,"Guard":5,"GuardUp":3,"Guts":3,"Handicraft":5,"Heaven-Sent":3,"HellfireCloak":4,"Heroics":5,"HornMaestro":1,"HungerResistance":3,"IceAttack":5,"IceResistance":3,"IntrepidHeart":2,"ItemProlonger":3,"JumpMaster":1,"KushalaBlessing":4,"LatentPower":5,"LeapofFaith":1,"LoadShells":2,"MailofHellfire":3,"MarathonRunner":3,"MasterMounter":1,"MastersTouch":3,"MaximumMight":3,"MindsEye":3,"MuckResistance":2,"Mushroomancer":3,"NormalRapidUp":3,"OffensiveGuard":3,"ParalysisAttack":3,"ParalysisResistance":3,"Partbreaker":3,"PeakPerformance":3,"PierceUp":3,"PoisonAttack":3,"PoisonResistance":3,"PowderMantle":3,"PowerProlonger":3,"ProtectivePolish":3,"PunishingDraw":3,"QuickBreath":1,"QuickSheathe":3,"RapidFireUp":3,"RapidMorph":3,"RazorSharp":3,"RecoilDown":3,"RecoverySpeed":3,"RecoveryUp":3,"Redirection":2,"ReloadSpeed":3,"Resentment":5,"Resuscitate":3,"ShockAbsorber":1,"SleepAttack":3,"SleepResistance":3,"Slugger":3,"SneakAttack":3,"SpareShot":3,"SpecialAmmoBoost":2,"SpeedEating":3,"SpeedSharpening":3,"SpiribirdsCall":1,"SpreadUp":3,"StaminaSurge":3,"StaminaThief":3,"StatusTrigger":3,"Steadiness":3,"Stormsoul":5,"Strife":3,"StunResistance":3,"TeostraBlessing":4,"ThunderAlignment":5,"ThunderAttack":5,"ThunderResistance":3,"TremorResistance":3,"Tune-Up":2,"WallRunner":3,"WallRunnerBoost":1,"WaterAttack":5,"WaterResistance":3,"WeaknessExploit":3,"Wide-Range":5,"WindAlignment":5,"WindMantle":3,"Windproof":3,"WirebugWhisperer":3},"qurious":{"AmmoUp":15,"AttackBoost":15,"CriticalBoost":15,"CriticalEye":15,"Guts":15,"MastersTouch":15,"NormalRapidUp":15,"PierceUp":15,"RapidFireUp":15,"RazorSharp":15,"SpareShot":15,"SpreadUp":15,"WeaknessExploit":15,"Agitator":12,"Artillery":12,"BloodRite":12,"Bloodlust":12,"BuildupBoost":12,"Burst":12,"Coalescence":12,"DragonConversion":12,"Frostcraft":12,"GoodLuck":12,"Handicraft":12,"LatentPower":12,"MaximumMight":12,"PeakPerformance":12,"RapidMorph":12,"Resentment":12,"Resuscitate":12,"SneakAttack":12,"Tune-Up":12,"AdrenalineRush":9,"Ballistics":9,"BladescaleHone":9,"ChargeMaster":9,"CriticalDraw":9,"CriticalElement":9,"Dragonheart":9,"Earplugs":9,"ElementExploit":9,"Focus":9,"Foray":9,"Furious":9,"GrinderS":9,"HellfireCloak":9,"Heroics":9,"MailofHellfire":9,"MindsEye":9,"Mushroomancer":9,"OffensiveGuard":9,"PowderMantle":9,"PowerProlonger":9,"ProtectivePolish":9,"Redirection":9,"StatusTrigger":9,"Strife":9,"WindMantle":9,"WirebugWhisperer":9,"BlastAttack":6,"BubblyDance":6,"ChameleosBlessing":6,"Constitution":6,"Counterstrike":6,"Defiance":6,"Embolden":6,"EvadeExtender":6,"EvadeWindow":6,"Guard":6,"GuardUp":6,"IntrepidHeart":6,"KushalaBlessing":6,"LoadShells":6,"MarathonRunner":6,"ParalysisAttack":6,"Partbreaker":6,"PoisonAttack":6,"PunishingDraw":6,"QuickSheathe":6,"RecoilDown":6,"ReloadSpeed":6,"SleepAttack":6,"Slugger":6,"SpecialAmmoBoost":6,"SpeedEating":6,"StaminaSurge":6,"Steadiness":6,"TeostraBlessing":6,"TremorResistance":6,"WallRunner":6,"AffinitySliding":3,"BlastResistance":3,"BlightResistance":3,"DefenseBoost":3,"Diversion":3,"DivineBlessing":3,"DragonAttack":3,"FireAttack":3,"FlinchFree":3,"Fortify":3,"FreeMeal":3,"HornMaestro":3,"HungerResistance":3,"IceAttack":3,"ItemProlonger":3,"LeapofFaith":3,"MasterMounter":3,"MuckResistance":3,"ParalysisResistance":3,"PoisonResistance":3,"RecoverySpeed":3,"RecoveryUp":3,"SleepResistance":3,"SpeedSharpening":3,"SpiribirdsCall":3,"StaminaThief":3,"StunResistance":3,"ThunderAttack":3,"WallRunnerBoost":3,"WaterAttack":3,"Wide-Range":3,"Windproof":3},"pointsPerSlot":[{"ChameleosBlessing":1,"Defiance":1,"IntrepidHeart":1,"KushalaBlessing":1,"PoisonAttack":1,"RecoilDown":1,"ReloadSpeed":1,"Steadiness":1,"TeostraBlessing":1,"AffinitySliding":1,"BlastResistance":1,"DefenseBoost":1,"Diversion":1,"DragonAttack":1,"FireAttack":1,"FlinchFree":1,"FreeMeal":1,"HornMaestro":1,"HungerResistance":1,"IceAttack":1,"LeapofFaith":1,"MuckResistance":1,"ParalysisResistance":1,"PoisonResistance":1,"RecoverySpeed":1,"SleepResistance":1,"SpeedSharpening":1,"SpiribirdsCall":1,"StaminaThief":1,"StunResistance":1,"ThunderAttack":1,"WallRunnerBoost":1,"WaterAttack":1,"Windproof":1,"Bombardier":1,"Botanist":1,"CarvingPro":1,"DragonResistance":1,"FireResistance":1,"Geologist":1,"IceResistance":1,"ShockAbsorber":1,"ThunderResistance":1,"WaterResistance":1},{"AttackBoost":1,"CriticalBoost":1,"CriticalEye":1,"MastersTouch":1,"RazorSharp":1,"SpareShot":1,"WeaknessExploit":1,"Agitator":1,"Artillery":1,"Burst":1,"Coalescence":1,"LatentPower":1,"MaximumMight":1,"PeakPerformance":1,"RapidMorph":1,"Resentment":1,"Resuscitate":1,"SneakAttack":1,"AdrenalineRush":1,"Ballistics":1,"BladescaleHone":1,"ChargeMaster":1,"CriticalElement":1,"ElementExploit":1,"Focus":1,"Foray":1,"Heroics":1,"MindsEye":1,"PowerProlonger":1,"ProtectivePolish":1,"WirebugWhisperer":1,"BlastAttack":1,"BubblyDance":1,"Constitution":1,"Counterstrike":1,"Embolden":1,"EvadeExtender":1,"EvadeWindow":1,"Guard":1,"GuardUp":1,"LoadShells":1,"MarathonRunner":1,"ParalysisAttack":1,"Partbreaker":1,"PunishingDraw":1,"QuickSheathe":1,"SleepAttack":1,"Slugger":1,"SpecialAmmoBoost":1,"SpeedEating":1,"StaminaSurge":1,"TremorResistance":1,"WallRunner":1,"ChameleosBlessing":1,"DefenseBoost":2,"Defiance":1,"DragonAttack":2,"FireAttack":2,"IceAttack":2,"IntrepidHeart":1,"KushalaBlessing":1,"PoisonAttack":1,"RecoilDown":1,"ReloadSpeed":1,"Steadiness":1,"TeostraBlessing":1,"ThunderAttack":2,"WaterAttack":2,"BlightResistance":1,"DivineBlessing":1,"Fortify":1,"ItemProlonger":1,"MasterMounter":1,"RecoveryUp":1,"Wide-Range":1,"AffinitySliding":1,"BlastResistance":1,"Diversion":1,"FlinchFree":1,"FreeMeal":1,"HornMaestro":1,"HungerResistance":1,"LeapofFaith":1,"MuckResistance":1,"ParalysisResistance":1,"PoisonResistance":1,"RecoverySpeed":1,"SleepResistance":1,"SpeedSharpening":1,"SpiribirdsCall":1,"StaminaThief":1,"StunResistance":1,"WallRunnerBoost":1,"Windproof":1,"Bludgeoner":1,"Bombardier":1,"Botanist":1,"CarvingPro":1,"DragonResistance":1,"FireResistance":1,"Geologist":1,"IceResistance":1,"ShockAbsorber":1,"ThunderResistance":1,"WaterResistance":1},{"AmmoUp":1,"NormalRapidUp":1,"PierceUp":1,"RapidFireUp":1,"SpreadUp":1,"AttackBoost":1,"CriticalBoost":1,"CriticalEye":1,"MastersTouch":1,"RazorSharp":1,"SpareShot":1,"WeaknessExploit":1,"BloodRite":1,"GoodLuck":1,"Handicraft":1,"Tune-Up":1,"Agitator":1,"Artillery":1,"Burst":1,"Coalescence":1,"Guard":2,"LatentPower":1,"MaximumMight":1,"PeakPerformance":1,"RapidMorph":1,"Resentment":1,"Resuscitate":1,"SneakAttack":1,"IntrepidHeart":2,"CriticalDraw":1,"Earplugs":1,"GrinderS":1,"HellfireCloak":1,"Mushroomancer":1,"OffensiveGuard":1,"Redirection":1,"StatusTrigger":1,"AdrenalineRush":1,"Ballistics":1,"BladescaleHone":1,"ChargeMaster":1,"CriticalElement":1,"ElementExploit":1,"Focus":1,"Foray":1,"Heroics":1,"MindsEye":1,"PowerProlonger":1,"ProtectivePolish":1,"Wide-Range":3,"WirebugWhisperer":1,"DefenseBoost":3,"DragonAttack":3,"FireAttack":3,"IceAttack":3,"ThunderAttack":3,"WaterAttack":3,"BlastAttack":1,"BubblyDance":1,"Constitution":1,"Counterstrike":1,"Embolden":1,"EvadeExtender":1,"EvadeWindow":1,"GuardUp":1,"LoadShells":1,"MarathonRunner":1,"ParalysisAttack":1,"Partbreaker":1,"PunishingDraw":1,"QuickSheathe":1,"SleepAttack":1,"Slugger":1,"SpecialAmmoBoost":1,"SpeedEating":1,"StaminaSurge":1,"TremorResistance":1,"WallRunner":1,"ChameleosBlessing":1,"Defiance":1,"KushalaBlessing":1,"PoisonAttack":1,"RecoilDown":1,"ReloadSpeed":1,"Steadiness":1,"TeostraBlessing":1,"BlightResistance":1,"DivineBlessing":1,"Fortify":1,"ItemProlonger":1,"MasterMounter":1,"RecoveryUp":1,"AffinitySliding":1,"BlastResistance":1,"Diversion":1,"FlinchFree":1,"FreeMeal":1,"HornMaestro":1,"HungerResistance":1,"LeapofFaith":1,"MuckResistance":1,"ParalysisResistance":1,"PoisonResistance":1,"RecoverySpeed":1,"SleepResistance":1,"SpeedSharpening":1,"SpiribirdsCall":1,"StaminaThief":1,"StunResistance":1,"WallRunnerBoost":1,"Windproof":1,"JumpMaster":1,"QuickBreath":1,"Bludgeoner":1,"Bombardier":1,"Botanist":1,"CarvingPro":1,"DragonResistance":1,"FireResistance":1,"Geologist":1,"IceResistance":1,"ShockAbsorber":1,"ThunderResistance":1,"WaterResistance":1},{"AmmoUp":2,"NormalRapidUp":2,"PierceUp":2,"SpreadUp":2,"AttackBoost":2,"CriticalEye":2,"MastersTouch":2,"RazorSharp":2,"GoodLuck":2,"Handicraft":2,"Tune-Up":2,"Agitator":2,"Artillery":2,"Burst":2,"Coalescence":2,"LatentPower":2,"MaximumMight":2,"PeakPerformance":2,"RapidMorph":2,"Resentment":2,"Resuscitate":2,"SneakAttack":2,"CriticalDraw":2,"Earplugs":2,"GrinderS":2,"HellfireCloak":2,"Mushroomancer":2,"OffensiveGuard":2,"Redirection":2,"StatusTrigger":2,"AdrenalineRush":2,"Ballistics":2,"BladescaleHone":2,"ChargeMaster":2,"CriticalElement":2,"ElementExploit":2,"Focus":2,"Foray":2,"Heroics":2,"MindsEye":2,"PowerProlonger":2,"ProtectivePolish":2,"WallRunner":3,"WirebugWhisperer":2,"Defiance":3,"PoisonAttack":3,"Steadiness":3,"RapidFireUp":1,"CriticalBoost":1,"SpareShot":1,"WeaknessExploit":1,"DefenseBoost":5,"Bloodlust":1,"BloodRite":1,"BlastAttack":2,"BubblyDance":2,"Constitution":2,"Counterstrike":2,"Embolden":2,"EvadeExtender":2,"EvadeWindow":2,"Guard":2,"GuardUp":2,"LoadShells":2,"MarathonRunner":2,"ParalysisAttack":2,"Partbreaker":2,"PunishingDraw":2,"QuickSheathe":2,"SleepAttack":2,"Slugger":2,"SpecialAmmoBoost":2,"SpeedEating":2,"StaminaSurge":2,"TremorResistance":2,"Wide-Range":4,"DragonAttack":4,"FireAttack":4,"IceAttack":4,"IntrepidHeart":2,"ThunderAttack":4,"WaterAttack":4,"Dragonheart":1,"ItemProlonger":3,"BlastResistance":3,"FlinchFree":3,"FreeMeal":3,"HungerResistance":3,"ParalysisResistance":3,"PoisonResistance":3,"RecoverySpeed":3,"SleepResistance":3,"SpeedSharpening":3,"StaminaThief":3,"StunResistance":3,"Windproof":3,"BlightResistance":2,"DivineBlessing":2,"RecoveryUp":2,"ChameleosBlessing":1,"KushalaBlessing":1,"RecoilDown":1,"ReloadSpeed":1,"TeostraBlessing":1,"Fortify":1,"MasterMounter":1,"AffinitySliding":1,"Diversion":1,"HornMaestro":1,"LeapofFaith":1,"MuckResistance":1,"SpiribirdsCall":1,"WallRunnerBoost":1,"BowChargePlus":1,"JumpMaster":1,"QuickBreath":1,"Bludgeoner":1,"Bombardier":3,"Botanist":3,"CarvingPro":1,"DragonResistance":3,"FireResistance":3,"Geologist":3,"IceResistance":3,"ShockAbsorber":1,"ThunderResistance":3,"WaterResistance":3}]}');let{decos:t,maxLevel:i,qurious:s,pointsPerSlot:a}=e;const max=(e,t)=>e>=t?e:t,getMostSkills=(e,t)=>{for(const i of e)if("memo"!==i){for(let e=0;e<4;e++)t.remainingSlots[e]=max(t.remainingSlots[e]||0,i.remainingSlots[e]);for(let e=0;e<5;e++)t.quriousSkills[e]=max(t.quriousSkills[e]||0,i.quriousSkills[e]);for(const[e,s]of Object.entries(i.armorSkills))t.armorSkills[e]=max(t.armorSkills[e]||0,s)}},slotDecos=(e,t,i)=>{[0,3,2,1].forEach((s=>{for(const[n,r]of a[s]){if(!t[s])break;if(!e[n])continue;const a=Math.min(t[s],~~(-e[n]/r));a&&(e[n]+=a*r,t[s]-=a,i.decos.push([n,r,"Slot lvl"+(+s+1),a]))}}));const n={};return Object.entries(e).forEach((e=>{const t=s[e[0]]/3;e[1]>=0||!e[0]||!t||(n[t]||(n[t]={total:0}),n[t].total-=e[1],n[t][e[0]]=-e[1])})),[n,t]};const findBestSum1=(e,t)=>{for(let i=e.length-1;i>=0;--i)if(+e[i]<=t)return[[+e[i]],+e[i]]},getPoints=(e,t)=>{e.fodderSkills.length>0?(t[e.name].push({"-Skill":e.fodderSkills[++e.skillsRemovedCount]}),e.quriousPoints+=10):(t[e.name].push({"-Def":5}),e.quriousPoints+=5),e.unBloatedPoints=~~(e.quriousPoints/3)},minimumCostForPossibleAugs=(e,t,i)=>{let s=0;for(let a=0;e>0&&a<t.length;++a){const n=Math.min(i[t[a]].total,e);s+=n*+t[a],e-=n}return s};function pushAugs(e,t,i,a,n=!1){if(!i.innateSkills.has(e)){if(!(i.innateSkills.size<5))return a&&console.log(i.name,e),!0;i.innateSkills.add(e)}n&&(i.quriousPoints-=s[e],i.unBloatedPoints=~~(i.quriousPoints/3)),i.quriousPoints>=0?t[i.name].push({"+Skill":e}):console.log("error")}function updateRemainingSkills(e,t){if(0==--e.total)return!0;0==--e[t]&&delete e[t]}function getBestCombos(e,t,i,s){switch(e){case 2:return function(e,t,i){let s=[[],0];for(let a=0,n=e.length;0!==a||!s[1];){if(++a>=n){if(s[1])return s;++s[1],a=0}let r=+e[a];if(t[r].total)for(let o=a;o<n;o++){let a=+e[o];if(r+a>i)break;if(!(r+a<=s[1]||t[a].total<1+(r===a))&&(s=[[r,a],r+a],s[1]===i))return s}}return s}(t,i,s>10?10:s);case 3:return function(e,t,i){let s=[[],0];for(let a=0,n=e.length;0!==a||!s[1];){if(++a>=n){if(s[1])return s;++s[1],a=0}let r=+e[a];for(let o=a;o<n;o++){let a=+e[o];if(!(t[a].total<1+(r===a)))for(let l=o;l<n;l++){let n=+e[l];if(r+a+n>i)break;if(!(r+a+n<=s[1]||t[n].total<1+(n===r)+(n===a)||(s=[[r,a,n],r+a+n],s[1]!==i)))return s}}}return s}(t,i,s>15?15:s);default:return findBestSum1(t,s>5?5:s)||[0,1]}}const combosFullRestriction=(e,t,i)=>{let s=Math.min(5,~~(i/t));for(;s>=0;){if(!e[s]||e[s].total<t){--s;continue}let i=Object.entries(e[s]);for(let e=1;e<i.length;++e)if(i[e][1]>=t)return[[i[e][0],t]];--s}return!1},combosPartalRestriction=(e,t,i)=>{let s=t.length;for(;s--;){if(2*t[s]>i||e[t[s]].total<2)continue;const a=Object.entries(e[t[s]]).slice(1);for(const n of a){if(n[1]<2)continue;if(n[1]>=3)return[[n[0],3]];let a=t.filter((a=>(a!==t[s]||e[t[s]].total>=3)&&2*t[s]+a<=i));if(!a)break;let r=a[a.length-1];const o=Object.entries(e[r]).slice(1);for(let e=0;;){const[t,i]=o[e];if(i%2==1||++e===o.length)return[n,[t,1]]}}}return!1},getQuriousSkills=(e,t,i,a,n,r)=>{let o=0;Object.values(e).forEach((e=>o+=e.total));let l=Object.keys(e);if(o>5*n)return!1;for(let e of t)i[e.name]=e.augs.slice();for(const c of a){let a,u=t[c];if(u.hasBeenAugmented=!1,u.innateSkills=new Set(Object.keys(u.skills)),u.quriousPoints=u.startingQuriousPoints,u.unBloatedPoints=~~(u.quriousPoints/3),o<=0||i[u.name].length>=6)continue;let d=6-i[u.name].length,g=5-u.innateSkills.size,h=Math.min(d,o,n),f=d-o;const S=minimumCostForPossibleAugs(h,l,e);for(;--f>=0||S>u.unBloatedPoints&&--h>0;)getPoints(u,i);if(h){if(g<h){for(let t of u.requestedSkills){const a=s[t]/3;for(;g<h&&e[a]&&e[a][t]&&u.unBloatedPoints>=a;)pushAugs(t,i,u,r,!0)||(--h,--o,updateRemainingSkills(e[a],t)&&(delete e[a],l=Object.keys(e)))}if(g<h){let t;for(;!t&&1===g&&h>1;)t=combosFullRestriction(e,h,u.unBloatedPoints),!1===t&&(--h,getPoints(u,i));if(void 0===t&&(t=combosPartalRestriction(e,l,u.unBloatedPoints),!1===t&&(--h,getPoints(u,i))),t){u.hasBeenAugmented=!0;for(let a of t)for(;a[1]--;)pushAugs(a[0],i,u,r,!0)||(--o,updateRemainingSkills(e[s[a[0]]/3],a[0])&&(delete e[s[a[0]]/3],l=Object.keys(e)))}}}if(!u.hasBeenAugmented){if(a=getBestCombos(h,l,e,u.unBloatedPoints),!a[0])continue;if((u.quriousPoints-=3*a[1])<0||isNaN(u.quriousPoints)){r&&console.log(`${u.name} has ${u.quriousPoints} points}`,u);continue}for(const t of a[0]){const s=Object.keys(e[t])[1];pushAugs(s,i,u,r)||(--o,updateRemainingSkills(e[t],s)&&(delete e[t],l=Object.keys(e)))}}}}const replaceAugment=(t,s,a)=>{s&&t.augs.splice(s,1);const n=findBestSum1(a,~~(t.quriousPoints/3)),c=t.innateSkills.size<5?Object.keys(e[n[0]])[1]:Object.keys(e[n[0]]).filter((e=>t.innateSkills.has(e)))[0];pushAugs(c,i,t,r,!0)||(--o,updateRemainingSkills(e[n[0]],c)&&delete e[n[0]],l=Object.keys(e))};e:for(const s of t){if(!o||n<4||!l.length)break;for(let t=s.augs.length-1;t>=0&&s.quriousPoints>=8;t--){let a=s.innateSkills.size<5?l:l.filter((t=>Object.keys(e[t]).some((e=>s.innateSkills.has(e)))));if(!a.length)continue e;i[s.name].length<6&&s.quriousPoints>=3*+a[0]?replaceAugment(s,!1,a):s.augs[t]["-Def"]&&s.quriousPoints-5>=3*+a[0]?(s.quriousPoints-=5,replaceAugment(s,t,a)):s.augs[t]["-Skill"]&&s.quriousPoints-10>=3*+a[0]&&(s.quriousPoints-=10,replaceAugment(s,t,a))}}return!l.length};function testSets(e,t,i,s,a,n,r){let o={};o[e.charm[0][0]]=e.charm[0][1],o[e.charm[1][0]]=e.charm[1][1],e.decos.forEach((([e,t,,i])=>{o[e]=(o[e]||0)+t*i}));for(const t of e.armorSkills)o[t[0]]=(o[t[0]]||0)+t[1];for(let i of t)e.augments[i.name].forEach((e=>{e["+Skill"]&&(o[e["+Skill"]]=(o[e["+Skill"]]||0)+1)}));if(Object.entries(i).every((e=>o[e[0]]+e[1]>=0)))return!0;n.push({skillsNeeded:i,innateArmorSkills:e.armorSkills,charmSkills:e.charm,initalDecos:r,decosRecord:e.decos,skillsNeededAfterDecos:s,skillAugmentsRecorded:e.augments,remainingSkillsListAfterAugment:a})}function findExtraDecorationSkills(e,t,i){for(let a=i.length;a>0;a--)t.forEach((t=>{const n=s[t[0]]/3,r=t[2].slice(-1)-1;if(a!==n||i[a-1]<t[1])return;const o=Math.min(t[3],Math.floor(i[a-1]/t[1]));e[r]+=o,i[a-1]-=o}));return e}function findExtraQuriousSkills(e,t){const i=[0,0,0,0,0];for(const s of e){if(s.quriousPoints<8||s.innateSkills?.size>4)continue;let e=0;const a=5-(s.innateSkills?.size||Object.keys(s.skills).length);let n=1;for(let i in t[s.name])"-Def"===i&&++e;let r=6-t[s.name].length,o=r>0?0:--e>=0?5:10;for(;(s.quriousPoints-o)/(3*n)>=1&&n<=a;){let t=Math.min(5,~~((s.quriousPoints-o)/(3*n)));for(;--t>=0;)++i[t];r>0&&--r,o+=r>0?0:--e>=0?5:10,++n}}return i}function findExtraArmorSkills(e,t,i={}){for(const s of e){if(s.quriousPoints<5||!s.fodderCount)continue;let e={};for(let i of t[s.name])i["-Skill"]&&(e["-Skill"]=(e["-Skill"]||0)+1);Object.entries(e).forEach((e=>{i[e[0]]=(i[e[0]]||0)+Math.min(e[1],~~(s.quriousPoints/5))}))}return i}self.onmessage=e=>{const n={sets:[],count:{sets:0,combos:0},stats:{quriousSkills:[0,0,0,0,0],armorSkills:{},remainingSlots:[0,0,0,0]}};a.forEach(((i,n)=>{let r=[];for(let t in i)e.data.skills[t]&&r.push([t,i[t]]);a[n]=r.sort(((e,i)=>s[i[0]]*i[1]-s[e[0]]*e[1]||t[i[0]]-t[e[0]]))}));let r=!1;const{theseCharms:o,skills:l,armors:c,permutations:u}=e.data,{setLimiter:d,charmNeeded:g,runChecks:h}=e.data.skillInfo;e:for(const a of u){let u=[c.helm[a[0]],c.chest[a[1]],c.arm[a[2]],c.waist[a[3]],c.leg[a[4]]];r=n.sets.length>=20;const f=new Map,S=[],p={};for(const e of u)for(const t of e.requestedSkills)if(p[t]){if(p[t]+e.skills[t]>i[t])continue e;p[t]+=e.skills[t]}else p[t]=e.skills[t];const k=Object.entries(p),m=[0,0,0,0];[u[0].decos,u[1].decos,u[2].decos,u[3].decos,u[4].decos,e.data.charmSlots].forEach((e=>e.forEach(((e,t)=>m[t]+=e))));const R=[0,1,2,3,4].sort(((e,t)=>u[e].skillLimitation-u[t].skillLimitation)),B=[];t:for(const e of o){if(g)for(const t in g)if((p[t]||0)+(e[t]||0)<g[t])continue t;for(let t in e)if(p[t]&&p[t]+e[t]>i[t])continue t;let a={qurious:0,decos:[0,0,0,0]};const n={decos:[],augments:{},armorSkills:k,charm:[]};for(const r in e){if(p[r]&&p[r]+e[r]>i[r])continue e;a.qurious+=s[r]*e[r],a.decos[t[r]-1]+=e[r],n.charm.push([r,e[r]])}if(a=a.toString(),f.has(a)&&!1===f.get(a))continue;if(r&&f.has(a)){B.push("memo");continue}const o={};for(const t in l)l[t]+(p[t]||0)+(e[t]||0)<0&&(o[t]=l[t]+(p[t]||0)+(e[t]||0));const[c,P]=slotDecos(o,m.slice(),n);if(getQuriousSkills(c,u,n.augments,R,d,h)){if(!h||testSets(n,u,l,o,c,S,m)){r&&f.set(a,!0);let e=findExtraQuriousSkills(u,n.augments);B.push({usedSkills:n,armors:[[u[0].name,u[0]],[u[1].name,u[1]],[u[2].name,u[2]],[u[3].name,u[3]],[u[4]?.name,u[4]]],quriousSkills:e,remainingSlots:findExtraDecorationSkills(P,n.decos,e.slice()),armorSkills:findExtraArmorSkills(u,n.augments),decoArr:m})}}else f.set(a,!1)}S.length&&console.log(structuredClone(S)),B.length&&(getMostSkills(B,n.stats),n.count.combos+=B.length,++n.count.sets,n.sets.length<20&&n.sets.push(B))}postMessage({final:n})}})();