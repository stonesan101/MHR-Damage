(()=>{const t=(t,e)=>t>=e?t:e,e=(t,e)=>t<=e?t:e;class s{constructor(t){this.arrs=t.reverse(),this.len=t.length,this.names=new Map,this.charms=[],this.previousObj={total:0},this.previousCost=0,this.starting=[];let e=this.len;for(;e--;){let t=this.arrs[e];this.names.set(t[1],t),this.starting.push([t[1],t[3]]),t[8]&&t[3]>=t[8]-1&&this.charms.push(t)}this.costKeys={keys:[0],pointer:0},this.costs=["",{total:1,skills:[],len:0},{total:2,skills:[],len:0},{total:1,skills:[],len:0},{total:1,skills:[],len:0},{total:3,skills:[],len:0}]}setCharmMemo(t,e){for(let s=0,o=this.charms.length;s<o;s++){let i=this.charms[s],n=i[3],r=i[8];t[s+2*o]=n,t[s+o]=n-r,t[s]=(i[2]||10)*(n-r<i[7]?0:n>=r?r:r-t[s+o]),e[s+2*o]=n,e[s+o]=n-(r-1),e[s]=(i[2]||10)*(n-(r-1)<i[7]?0:n>=r-1?r-1:r-1-e[s+o])}}useDecorationSlots(t,s,o){let i,n=this.len;t:for(;n--;)if(i=this.arrs[n],o&&(i[0]=i[3]),!(i[0]<=0)){for(const o of i[4]){const n=o[0]-1,r=o[1];if(!t[n]||i[0]<r)continue;const l=e(r>1?~~(i[0]/r):i[0],t[n]);t[n]-=l,i[0]-=l*r;let u=s.arr[s.pointer++];if(u?(i[1]!==u[0]&&(u[0]=i[1]),r!==u[1]&&(u[1]=r),n+1!==u[2]&&(u[2]=n+1),l!==u[3]&&(u[3]=l)):s.arr[s.pointer-1]=[i[1],r,n+1,l],!i[0])continue t}if(!o){if(!i[2])return!0;this.previousCost===i[2]?(this.previousObj.total+=i[0],this.previousObj.skills[this.previousObj.len++]=i):(this.previousCost=i[2],this.costKeys.keys[this.costKeys.pointer++]=this.previousCost,this.previousObj=this.costs[this.previousCost],this.previousObj.len=1,this.previousObj.total=i[0],this.previousObj.skills[0]=i)}}!o&&this.costKeys.pointer>1&&(this.costKeys.keys.length>this.costKeys.pointer&&this.costKeys.keys.splice(this.costKeys.pointer,1/0),this.costKeys.keys.reverse())}}const o=new Int8Array(49);for(let t=3,e=0;t<49;t++)t%3||++e,o[t]=e;let i,n;const r=new Int8Array(4);class l{constructor(t){this.armors=t,this.augmentRemovalOrder=[0,1,2,3,4],this.indexes=["arm","waist","helm","chest","leg"].map((t=>[-1,this.armors[t].length,t])),this.indexByType={helm:0,chest:1,arm:2,waist:3,leg:4},this.theseArmors=[],this.theseArmors.reset=function(){for(const t of this)t.augs[1]!==t.initAugs[1]&&(t.augs[1]=t.initAugs[1]),t.augs[2]!==t.initAugs[2]&&(t.augs[2]=t.initAugs[2]),t.augsPointer=3,t.skillLen=t.len,t.skillsRemovedCount=-1,t.quriousPoints=t.startingQuriousPoints,t.unBloatedPoints=o[t.startingQuriousPoints]}}getPoints(t,e){if(!e){if(e=t.augsPointer,6===t.augsPointer)return;++t.augsPointer}let s=t.fodderSkills[++t.skillsRemovedCount];s?(t.augs[e]={"-Skill":s},t.quriousPoints+=10):(t.augs[e]={"-Def":5},t.quriousPoints+=5),t.unBloatedPoints=~~(t.quriousPoints/3)}setAugmentRemovalOrder(){this.theseArmors.sort(((t,e)=>[e].len-[t].len||[t].unBloatedPoints-[e].unBloatedPoints));let t=this.theseArmors,e=0,s=4;for(let o=0;o<5;++o)this.indexByType[t[o].type]=o,t[o].decoAugs&&(this.augmentRemovalOrder[t[o].len<3?e++:s--]=t[o]);this.augmentRemovalOrder.splice(e,s-e+1)}setNextArmor(t,e){let s=0;if(t)for(let e of t.requestedSkills)n.names.get(e)[3]+=t.skills[e];for(let s=0;s<4;++s)r[s]+=(-t?.decos[s]||0)+e.decos[s];this.theseArmors[this.indexByType[e.type]]=e;for(let t of e.requestedSkills)(n.names.get(t)[3]-=e.skills[t])<0&&++s;return s}addSkillToSet(t,e){let s=e.skillLen;for(;s--;)if(e.innateSkills[s]===t)return!0;if(e.skillLen<5)return e.innateSkills[e.skillLen++]=t,!0}removeUnusedSlotAugments(t){for(let e of this.augmentRemovalOrder){if(!t[3]&&!t[1])break;let s=e.decoAugs,o=s.length-1,n=s[o];t:for(;o-(e.len>2);){for(let e=0;e<4;++e)if(t[e]+(s[o-1][e]-n[e])<0)break t;--o}if(o===s.length-1)continue;let r=s[o];0===o?i.getPoints(e,2):e.augs[2]={"+Slots":-r[5]};let l=n[5]-r[5];e.unBloatedPoints+=l/3,e.quriousPoints+=l;for(let e=0;e<4;++e)t[e]+=r[e]-n[e]}}}function u(t,e,s){const r=e.costKeys,l=e.costs;let u=0;for(let t of r.keys)u+=l[t].total;let d=5*s-u;if(d<0)return!0;t:for(let e of t.theseArmors){if(u<=0||d<0)return r.pointer;let s=3,o=5-e.skillLen;for(;s>u;)t.getPoints(e),--s;for(;s;)if(s>o){let i=1===o?h(s,e.unBloatedPoints,r,l,e):h(s-1,e.unBloatedPoints-r[0],r,l,e);if(i){if(m(i[0],e,r,l[i[0][2]],i[1]))return!0;if(0==(u-=i[1]))return r.pointer;if(0==(s-=i[1]))continue t}else{if(t.getPoints(e),--d<0)return r.pointer;if(! --s)continue t}}else{let o=2===s?f(r,e.unBloatedPoints,l):3===s?a(r,e.unBloatedPoints,l):1===s?c(r,e.unBloatedPoints):0;if(o){for(let t of o){if(m(l[t].skills[0],e,r,l[t]))return!0;if(! --u)return r.pointer;if(! --s)continue t}continue}if(t.getPoints(e),--d<0)return r.pointer;if(! --s)continue t}}return r.pointer&&4===s&&function(t,e){let s=n.costs;for(const n of i.theseArmors){if(!t||!e.pointer)break;let r=n.augsPointer;if(r<6&&n.unBloatedPoints<e.keys[0]||6===r&&n.quriousPoints<5+3*e.keys[0])continue;let l=0,u=0;for(let t=0;t<r;++t){let e=n.augs[t];e["-Def"]?l=t:e["-Skill"]&&(u=t)}let a=6-n.augsPointer?0:l?5:u?10:"continue";if("continue"===a||o[n.quriousPoints-a]<e.keys[0])continue;let f,c=e.keys.slice(0,e.pointer);t:for(let t of c){if(n.quriousPoints-a<3*t)continue;let e=s[t];for(let t=0;t<e.len;++t)if(i.addSkillToSet(e.skills[t][1],n)){f=e.skills[t];break t}}if(f&&(a&&(n.quriousPoints-=a,n.unBloatedPoints=o[n.quriousPoints],n.augs.splice(l-1||u-1,1),--n.augsPointer),!m(f,n,e,s[f[2]])&&! --t))return}}(u,r),r.pointer}function a(t,e,s){let o=t.pointer,i=t.keys,n=o;for(;n--;){if(3*i[n]>e)continue;let t=o;for(;--t>=n;){if(i[n]+2*i[t]>e||s[i[n]].total<=(n===t))continue;let r=o;for(;--r>=t;)if((t===r||i[n]+i[t]+i[r]<=e)&&s[i[r]].total>(r===n)+(r===t))return[i[n],i[t],i[r]]}}}function f(t,e,s){let o=t.pointer,i=t.keys,n=o;for(;n--;){if(2*i[n]>e)continue;let t=o;for(;--t>=n;)if((n===t||i[n]+i[t]<=e)&&s[i[n]].total>(n===t))return[i[n],i[t]]}}function c(t,e){let s=t.pointer;for(;s--;)if(t.keys[s]<=e)return[t.keys[s]]}function h(t,e,s,o,i){let r=s.pointer,l=s.keys;for(;r--;){let s=l[r],u=o[s];if(e-s*t>2&&i.requestedSkills)for(const t of i.requestedSkills)if(n.names.get(t)[0]>0)return[n.names.get(t),1];if(s*t<=e&&u.total-u.len>=t-1){let e=u.len;for(;e--;){let s=u.skills[e];if(s[0]>=t)return[s,t]}}}}function m(t,e,s,o,n=1){let r=t[1],l=t[2];if(e.unBloatedPoints<l*n||e.augsPointer+n>6||!i.addSkillToSet(r,e))return!0;e.quriousPoints-=3*l*n,e.unBloatedPoints-=l*n;for(let t=0;t<n;++t)e.augs[e.augsPointer++]={"+Skill":r};if(t[0]-=n,0==(o.total-=n)){o.skills.pop(),--o.len;let t=--s.pointer;if(s.keys[t]===l)return;for(;--t;)if(s.keys[t]===l)return void s.keys.splice(t,1);return void s.keys.shift()}if(t[0])return;let u=o.skills,a=--o.len;if(u[a]!==t)for(let e=0;e<a;++e)if(u[e]===t)return void(u[e]=u[a])}function d(s,o,i,r){let l=new Int8Array(4),u=r[3];if(r[0]){let t=o.pointer,s=r[2]-u;if(s)for(;t--;){let[i,u,a,f]=o.arr[t];const c=n.names.get(i)[2]-1;if(c<3)break;if(r[c]<u)continue;let h=e(~~(s/u),f);l[a-1]<h&&(l[a-1]=h)}}for(let t=0;t<4;++t)l[t]+=s[t];u&&(l[3]+=~~((u+l[1]+l[2])/2),l[1]+=u,l[2]+=u-u%2,l[0]=r[1]);for(let e=0;e<4;++e)i[e]=t(i[e],l[e])}function g(s){const n=new Int8Array(5);for(let t of i.theseArmors){if(t.quriousPoints<(6===t.augsPointer?8:3)||t.skillLen>4)continue;let s=0,i=0;for(let e of t.augs)e["-Def"]?++s:e["-Skill"]&&++i;let r=6-t.augsPointer,l=--r>=0?0:--s>=0?5:--i>=0?10:"continue";if("continue"===l)continue;let u=1;for(;t.quriousPoints>=l+3*u;){let a=e(5,o[~~((t.quriousPoints-l)/u)]);for(;a--;)++n[a];if(l+=--r>=0?0:--s>=0?5:--i>=0?10:"continue","continue"===l)break;++u}}for(let e=0;e<5;e++)s[e]=t(s[e],n[e]);return n}function k(s){for(let o of i.theseArmors){if(!o.fodderCount||o.quriousPoints<5&&6===o.augsPointer)continue;const i=o.fodderCount-(o.skillsRemovedCount+3),r=6-o.augsPointer,l=e(r+~~(o.quriousPoints/5),o.fodderCount);if(!l)continue;let u=Object.keys(o.skills);for(let r of u){if(!i&&!n.names.has(r))continue;let u=0;n.names.has(r)&&(u=n.names.get(r)[7],!u)||(s[r]=t(s[r]||0,e(o.skills[r]-u,l)))}}}"undefined"!=typeof self&&(self.onmessage=t=>{for(let e=0;e<4;++e)r[e]=t.data.charmSlots[e];i=new l(t.data.armors),n=new s(t.data.skills);const{setLimiter:e,setBonus:o,charmNeeded:a}=t.data.skillInfo;t=null;const f=!self.location.href.includes("github"),c=function(t,e,s,o){const l={sets:[{count:0,usedSkills:[{charms:[],decos:{arr:[],pointer:0},augments:{}}]}],count:{sets:0,combos:0},stats:{quriousSkills:new Int8Array(5),armorSkills:{},remainingSlots:new Int8Array(4)},name:self.name};let a=l.sets[l.count.sets],f=a.usedSkills[a.count],c=f.decos,h=new Int8Array(3*n.charms.length),m=new Int8Array(3*n.charms.length);const p=new Int8Array(4);let y=[];t:for(;;){let o=0;for(let t of i.indexes){let e=i.theseArmors[i.indexByType[t[2]]];if(++t[0]===t[1]&&(t[0]=0,"leg"===t[2]))break t;if(i.setNextArmor(e,i.armors[t[2]][t[0]])&&++o,0!==t[0])break}if(o)continue;if(e)for(const t in e)if(n.names.get(t)[3]>0)continue t;if(s){y=[];for(let t of Object.keys(s))n.names.get(t)[3]>0&&y.push(n.names.get(t))}i.setAugmentRemovalOrder(),n.setCharmMemo(h,m);for(let e=0,s=n.charms.length;e<s;e++)if(!(h[e]<12)){n.charms[e][3]=h[e+s];e:for(let o=0;o<s;o++)if(!(e===o||m[o]<8)){if(y){n.charms[o][3]=m[o+s];for(let t of y)if(t[3]>0){n.charms[o][3]=m[o+2*s];continue e}}i.theseArmors.reset();for(let t=0;t<4;++t)p[t]=r[t];if(f.decos.pointer=0,n.costKeys.pointer=0,n.previousCost=0,n.useDecorationSlots(p,f.decos,!0),i.removeUnusedSlotAugments(p),n.useDecorationSlots(p,f.decos,!1),u(i,n,t))n.charms[o][3]=m[o+2*s];else{a.count||(k(l.stats.armorSkills),d(p,c,l.stats.remainingSlots,g(l.stats.quriousSkills))),f.charms[0]=[n.charms[e][1],n.charms[e][8]],f.charms[1]=[n.charms[o][1],n.charms[o][8]-1];for(let t of i.theseArmors)f.augments[t.type]={augs:t.augs.slice(0,t.augsPointer),name:t.name,type:t.type};++a.count,a.usedSkills[a.count]||(a.usedSkills[a.count]={charms:[],decos:{arr:[],pointer:0},augments:{}}),f=a.usedSkills[a.count],c=f.decos,n.charms[o][3]=m[o+2*s]}}n.charms[e][3]=h[e+2*s]}if(!a.count)continue;++l.count.sets,l.count.combos+=a.count;let P=l.sets.length-1;if(P&&l.sets[P-1].count<a.count){for(;P>0&&l.sets[P-1].count<a.count;)l.sets[P]=l.sets[--P];l.sets[P]=a}l.sets.length<6&&l.sets.push({count:0,usedSkills:[{charms:[],decos:{arr:[],pointer:0},augments:{}}]}),a=l.sets[l.sets.length-1],a.count=0,f=a.usedSkills[0],c=f.decos}if(1===l.sets.length)return;return l.sets.pop(),l.sets.forEach((t=>{t.usedSkills.pop(),t.usedSkills.forEach((t=>{t.decos=t.decos.arr.splice(0,t.decos.pointer)}))})),l}(e,o,a);postMessage(c),f||self.close()})})();