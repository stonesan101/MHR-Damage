(()=>{class t{constructor(t){this.arrs=t.reverse(),this.len=t.length,this.names=new Map,this.charms=[],this.costHash=[],this.lastObj=0,this.costs=["",{total:1,skills:[],len:0},{total:2,skills:[],len:0},{total:1,skills:[],len:0},{total:1,skills:[],len:0},{total:3,skills:[],len:0}];let e=this.len;for(;e--;){let t=this.arrs[e];this.names.set(t[1],t),t[8]&&t[3]>=t[8]-1&&this.charms.push(t)}}setSameCost(t){this.lastObj.total+=t[0],this.lastObj.skills[this.lastObj.len]=t,++this.lastObj.len}setNewCost(t,e){this.lastObj=this.costs[e],this.lastObj.len=1,this.lastObj.total=t[0],this.lastObj.skills=[t]}}let e,s;const n=new Int8Array(4);class o{constructor(t){this.armors=t,this.indexes=["arm","waist","helm","chest","leg"].map((t=>[-1,this.armors[t].length,t])),this.indexByType={helm:0,chest:1,arm:2,waist:3,leg:4},this.theseArmors=[],this.theseArmors.reset=function(){for(const t of this)t.augs[1]!==t.initAugs[1]&&(t.augs[1]=t.initAugs[1]),t.augs[2]!==t.initAugs[2]&&(t.augs[2]=t.initAugs[2]),t.augsPointer=3,t.skillLen=t.len,t.skillsRemovedCount=-1,t.quriousPoints=t.startingQuriousPoints,t.unBloatedPoints=i[t.startingQuriousPoints]}}setNextArmor(t,e,o){if(t)for(let e of t.requestedSkills)s.names.get(e)[3]+=t.skills[e];for(let s=0;s<4;++s)n[s]+=(-t?.decos[s]||0)+e.decos[s];this.theseArmors[this.indexByType[e.type]]=e;for(let t of e.requestedSkills)(s.names.get(t)[3]-=e.skills[t])<s.names.get(t)[7]&&(o=s.names.get(t));return o}addSkillToSet(t,e){let s=e.skillLen;for(;s--;)if(e.innateSkills[s]===t)return!0;if(e.skillLen<5)return e.innateSkills[e.skillLen++]=t,!0}}const i=[];for(let t=0,e=0;t<49;t++)!t||t%3||++e,i[t]=e;const l=(t,e)=>t>=e?t:e,r=(t,e)=>t<=e?t:e;function u(t,n,o){let i=function(t){let s={2:0,3:0,4:0};for(let n of e.theseArmors){if(!n.decoAugs)continue;let e=n.decoAugs,o=e.length;for(;--o&&t;){let i=e[o][0]-e[o-1][0],l=e[o][1][1][0]!==e[o-1][1][1][0];if(e[o-1][1][0]<4||i>2||l)break;2===i?++s[2]:++s[3],f(n,e),--t}}return s[4]+=t,s}(n),l=Object.entries(i).filter((t=>t[1]));for(let e=0;e<t.length;++e){if(!n)return 0;let i=s.costs[t[e]];for(let s=0;s<i.len&&n;s++){const u=i.skills[s];if(u[0]<=0)break;for(let[s,f]of u[4]){if(!n)return 0;if(s>l[l.length-1][0]&&s>l[0][0])continue;let a=!1;for(let t=0;t<l.length;t++)if(l[t][0]>=s){a=t;break}let c=r(l[a][1],~~(u[0]/f));if(c<1){if(c<=0)continue;c=1}if(n-=c,u[0]-=c*f,0==(i.total-=c)?(t.splice(e,1),--e):u[0]||p(i,u),o.arr[o.pointer++]=[u[1],f,l[a][0],c],0==(l[a][1]-=c)&&l.splice(a,1),0==(i.total-=c*f)){t.splice(e,1),--e;break}}}}return n}function f(t,e){let s=e.length,n=6*(e[s-1][0]-e[s-2][0]);2===e.length?P(t,2):t.augs[2]={"+Slots":-6*e[s-2][0]},t.quriousPoints+=n,t.unBloatedPoints=i[t.quriousPoints]}function a(t,e,s,o,i){for(let e=0;e<4;++e)t[e]=n[e];e.pointer=0;let l,f=i.costHash,a=f.length,c=0,h=0,g=5*s,k=6,m=o;for(;m--;){l=i.arrs[m];let s=l[5],n=l[3];if(s&&n){let o=l[6];if(o&&t[3]&&o<=n){let s=r(~~(n/o),t[3]);t[3]-=s,n-=s*o,e.arr[e.pointer++]=[l[1],o,4,s]}if(n>0&&t[--s]){let o=r(n,t[s]);n-=o,t[s]-=o,e.arr[e.pointer++]=[l[1],1,s+1,o]}}if(!((l[0]=n)<=0)){if(!l[2]||(h+=n)-t[3]>g)return;k===l[2]?i.setSameCost(l):(k=l[2],i.setNewCost(l,k),f[c++]=k)}}if(!c)return!0;if(c<a&&f.splice(c,1/0),g-=h,t[3]){let s=u(f,t[3],e);if(0==(h-=t[3]+s))return!0;t[3]=s}return f.reverse(),[h,g]}function c(t,e,s,n){let[o,i]=t;const l=s.costHash,r=s.costs;t:for(let t of e){if(o<=0||i<0)return l.length;let e=3,s=5-t.skillLen;for(;e>o;)P(t),--e;for(;e;){if(e>s){let n=1===s?d(e,t.unBloatedPoints,l,r):d(e-1,t.unBloatedPoints-l[0],l,r);if(n){if(S(n[0],t,l,r[n[0][2]],n[1])||0==(o-=n[1]))return l.length;if(!(e-=n[1]))continue t;continue}}else{let s=2===e?k(l,t.unBloatedPoints,r):3===e?g(l,t.unBloatedPoints,r):e?m(l,t.unBloatedPoints):0;if(s){for(let n of s){if(e--,S(r[n].skills[0],t,l,r[n])||0==--o)return l.length;if(!e)continue t}continue}}if(P(t),--i<0)return l.length;if(! --e)continue t}}return l.length&&4===n&&h(o,l),l.length}function h(t,n){let o=s.costs;for(const s of e.theseArmors){if(!t||!n.length)break;let l=s.augsPointer;if(l<6&&s.unBloatedPoints<n[0]||6===l&&s.quriousPoints<5+3*n[0])continue;let r=0,u=0;for(let t=0;t<l;++t){let e=s.augs[t];e["-Def"]?r=t:e["-Skill"]&&(u=t)}let f=6-s.augsPointer?0:r?5:u?10:"continue";if("continue"===f||i[s.quriousPoints-f]<n[0])continue;let a,c=Object.values(n).reverse();t:for(let t of c){if(s.quriousPoints-f<3*t)continue;let n=o[t];for(let t=0;t<n.len;++t)if(e.addSkillToSet(n.skills[t][1],s)){a=n.skills[t];break t}}if(a&&(f&&(s.quriousPoints-=f,s.unBloatedPoints=i[s.quriousPoints],s.augs.splice(r-1||u-1,1),--s.augsPointer),!S(a,s,n,o[a[2]])&&! --t))return}}function g(t,e,s){let n=t.length,o=n;for(;o--;){if(3*t[o]>e)continue;let i=n;for(;--i>=o;){if(t[o]+2*t[i]>e||s[t[o]].total<=(o===i))continue;let l=n;for(;--l>=i;)if((i===l||t[o]+t[i]+t[l]<=e)&&s[t[l]].total>(l===o)+(l===i))return[t[o],t[i],t[l]]}}}function k(t,e,s){let n=t.length,o=n;for(;o--;){if(2*t[o]>e)continue;let i=n;for(;--i>=o;)if((o===i||t[o]+t[i]<=e)&&s[t[o]].total>(o===i))return[t[o],t[i]]}}function m(t,e){let s=t.length;for(;s--;)if(t[s]<=e)return[t[s]]}function d(t,e,s,n){let o=s.length;for(;o--;){let i=n[s[o]];if(s[o]*t<=e&&i.total-i.len>=t-1){let e=i.len;for(;e--;){let s=i.skills[e];if(s[0]>=t)return[s,t]}}}}function P(t,e){e||(e=t.augsPointer,6!==t.augsPointer&&++t.augsPointer);let s=t.fodderSkills[++t.skillsRemovedCount];s?(t.augs[e]={"-Skill":s},t.quriousPoints+=10):(t.augs[e]={"-Def":5},t.quriousPoints+=5),t.unBloatedPoints=~~(t.quriousPoints/3)}function p(t,e){let s=t.skills,n=--t.len;for(let o=0;o<n;++o)if(s[o]===e){s[o]=s[t.len];break}}function S(t,s,n,o,i=1){let l=t[1],r=t[2];if(s.unBloatedPoints<r*i||s.augsPointer+i>6||!e.addSkillToSet(l,s))return!0;s.quriousPoints-=3*r*i,s.unBloatedPoints-=r*i;for(let t=0;t<i;++t)s.augs[s.augsPointer]={"+Skill":l},++s.augsPointer;t[0]-=i,0==(o.total-=i)?(t[0]-=i,function(t,e,s){t.skills=[];let n=e.length-1;if(e[n]===s)e.pop();else for(;n--;)e[n]===s&&e.splice(n,1)}(o,n,r)):t[0]||p(o,t)}function b(t,s){let n={charm:s,decos:t.arr.splice(0,t.pointer),augments:{}};for(let t of e.theseArmors)n.augments[t.type]={augs:t.augs.slice(0,t.augsPointer),name:t.name,type:t.type};return n}function A(t,e,n,o){let i=[0,0,0,0],u=o[3];if(o[0]){let t=e.pointer,n=o[2]-u;if(n)for(;t--;){let[l,u,f,a]=e.arr[t];const c=s.names.get(l)[2]-1;if(c>2)break;if(o[c]<u)continue;let h=r(~~(n/u),a);i[f-1]<h&&(i[f-1]=h)}}for(let e=0;e<4;++e)i[e]+=t[e];u&&(i[3]+=~~((u+i[1]+i[2])/2),i[1]+=u,i[2]+=u-u%2);for(let t=0;t<4;++t)n[t]=l(n[t],i[t])}function q(t){const s=[0,0,0,0,0];for(let t of e.theseArmors){if(t.quriousPoints<(6===t.augsPointer?8:3)||t.skillLen>4)continue;let e=0,n=0;for(let s of t.augs)s["-Def"]?++e:s["-Skill"]&&++n;let o=6-t.augsPointer,l=--o>=0?0:--e>=0?5:--n>=0?10:"continue";if("continue"===l)continue;let u=1;for(;t.quriousPoints>=l+3*u;){let f=r(5,i[~~((t.quriousPoints-l)/u)]);for(;f--;)++s[f];if(l+=--o>=0?0:--e>=0?5:--n>=0?10:"continue","continue"===l)break;++u}}for(let e=0;e<5;e++)t[e]=l(t[e],s[e]);return s}function B(t){for(let n of e.theseArmors){if(!n.fodderCount||n.quriousPoints<5&&6===n.augsPointer)continue;const e=n.fodderCount-(n.skillsRemovedCount+3),o=6-n.augsPointer,i=r(o+~~(n.quriousPoints/5),n.fodderCount);if(i)for(let o in n.skills){if(!e&&!s.names.has(o))continue;let u=0;s.names.has(o)&&(u=s.names.get(o)[7],!u)||(t[o]=l(t[o]||0,r(n.skills[o]-u,i)))}}}"undefined"!=typeof self&&(self.onmessage=i=>{for(let t=0;t<4;++t)n[t]=i.data.charmSlots[t];e=new o(i.data.armors),s=new t(i.data.skills);const{setLimiter:l,setBonus:r,canPrune:u}=i.data.skillInfo;i=null,postMessage(function(t,n,o){const i={sets:[{count:0,usedSkills:[]}],count:{sets:0,combos:0},stats:{quriousSkills:[0,0,0,0,0],armorSkills:{},remainingSlots:[0,0,0,0]},name:self.name};let l=i.sets[0],r=l.usedSkills;const u={arr:[],pointer:0},f=new Int8Array(4);let h=0,g=[],k=[];new Int8Array(4);t:for(;;){for(let t of e.indexes){let s=e.theseArmors[e.indexByType[t[2]]],n=0;if(h&&s?.skills[h[1]]&&(n=s.skills[h[1]]),(++t[0]===t[1]||h&&!n)&&(t[0]=0,"leg"===t[2]&&s))return i.sets.pop(),i;if(n&&h[2]+n>=0&&(h=!1),h=e.setNextArmor(s,e.armors[t[2]][t[0]],h),0!==t[0])break}if(h)continue;if(n)for(const t in n)if(s.names.get(t)[3]-n[t]>0)continue t;for(g of(e.theseArmors.sort(((t,e)=>[e].len-[t].len||[t].unBloatedPoints-[e].unBloatedPoints)),l.count=0,s.charms))if(!(g[3]-g[8]<0)){for(k of(g[3]-=g[8],s.charms)){if(g===k||k[3]-(k[8]-1)<0)continue;k[3]-=k[8]-1,e.theseArmors.reset();let n=a(f,u,t,s.len,s);!n||!0!==n&&c(n,e.theseArmors,s,t)?k[3]+=k[8]-1:(l.count||(B(i.stats.armorSkills),A(f,u,i.stats.remainingSlots,q(i.stats.quriousSkills))),r[l.count++]=b(u,[[g[1],g[8]],[k[1],k[8]-1]]),k[3]+=k[8]-1)}g[3]+=g[8]}if(!l.count)continue;++i.count.sets,i.count.combos+=l.count;let o=i.sets.length-1;if(!(11===o&&i.sets[--o].count>=l.count)){for(;o>0&&i.sets[o-1].count<l.count;)i.sets[o]=i.sets[--o];i.sets[o]=l,i.sets.length<11&&i.sets.push({count:0,usedSkills:[]}),l=i.sets[i.sets.length-1],r=l.usedSkills}}}(l,r)),self.location.href.includes("GitHub")&&self.close()})})();