@keyframes fadeIn {
    0% {
        opacity: 0
    }

    to {
        opacity: 1
    }
}

:root {
    --step--1: max(0.9em, min(calc(0.9em + 0.22vw), 1em));
    --step--2: max(0.8em, min(calc(0.8em + 0.1vw), 0.85em));
    --step-0: max(1em, min(calc(1em + 0.15vw), 1.1em));
    --step-1: max(1.1em, min(calc(1.1em + 0.2vw), 1.2em));
    --gradient-2: linear-gradient(180deg, oklch(0.122 0.08 150.876deg) 91%, oklch(0.3 0.15 290deg), oklch(0.122 0.08 150.876deg));
    --step-2: max(1.2em, min(calc(1.2em + 0.25vw), 1.3em));
    --space-2xl-3xl: max(3.75em, min(calc(2.28em + 6.37vw), 8.25em));
    --gradient-b: linear-gradient(180deg, oklch(0.12 0.008 89.876deg), oklch(0.288 0.144 272.765deg) 91%);
    --header-bg: var(--outline-g);
    --table-bg: oklch(0.288 0.15 280deg);
    --outline-g: oklch(0.85 0.25 96.187deg);
    --text-g: oklch(.798 .083 77.721deg);
    --base-h: max(21px, 20px);
    --gradient-h: linear-gradient(180deg, oklch(0.288 0.144 272.765deg), oklch(0.12 0.008 89.876deg) 91%, oklch(0.288 0.144 272.765deg));
    --space-l-xl: max(1.88em, min(calc(1.14em + 3.19vw), 4.13em));
    --space-s-l: max(0.94em, min(calc(0.34em + 2.57vw), 2.75em));
    --space-s-m: max(0.94em, min(calc(0.57em + 1.59vw), 2.06em));
    --body-text: var(--text-g);
    --header-text: oklch(0.698 0.083 77.721deg);
    --space-xl-2xl: max(2.81em, min(calc(1.93em + 3.81vw), 5.5em))
}

tbody > tr:not(tr:nth-child(n+1)) {
    background-image: var(--gradient-h)
}

th {
    background-color: var(--header-bg);
    background-image: var(--gradient-h);
    box-shadow: 0 0 1.2px var(--header-text) !important;
    color: var(--header-text)
}

td {
    color: var(--body-text);
    box-shadow: 0 0 1.2px var(--text-g) !important
}

#augToggle *, #BowgunBarrel, select {
    width: 100%;
}

* {
    align-content: center;
    box-sizing: border-box;
    color: var(--text-g);
    justify-content: center;
    min-height: var(--base-h);
    place-content: center;
    text-align: center;
    text-shadow: 1px 1px 5px oklch(0 0 0deg);
    user-select: none
}

.setBuilder section, button {
    opacity: 1;
    transition: .5s
}

.augToggle {
    opacity: 1
}

.check:hover, button:hover {
    cursor: pointer;
    opacity: .9;
    transition: .3s
}

div#forButtons {
    display: grid;
    gap: 1.5rem;
    grid-area: auto / 1 /auto/ -1;
    grid-template-columns: inherit;
    justify-content: space-evenly;
    width: 98vw
}

section#settingsMenu ul, section#tabButtons {
    display: flex;
    justify-content: space-evenly;
    padding-bottom: 4.75em;
    position: relative;
    top: 4.25em;
    width: 100%
}

section#tabButtons {
    align-items: center;
    font-size: 12px
}

section#tabButtons > div {
    background: oklch(.178 0 89.876deg);
    box-shadow: 0 0 1px 2px var(--outline-g);
    font-size: 20px;
    padding: 0.25em 1em;
    cursor: pointer;
}

section#settingsMenu {
    background-color: oklch(.18 0 0deg/75%);
    font-size: 15px;
    inset: -8px -3px -7px -4px;
    position: absolute;
    z-index: 95
}

section#settingsMenu ul {
    font-size: 18px;
    gap: 3em
}

section#settingsMenu ul li {
    background: oklch(0 0 0deg)
}

section#infoSettings {
    display: inline-block;
    font-feature-settings: "pcap";
    font-size: 13px;
    font-variant: petite-caps;
    height: 65vh;
    margin-top: 2.5em;
    max-width: 100%;
    overflow-y: scroll
}

#infoSettings h2:first-child, #infoSettings h5 {
    font-size: 18px !important
}

#monDropDowns, #monsterSettings {
    display: grid;
    gap: 1em;
    grid-gap: 1em;
    justify-items: center
}

#monsterSettings {
    height: 44em;
    margin-top: 2em;
    width: 98.5vw
}

#monsterSettings * {
    box-shadow: 0 0 1px .25px var(--outline-g)
}

#license {
    grid-area: auto / 1 /auto/ -1;
    margin-top: 8em !important
}

#charmDecos {
    display: grid;
    grid-area: 1 /auto/ 4 / auto;
    max-width: 98.5vw !important;
    padding: 0 !important
}

.skillDiv *, #license, section.decoDisplay * {
    display: grid !important
}

.augInvis:not(.decoDisplay *) {
    opacity: 0
}

section.armorAugment .augmentType {
    display: grid;
    grid-area: 1/1/2/2
}

#extraSkills, #skillSelect, .augToggle, .grid {
    transition: ease-in !important
}

#monsterSettings label {
    gap: 0;
    margin: 0 !important;
    padding-left: 1em;
    padding-right: 1em
}

section.NewArmorDisplay :not(.charmDisplay,.armorIcon,.armorAugment,.augDiv,.quriousAug) {
    max-height: var(--base-h)
}

output.armorImg {
    background-size: contain;
    grid-area: auto / 1 /auto/ 1
}

div#monDropDowns {
    box-shadow: none
}

.decoDisplay {
    align-content: space-between !important
}

#spawnArea {
    background: oklch(.178 0 89.876deg)
}

div#monDropDowns div:not(.questSelect,.questSelect div) {
    display: grid;
    gap: 0;
    grid-template-columns: auto 1fr auto auto !important;
    height: 21px;
    margin: 0;
    min-height: 21px;
    padding: 0
}

div#monDropDowns div {
    width: 100%
}

#forButtonSelect > .dropContainer:first-child {
    grid-area: a
}

#forButtonSelect > .dropContainer:nth-child(2) {
    grid-area: c
}

div#forButtonSelect, section#skillSettings {
    gap: 1.5em 0;
    grid-gap: 1.5em 0;
    display: grid;
    justify-content: space-evenly
}

div#forButtonSelect {
    grid-area: auto / 1 /auto/ -1;
    grid-template-areas: "a b c""d d d ""e e e";
    grid-template-columns: 1fr 1fr 1fr;
    justify-items: center;
    margin: auto;
    max-width: 85vw
}

section#skillSettings {
    max-width: 98vw;
    font-size: 15px;
    max-width: 100%;
    position: relative
}

div#forButtonSelect label.check {
    grid-area: d
}

@media (max-width: 800px) {
    div#forButtonSelect {
        display: flex;
        flex-wrap: wrap;
        width: 98vw
    }
}

div#forButtons > button {
    justify-self: center;
    padding-left: 1em;
    padding-right: 1em;
    width: fit-content
}

section#skillSettings :not(div,input,img) {
    box-shadow: 0 0 1px .25px var(--outline-g)
}

section#weaponRampage {
    grid-area: 1/2/1/3;
    grid-template-columns: 1fr;
    height: var(--base-h)
}

#EquippedSkillDisplay > output {
    gap: .3em 0;
    grid-template-columns: repeat(auto-fill, 6em 10em);
    width: max(51.4em, min(45em, 98.5vw));
    max-width: 100vw;
}

#EquippedSkillDisplay, section.currentPoints.NewArmorDisplay {
    display: grid;
    grid-template-columns: 1fr
}

#EquippedSkillDisplay {
    width: max(51.4em, min(45em, 98.5vw));
    max-width: 98vw !important;
}

div#EquippedSkillDisplay button {
    margin-left: .5em
}

div#raw > div, img.augInvis, select > option.augInvis {
    display: none !important
}

section.armorAugment * {
    color: var(--outline-g)
}

#weaponQurious, section.currentPoints.NewArmorDisplay {
    color: var(--outline-g);
    cursor: pointer;
    pointer-events: all
}

#monTable > tr {
    display: grid;
    grid-template-columns: 5fr repeat(8, 1fr)
}

section#damage {
    gap: 1em;
    justify-items: center;
    max-width: 88.5vw !important
}

table#ammoTable {
    grid-template-columns: 1fr;
    width: 100%
}

.augInvis {
    display: none
}

.extraSkills, section#damage {
    display: grid
}

.extraSkills {
    align-content: baseline;
    grid-area: 2/1/3/-1;
    grid-template-columns: repeat(auto-fill, minmax(17em, 1fr));
    max-height: 25em;
    min-width: 100%;
    overflow-x: auto;
}

select.augment, select.augmentType.NewArmorDisplay {
    z-index: 50
}

output.currentPoints {
    pointer-events: all
}

div#augToggle > div, div > div.dropContainer, label:not(.check,div.dropContainer>label), output, section#section2, section.armorAugment, select, select.menu, table#statsTable, thead#statsHead > tr > th {
    display: grid
}

#searcherSkills label.skillInput {
    z-index: 80
}

p > output, table#monTable td {
    padding-left: .4em;
    padding-right: .4em
}

#forButtonSelect > label:nth-child(5) {
    background-image: none;
    justify-self: center;
    max-width: fit-content;
    padding: 0
}

output.skillLevel, select, select > option {
    background: #111
}

.armorAugment {
    max-width: 100%;
    width: 100%
}

label.grade {
    grid-area: 1/2/2/4
}

button.equipBuild {
    background-color: oklch(.182 0 89.876deg);
    background-image: none !important;
    border-radius: 0;
    color: oklch(.891 .183 96.187deg);
    grid-area: 1/1/2/-1
}

div#comboCountContainer, td.inputContainer > output.label {
    background-image: var(--gradient-b)
}

.currentPoints, h1, h2, h3:not(.info), h4, h5:not(.info), h6 {
    background-image: var(--gradient-h);
    width: 100%;
}

div#augToggle > div, section#section2 {
    align-items: center
}

section#section2 {
    align-content: baseline;
    grid-area: auto /auto/ 2 / -1;
    outline: 0;
    position: relative
}

select#dropWeapon {
    grid-area: auto / 3 /auto/ 1;
    height: 100%;
    margin: 0;
    padding: 0;
    width: 100%
}

div#augToggle > div {
    grid-template-columns: 1fr 1fr;
    margin: 0 !important
}

body, option, section#section2 {
    justify-items: center
}

body {
    background-image: linear-gradient(90deg, oklch(.178 0 89.876deg), oklch(.2 .071 272.765deg), oklch(.178 0 89.876deg), oklch(.2 .071 272.765deg) 80%, oklch(.178 0 89.876deg)) !important;
    justify-content: flex-start !important;
    margin: 0;
    max-width: 98.5vw;
    min-width: 98.5vw;
    position: relative
}

option {
    background-color: oklch(.178 0 89.876deg);
    color: var(--text-g);
    justify-self: center;
    outline-style: outset
}

section#section2, section#section2 > div {
    grid-template-columns: 1fr
}

section#section2 > div {
    grid-area: auto / 1 /auto/ -1;
    justify-content: space-evenly;
    max-width: 98.5vw
}

div#sharpnessContainer {
    display: flex;
    gap: 0 !important;
    grid-area: 2/1/3/-1;
    grid-template-columns: repeat(7, auto);
    justify-self: center;
    margin-bottom: 1em !important;
    max-width: 90% !important;
    min-width: 76% !important
}

#meleeContainer tr {
    display: grid;
    grid-template-columns: 14vw repeat(7, 6vw)
}

table#monTable > tr > td:first-child, table#monTable > tr > th:first-child {
    display: grid;
    padding-left: .8em;
    padding-right: .8em;
    text-align: center !important
}

tr.tableRow:not(#monTable>tr) {
    grid-template-columns: min(21em, 25vw) repeat(8, min(7em, 9vw))
}

.scroll:not(.augInvis) {
    height: 3.675em !important;
    pointer-events: all
}

.scroll:hover {
    border-radius: 50%;
    box-shadow: 0 0 2px 1px oklch(.998 .012 106.611deg) !important
}

.scroll.augInvis {
    pointer-events: none
}

.scroll:active {
    background: oklch(0.5 0.22 20.9);
    border-radius: 50%
}

#scrollSwap {
    column-gap: .2em;
    display: grid !important;
    grid-area: b;
    grid-template-columns: auto 1fr auto;
    justify-self: center;
    pointer-events: none !important;
    row-gap: .5em !important
}

div#setBuilder > div > :not(button), h5#augLabel {
    margin: auto
}

section#weaponSelects {
    grid-area: 1/1/2/-1;
    grid-template-columns: 1fr;
    width: 100%
}

#statsAffinity span {
    min-height: calc(var(--base-h) * 2)
}

#extraMenus label.check, html {
    display: grid;
    justify-content: center
}

#extraMenus label.check {
    align-items: center;
    grid-template-columns: 1fr auto;
    height: var(--base-h);
    min-width: max-content;
    padding-left: .4em;
    padding-right: .4em
}

a {
    width: 50vw
}

#dpsBody {
    border: 0;
    display: grid;
    margin: 0;
    outline-style: none
}

html {
    border-radius: 0 !important;
    font-size: 11px;
    margin: auto;
    max-width: 98.5vw !important;
    overflow-x: hidden;
    overflow-y: auto;
    scroll-behavior: smooth
}

img#redNon, img#redScroll {
    grid-area: 1/1/3/2
}

img#blueNon, img#blueScroll {
    grid-area: 1/3/3/4
}

#questButton, button.augButton.inc {
    border: 0 !important
}

@media (min-width: 1100px) {
    div#containAll {
        display: grid;
        grid-gap: .3em;
        grid-template-columns: 1fr 1fr
    }
}

@media (max-width: 1100px) {
    div#containAll {
        display: grid;
        grid-row-gap: .75em;
        grid-template-columns: 1fr
    }

    #section2 {
        grid-area: 2 /auto/ 2 / -1 !important
    }
}

@media (max-width: 540px) {
    #armorSet section.armorDisplay .skillDiv output, #armorSet section.armorDisplay .skillDiv select, #section2 * {
        font-size: 11px
    }
}

#boxes > label, #section1 {
    display: grid;
    justify-items: center
}

#boxes > label {
    align-items: center;
    gap: .3em;
    grid-gap: .3em;
    grid-template-columns: 1fr auto;
    padding-left: .75em;
    padding-right: .75em;
    place-items: center
}

#section1 {
    align-self: baseline;
    grid-area: 1 / 1 /auto/ auto;
    grid-template-columns: 1fr;
    text-align: justify
}

div > section > div#other {
    display: grid;
    justify-content: space-around
}

output.leg {
    background-image: url(./icons/leg.webp)
}

output.waist {
    background-image: url(./icons/waist.webp)
}

output.chest {
    background-image: url(./icons/chest.webp)
}

output.charm {
    background-image: url(./icons/charm.webp)
}

output.arm {
    background-image: url(./icons/arm.webp)
}

output.helm {
    background-image: url(./icons/helm.webp)
}

#sideDisplay label:not(#charmSlots>label) {
    grid-area: 1/2/2/3;
    grid-template-columns: 1fr auto;
    width: 100%
}

.augDiv > output.augLabel, div.augDiv > label, div.inputContainer > label, output.label {
    grid-area: 1/1/2/3
}

output.label {
    align-content: baseline;
    justify-content: end;
    place-content: baseline end;
    position: relative;
    z-index: 5
}

td.inputContainer > output.label {
    align-content: center;
    align-items: center;
    height: 100%;
    justify-content: center;
    outline: 0;
    place-content: center;
    pointer-events: none;
    user-select: none;
    width: 100%;
    z-index: 70
}

.augDiv > output.augLabel, div.inputContainer > label {
    display: grid
}

.augDiv > output.augLabel {
    align-items: baseline;
    justify-content: flex-start;
    padding-left: 5px;
    position: relative
}

div.augDiv > label, div.inputContainer > label {
    background: 0;
    font: menu;
    pointer-events: none;
    width: 100%;
    z-index: 6
}

div.augDiv, div.inputContainer {
    align-items: start;
    justify-items: center;
    position: relative;
    z-index: 15
}

#questButton, button.dec:hover, button.inc:hover {
    background-color: transparent;
    background-image: none !important
}

button.dec:hover, button.inc:hover {
    z-index: 90 !important
}

button.inc:hover {
    border-left: none !important
}

button#questButton {
    display: grid !important;
    grid-area: 1/2/2/3
}

.augButton:active, .inputButton:active {
    background: linear-gradient(oklch(.289 .145 272.662deg), oklch(.389 .149 27.79deg));
    color: oklch(.991 0 89.876deg) !important;
    font-weight: 900;
    z-index: 20
}

.inputButton {
    padding: 0
}

button.inc:not(.armorDisplay>button) {
    align-content: center;
    align-items: baseline;
    border-radius: 0;
    display: grid !important;
    gap: 0;
    grid-area: 1/2/2/3;
    grid-gap: 0;
    margin: 0;
    padding: 0;
    width: 100%
}

button.dec:not(.armorDisplay>button):hover {
    background-image: none;
    border-right: none !important;
    z-index: 50
}

div.augDiv > output.label:not(.augLabel) {
    outline: 0;
    padding-left: 10px !important
}

div.augDiv > output.label.augLabel, div.augDiv > output.label:not(.augLabel) {
    align-content: center;
    box-shadow: none !important;
    font-variant-numeric: lining-nums;
    padding-right: 5px;
    pointer-events: none;
    position: relative;
    user-select: none;
    width: 100%;
    z-index: 10
}

#setBuilder > div > button.dec {
    display: grid;
    width: 47%
}

button.dec:not(.skillInput,#setBuilder>section>button) {
    grid-area: 1/1/2/2 !important;
    margin: 0;
    padding: 0
}

.augDiv button {
    border: 0 !important;
    box-shadow: none !important;
    outline: 0 !important;
    z-index: 0
}

#BowGunId > label, .setResult > label, button.augButton {
    width: 100%
}

#boxes, div#dango, div#unique {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    gap: 1.5em;
    justify-content: space-evenly;
    margin-bottom: 1em;
    max-width: 98vw;
    width: 98vw
}

div#comboCountContainer {
    align-content: baseline;
    app-region: no-drag;
    bottom: 1px;
    display: grid;
    left: 35%;
    max-height: 50vh;
    overflow: auto;
    position: fixed;
    resize: both;
    z-index: 100
}

div#comboCountContainer > h2 {
    position: sticky;
    right: 2px;
    top: 0
}

.extraSkills > button {
    border-radius: 0;
    margin: 2em .8em 0 !important
}

div#extraSkills {
    margin-top: 0 !important;
    width: 100%
}

#skillSelect > div, #skillSelect > div > div {
    display: grid
}

#skillSelect > div > div {
    grid-template-columns: 100%;
    height: 100%;
    min-width: max-content;
    width: 80%
}

#skillSelect > div {
    align-items: stretch;
    grid-template-columns: 1fr 1fr max-content;
    justify-items: end;
    margin: .7em !important;
    place-items: stretch end;
    position: relative;
    width: fit-content
}

body > div:nth-child(8) {
    box-shadow: none
}

output.skillInput {
    background: oklch(0 0 0deg);
    color: var(--text-g);
    display: grid;
    min-width: fit-content
}

#searcherSkills output.skillInput {
    grid-area: 1/4/2/3;
    min-width: max-content;
    padding-left: 1px;
    padding-right: 1px
}

div#comboCountDisplay {
    gap: 1em;
    height: 50em;
    pointer-events: all;
    width: 35em;
    z-index: 100
}

input.skillInput, select#dropQuest {
    pointer-events: all
}

img {
    aspect-ratio: 1 !important;
    background-size: contain !important
}

.questSelect div {
    grid-template-columns: 10em 1fr
}

#setReturn > h2 {
    align-items: center;
    grid-template-columns: 1fr 1fr 1fr;
    left: 1px;
    max-width: 100%
}

div#searchAgain {
    grid-template-columns: 1fr 1fr
}

#dropQuest select, div > div.dropContainer > select:not(#players,#health,#dropEnraged) {
    grid-area: auto / 2 /auto/ 3
}

section#sideDisplay {
    box-shadow: none !important;
    display: grid;
    gap: .9em;
    grid: none;
    grid-gap: .9em;
    width: max(51.4em, min(45em, 98.5vw));
    grid-template-columns: 1fr !important;
    justify-items: center;
    max-width: 99vw;
}

#setReturn > h3, div.questSelect, h1, h3, h5 {
    position: relative
}

div.questSelect > label {
    grid-area: 1/1/2/2
}

div#weaponRampage {
    display: contents !important;
    grid-area: 1/5/2/6 !important;
    padding: 0 !important;
    width: 100% !important
}

button.inputButton.dec, button.inputButton.inc {
    font-weight: 500;
    margin: 0;
    min-width: 100%;
    outline: 0;
    padding: 0;
    position: relative;
    top: 0;
    z-index: 0
}

div#augDiv > *, div.augDiv > label, div > .augButton {
    display: grid;
    text-align: center !important
}

#dpsTable, body > div, ul {
    align-content: center
}

div#containAll {
    display: grid;
    max-width: 98.5vw !important;
    min-width: 98.5vw
}

#monTable .S:nth-child(2), #monTable .S:nth-child(3), #monTable .S:nth-child(4) {
    background-color: oklch(.646 .194 41.116deg);
    color: oklch(0 0 0deg)
}

#monTable .A:nth-child(2), #monTable .A:nth-child(3), #monTable .A:nth-child(4) {
    background-color: oklch(.705 .187 47.604deg);
    color: oklch(.206 .002 17.285deg)
}

#monTable .B:nth-child(2), #monTable .B:nth-child(3), #monTable .B:nth-child(4) {
    background-color: oklch(.758 .159 55.934deg);
    color: oklch(.333 0 89.876deg)
}

#monTable .C:nth-child(2), #monTable .C:nth-child(3), #monTable .C:nth-child(4) {
    background-color: oklch(.837 .117 66.29deg);
    color: oklch(.62 0 89.876deg)
}

#monTable .F:nth-child(2), #monTable .F:nth-child(3), #monTable .F:nth-child(4) {
    background-color: oklch(.901 .073 70.697deg);
    color: oklch(.712 0 89.876deg)
}

#monTable .A:nth-child(5), #monTable .B:nth-child(5) {
    background-color: oklch(.444 .161 26.899deg);
    color: oklch(.991 0 89.876deg)
}

#monTable .C:nth-child(5) {
    background-color: oklch(.637 .208 25.331deg);
    color: oklch(.907 0 89.876deg)
}

#monTable .F:nth-child(5) {
    background-color: oklch(.711 .166 22.216deg);
    color: oklch(.482 0 89.876deg)
}

#monTable .A:nth-child(6), #monTable .B:nth-child(6) {
    background-color: oklch(.488 .217 264.376deg);
    color: oklch(.979 0 89.876deg)
}

#monTable .C:nth-child(6) {
    background-color: oklch(.546 .215 262.881deg);
    color: oklch(.882 0 89.876deg)
}

#monTable .F:nth-child(6) {
    background-color: oklch(.623 .188 259.815deg);
    color: oklch(.309 0 89.876deg)
}

#monTable .A:nth-child(7), #monTable .B:nth-child(7) {
    background-color: oklch(.861 .173 91.936deg);
    color: oklch(.129 0 89.876deg)
}

#monTable .C:nth-child(7) {
    background-color: oklch(.905 .166 98.111deg);
    color: oklch(.201 .002 17.289deg)
}

#monTable .F:nth-child(7) {
    background-color: oklch(.973 .069 103.193deg);
    color: oklch(.482 0 89.876deg)
}

#monTable .A:nth-child(8), #monTable .B:nth-child(8) {
    background-color: oklch(.588 .139 241.966deg);
    color: oklch(0 0 0deg)
}

#monTable .C:nth-child(8) {
    background-color: oklch(.685 .148 237.323deg);
    color: oklch(.201 .002 17.289deg)
}

#monTable .F:nth-child(8) {
    background-color: oklch(.754 .139 232.661deg);
    color: oklch(.482 0 89.876deg)
}

#monTable .A:nth-child(9), #monTable .B:nth-child(9) {
    background-color: oklch(.432 .211 292.759deg);
    color: oklch(1 0 89.876deg)
}

#monTable .C:nth-child(9) {
    background-color: oklch(.541 .247 293.009deg);
    color: oklch(.858 .001 17.181deg)
}

#monTable .F:nth-child(9) {
    background-color: oklch(.606 .219 292.717deg);
    color: oklch(.748 0 89.876deg)
}

div#damageTable > div > table > tbody > tr:not(.tableRowMelee), div#damageTable > div > table > thead > tr:not(.tableRowMelee>tr) {
    color: var(--header-text)
}

.tableRowRanged tr, div#damageTable > div > table > tbody > tr:not(.tableRowMelee), div#damageTable > div > table > thead > tr:not(.tableRowMelee>tr) {
    box-shadow: 0 0 1.2px var(--header-text) !important;
    display: grid !important;
    grid-area: auto / 1 /auto/ -1 !important;
    grid-template-columns: 1.5fr repeat(7, 1fr) !important;
    justify-content: end;
    justify-items: stretch;
    user-select: none;
    width: 100% !important
}

.check, button {
    background-image: var(--gradient-b) !important;
    color: oklch(.891 .183 96.187deg) !important;
    pointer-events: all !important;
    user-select: auto !important
}

#forButtonSelect > label.check:last-child {
    display: none !important
}

#enrageDisplay, #monTable td:first-child, label, tbody#ammoBody > tr > td:first-child, tr.tableRowRanged > td:first-child {
    background-image: var(--gradient-b) !important;
    box-shadow: 0 0 1.2px var(--outline-g) !important;
    color: var(--text-g);
    margin: 0 !important;
    position: unset
}

#monTable > tbody {
    display: grid;
    grid-auto-flow: column;
    grid-template-rows: none !important
}

#monTable td:first-child, #monTable > tbody {
    align-content: center
}

#monTable td:first-child {
    display: grid
}

div#searcherSkills > label.dropContainer {
    display: grid;
    justify-content: space-between;
    min-width: max-content;
    padding-left: .5em !important;
    padding-right: .5em !important;
    position: sticky
}

div#setBuilder > label {
    margin-left: 1em !important;
    margin-right: 1em !important;
    min-width: 14vw
}

@media (max-width: 500px) {
    #armorSet *, #section2 * {
        font-size: 10px !important
    }

    .skillDiv > img.NewArmorDisplay.armorImg:not(#weapon img) {
        display: none !important
    }

    .skillDiv > output.NewArmorDisplay:not(#weapon output) {
        grid-area: 1/1/2/3
    }
}

div#armorSet div:not(.armorAugment div), div#armorSet h6, div#armorSet label, div#armorSet select {
    max-height: var(--base-h)
}

.div0.NewArmorDisplay.dropContainer {
    grid-area: 4/1/5/3
}

#damageTable th, #damageTable tr, #monDisplay div, .armorDisplay :not(#weaponRampage *,#weaponRampage,:has(:not(option))), .armorDisplay:not(#charm), select {
    box-shadow: 0 0 2px .01px var(--outline-g) !important;
    overflow: visible
}

button.augButton {
    animation-timing-function: ease-in-out !important;
    background-color: transparent;
    background-image: none;
    position: relative;
    z-index: 0
}

.decoDisplay {
    display: grid !important
}

section.rampage {
    grid-area: 1/1/2/3;
    width: 100%
}

select#charmSkill1 {
    grid-area: 2/2/3/3
}

#charm select {
    max-width: 42vw;
}

select#charmSkill2 {
    grid-area: 3/2/4/3
}

.div3.NewArmorDisplay {
    grid-template-columns: 1fr;
    min-width: 100%
}

.armorDisplay > div:not(div:has(img)) {
    grid-template-columns: 1fr !important
}

#charmSlots, .armorDisplay > div, h6, label, select#dropEnraged, td, th {
    display: grid
}

#charmSlots {
    background-color: oklch(.178 0 89.876deg);
    grid-area: inherit;
    grid-row-gap: .4em;
    grid-template-columns: 1fr auto;
    row-gap: .4em
}

#sideDisplay > div:first-child {
    width: max-content
}

#enrageDisplay {
    display: grid;
    grid-area: 1/3/2/4;
    justify-items: start;
    outline-width: .1em;
    padding-left: .4em;
    padding-right: .4em
}

select#weaponRampage0 {
    display: grid;
    justify-content: center;
    justify-items: stretch;
    width: 100%
}

select#dropQuest {
    display: grid;
    grid-area: 1/2/2/3
}

div.questSelect {
    display: grid !important;
    gap: 0;
    grid-area: span 1/span 1;
    grid-template-columns: 7.3em 1fr;
    overflow: visible;
    padding-left: 0;
    padding-right: 0
}

div#questDiv select {
    border: 0;
    gap: 0;
    margin: 0 !important
}

div.menu {
    display: grid;
    grid-area: 1/1/3/3;
    grid-template-columns: 1fr;
    top: 0 !important;
    z-index: 55
}

label.label.skillInput {
    align-content: center;
    grid-area: 1/1/2/3;
    justify-content: center;
    place-content: center;
    pointer-events: none;
    width: min(30vw, 17em) !important;
    z-index: 5
}

.questSelect label {
    grid-area: auto / 1 /auto/ 2
}

.augDiv > label, h6:not(.charm>h6), select#dropSkills {
    grid-area: 1/1/2/4
}

.charm > h6 {
    grid-area: 1/2/2/3
}

.augDiv > label {
    gap: 0 !important;
    padding: 0 !important;
    position: relative;
    z-index: 20
}

tbody > tr.tableRowMelee, thead.tableRowMelee > tr {
    align-content: center;
    align-items: center;
    display: grid;
    gap: 0;
    margin: 0
}

div#damageContainer > table > thead {
    box-shadow: 0 0 1.2px var(--outline-g) !important;
    color: var(--outline-g);
    /* flex-flow: row nowrap; */
    /* height: var(--base-h); */
    /* justify-content: space-evenly; */
    justify-items: center;
    margin: 0;
    outline: 0;
    position: sticky;
    width: 100%;
    z-index: 50
}

::-webkit-scrollbar {
    background-color: oklch(.15 .251 303.503deg)
}

div#EquippedSkillDisplay > output > * {
    box-shadow: 0 0 1px var(--outline-g);
    height: 100% !important
}

::-webkit-scrollbar-track {
    background: oklch(.267 .019 258.364deg)
}

table#monTable {
    box-shadow: inset 1px 0 1px 2px var(--outline-g);
    display: grid;
    gap: .06em 1.06em !important;
    grid-gap: .06em 1.06em !important;
    grid-template-columns: 1fr
}

#extraMenus dropcontainer:not(#sideDisplay div), #setBuilder section:not(#sideDisplay,#weaponStats,#charm), button, h3, h4, h5, h6, img:not(.scroll), output:not(#sideDisplay output), span {
    box-shadow: 0 0 2px var(--outline-g) !important
}

output.augLabel {
    padding-left: 5px
}

h1, h2, h3, h4, h5 {
    box-shadow: 0 0 1.2px var(--outline-g) !important;
    color: var(--outline-g);
    display: grid;
    margin: 0
}

h2, h3 {
    font-size: var(--step-1);
    height: 2.2em;
    padding-inline: .25em
}

#extraSkillsHeader, h1, h2 {
    grid-area: 1/1/2/-1 !important
}

.title {
    font-size: var(--step-2);
    height: 2.5em;
    margin-bottom: .3em;
    width: 100%;
    z-index: 100
}

#statsTable h3 {
    font-size: var(--step-0)
}

#setReturn h3 {
    grid-template-columns: 1fr auto 1fr;
    margin-block: .5em;
    position: sticky;
    top: 0;
    width: 100% !important;
    z-index: 10
}

#damage > h3:first-child {
    grid-area: 1/1/1/1 !important
}

button:active {
    color: oklch(.975 .013 244.251deg) !important;
    outline-width: .4em !important
}

label.check:hover {
    background: linear-gradient(oklch(.289 .145 272.662deg), oklch(.238 .098 29.234deg));
    color: var(--outline-g) !important;
    cursor: pointer
}

label.check:active {
    color: oklch(.975 .013 244.251deg);
    outline-width: .3em !important
}

button.blue, button:hover, label.click:checked:hover {
    color: var(--outline-g);
    z-index: 50
}

.click, button, img.scroll:hover, input, select {
    cursor: pointer
}

button.close {
    background: oklch(.387 .116 24.365deg);
    background-image: none !important;
    border-radius: 50% !important;
    display: grid;
    font: icon;
    height: 1.4em;
    position: absolute;
    right: 6px;
    top: 5%;
    width: 1.5em;
    z-index: 50
}

#dropSkills {
    gap: 1.5em !important;
    margin-top: 1.2em !important;
    min-width: 19em !important
}

.skillInput {
    display: grid;
    justify-self: flex-start;
    min-width: 2vw
}

input.inputs, td.a {
    max-width: 100% !important
}

td.a {
    background: oklch(.182 0 89.876deg);
    border: 0 !important;
    color: oklch(0 0 0deg) !important;
    grid-template-columns: 1fr;
    height: 100% !important
}

.inputs {
    background-color: oklch(.178 0 89.876deg);
    grid-area: 1/1/1/1;
    overflow: hidden !important
}

#inputs {
    width: 3em !important
}

.scroll {
    grid-area: 1/1/2/2;
    min-width: max-content;
    padding-left: .5em;
    padding-right: .5em
}

.sharpness {
    display: grid;
    font-size: var(--step-0);
    font-weight: 700;
    min-width: fit-content !important;
    padding-left: 2px;
    padding-right: 2px
}

.armorDisplay img:not(.invis,.armorDisplay img:first-of-type) {
    height: var(--base-h) !important
}

output#extraOutput, output#setOutput {
    background-color: oklch(.178 0 89.876deg);
    color: var(--outline-g);
    grid-area: 1/1/2/2;
    left: 2px;
    margin: 0;
    padding-inline: 3px;
    position: relative;
    width: max-content
}

::-webkit-scrollbar-thumb {
    background: #353546
}

tr.tableRowRanged {
    font-size: 12px;
    gap: 0 !important;
    grid-template-columns: 3fr repeat(7, 1fr);
    justify-items: stretch;
    min-height: 100% !important;
    padding-left: 0 !important;
    padding-right: 0 !important
}

#monTable > tbody > tr:first-child > th:first-child {
    display: grid;
    height: 3.25em
}

td.inputContainer {
    align-items: center;
    background-image: var(--gradient-b) !important;
    display: grid;
    grid-template-columns: 1fr 1fr;
    justify-items: center;
    min-height: 100% !important;
    place-items: center;
    width: 100%
}

.tableRowMelee > tr, tr.tableRowMelee {
    display: flex;
    grid-template-columns: .85fr 4fr .6fr 1.3fr 1fr 1.3fr .8fr !important;
    width: 100%;
    z-index: 5
}

th:not(#monTable tr th), thead > tr {
    background-image: var(--gradient-b);
    display: grid;
    height: 100% !important
}

tr {
    border: 0;
    outline: 0
}

#charm * {
    max-height: var(--base-h)
}

section#charm {
    display: grid;
    grid-area: 3;
    /* padding-left: .4px; */
    /* grid-template-columns: auto 1fr auto 1fr; */
    /* padding-right: .4px; */
}

select:not(.weapon select) {
    filter: blur(.1px)
}

select.armor.charms {
    grid-area: 1/2/2/3 !important;
    min-width: .3vw !important;
    outline-width: thin;
    padding: 0;
    right: 0;
    width: 3.5vw
}

#dpsTable, div#setSearcher {
    grid-template-columns: 1fr
}

#dpsTable {
    border: 0;
    filter: contrast(1.11) grayscale(.03) saturate(.83) sepia(.02);
    font-size: 12px;
    gap: 0;
    grid-area: 3/1/4/2;
    grid-gap: 0;
    justify-items: start;
    /* max-width: 99.7%; */
    outline: 0;
    text-transform: capitalize;
    z-index: 50
}

#dpsTable, .augDiv, .setResult > div, div#setSearcher, select.armor.charms, ul {
    display: grid
}

div#setSearcher {
    width: 100% !important
}

#section1 > div, #section1 > div > div:not(div.dropContainer,#statsTableDiv) {
    gap: 1em
}

div#extraMenus {
    gap: 2em;
    justify-content: space-evenly;
    min-width: 100%;
    place-content: space-evenly;
    width: 98.5vw
}

div#extraMenus label {
    padding-left: .4em;
    padding-right: .4em
}

div#extraMenus select {
    min-width: 5em
}

div#boxes, div#raw {
    display: flex
}

div#raw {
    gap: .4em
}

div#boxes {
    gap: 1.7em 1.3em;
    margin-bottom: 1.5em;
    max-width: 98.5vw !important;
    min-width: 98.5vw
}

div#boxes :not(label,select,div) {
    max-height: 21px
}

button.augButton, button.inputButton {
    border-right: 0;
    height: 100% !important;
    text-align: center !important
}

.augDiv {
    align-content: center;
    align-items: center;
    gap: .4em !important;
    grid-gap: .4em !important;
    grid-template-columns: 1fr 1fr;
    justify-content: space-around;
    place-content: center space-around
}

#skillSelect > div > button.inc {
    display: grid !important;
    grid-area: 1/2/2/3 !important
}

#skillSelect > div > button {
    border-radius: 0;
    margin: 0 !important;
    width: min(10vw, 9em) !important
}

#skillSelect > div > button.dec {
    grid-area: 1/1/2/2 !important;
    margin: 0 !important;
    width: 50%
}

.skillDiv.div6.NewArmorDisplay {
    grid-area: 1/3/2/5
}

#weapon .skillDiv.div7.NewArmorDisplay {
    grid-area: 2/3
}

.skillDiv.div7.NewArmorDisplay {
    grid-area: 2/3/3/5
}

.optTitle {
    background: var(--outline-g);
    color: oklch(.288 .144 272.765deg) !important;
    font-size: 120% !important;
    font-weight: 700
}

tbody > tr:hover {
    background-image: linear-gradient(90deg, oklch(.178 0 89.876deg), oklch(.2 .071 272.765deg), oklch(.178 0 89.876deg), oklch(.2 .071 272.765deg) 80%, oklch(.178 0 89.876deg)) !important;
    color: var(--outline-g) !important
}

.setResult > div {
    grid-template-columns: 2em 1fr;
    margin: 3px !important;
    width: 94%
}

.armorCharm {
    min-width: 100% !important;
    width: 100% !important
}

ul {
    align-items: baseline;
    app-region: no-drag;
    gap: .5em;
    grid-gap: .5em;
    overflow-y: auto;
    padding-left: 2.3em;
    position: relative
}

li {
    display: list-item;
    list-style: auto;
    padding-left: 2em;
    padding-right: 2em
}

div#skillSelect, section#searcherSkills {
    align-items: self-end;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    justify-items: center;
    min-height: 10em
}

div#skillSelect {
    gap: 2em;
    margin-bottom: .5em !important;
    margin-top: .5em !important
}

section#searcherSkills {
    gap: 1em 1em;
    grid-area: 2/1/3/4;
    grid-template-columns: repeat(auto-fit, minmax(17em, 1fr));
    margin-left: 1em;
    margin-right: 1em;
    width: 99%
}

section#searcherSkills > div {
    display: grid;
    justify-items: baseline;
    max-height: var(--base-h)
}

div#searcherSkills * {
    height: var(--base-h)
}

button.dec:not(button:hover), button.inc:not(button:hover) {
    border: 0;
    box-shadow: none !important;
    color: transparent !important
}

#searcherSkills button.dec {
    grid-area: 1/1/2/2;
    margin: 0;
    padding: 3px;
    width: 100%;
    z-index: 0
}

button.dec:hover:not(#skillSelect button), button.inc:hover:not(#skillSelect button) {
    overflow: visible;
    -webkit-text-stroke-width: thick
}

#searcherSkills button.inc {
    grid-area: 1/2/2/3;
    width: 100%;
    z-index: 0
}

#searcherSkills label.skillInput {
    display: grid;
    grid-area: 1/1/2/3
}

div#setReturn > button {
    border-radius: 0;
    margin: .5em .6em !important
}

.grid {
    align-content: start;
    border-radius: 0 !important;
    grid-area: 4/1/5/-1;
    grid-gap: .5em;
    grid-template-columns: repeat(auto-fit, minmax(19em, 48%));
    max-height: 60em !important;
    min-height: 100%
}

div#damageContainer {
    display: grid;
    grid-area: 3/1/4/-1;
    outline: 0
}

#EquippedSkillDisplay, #damageTable, #skillSelect, .augToggle {
    will-change: contents
}

div#damageTable, div#damageTable > :not(#sharpnessContainer) {
    border: 0;
    display: grid;
    gap: .2em;
    grid-gap: .2em;
    grid-template-columns: 1fr;
    min-height: fit-available;
    outline: 0
}

link, script, style {
    display: none;
    outline: 0
}

img.invis:hover {
    border-radius: 50%;
    opacity: .57
}

div#setReturn {
    align-content: baseline;
    display: grid
}

div#setReturn > div:nth-child(4) > label {
    color: var(--text-g);
    margin: .4em !important;
    width: 100%
}

h6 {
    background-image: var(--gradient-h);
    height: var(--base-h) !important;
    margin: 0;
    max-height: var(--base-h) !important
}

img.armorIcon.NewArmorDisplay {
    background-size: contain
}

#weaponSelects section#augToggle:not(.augInvis) {
    box-shadow: none !important;
    column-gap: .5em !important;
    gap: .5em;
    grid-area: 5/1/6/-1 !important;
    grid-template-columns: 1fr 1fr 1fr;
    justify-self: center;
    margin: .5em .35em .35em;
    max-width: 99%
}

.charm > img.armorImg {
    grid-area: 1/1/2/2 !important;
    z-index: 50
}

#charm img.armorImg.rampage.armorDeco {
    display: grid;
    grid-area: auto / 1 /auto/ 2 !important
}

button.scroll {
    grid-area: auto / 2 /auto/ 3;
    min-width: max-content
}

#setBuilder > section:nth-child(10) {
    grid-area: 1/1/5
}

div#trashCan, img.trash {
    box-shadow: none !important;
    overflow: hidden;
    position: sticky
}

div#trashCan {
    display: grid;
    flex-wrap: wrap;
    height: 4em;
    justify-items: center;
    outline: 0;
    width: 4em
}

button#searchAgain {
    justify-self: end
}

div#monTableContainer {
    display: grid;
    margin: auto;
    max-width: fit-content;
    overflow: visible;
    padding: 2px
}

img.trash {
    background-size: contain;
    bottom: 5px;
    margin: -7em !important;
    right: 3px
}

button#resetSkills {
    grid-area: 1 / 3 /auto/ auto
}

button#startSearch {
    grid-area: 1 / 1 /auto/ auto
}

#weaponSelects > section:nth-child(5) {
    display: flex
}

div#augToggle {
    gap: .6em !important;
    grid-template-columns: 1fr 1fr
}

#weaponSelects > select {
    grid-area: auto / 2 /auto/ 5
}

#weaponSelects > div:not(#scrollSwap,#augToggle) {
    column-gap: 4em !important;
    grid-template-columns: 1fr !important
}

div#armorSet {
    display: grid;
    grid-area: 2/1/3/2;
    grid-template-columns: 1fr;
    min-height: max-content !important
}

.augInvis {
    height: 0 !important;
    min-height: 0 !important
}

#weaponStats {
    display: grid;
    grid-template-columns: 3.75em repeat(auto-fit, minmax(4em, 1fr));
    justify-content: center;
    margin-top: 1em;
    max-width: 98vw;
    width: max(51.4em, min(45em, 98.5vw))
}

#weaponStats img {
    box-shadow: none !important;
    max-height: var(--base-h);
    max-width: var(--base-h)
}

#weaponStats div :not(img) {
    max-height: var(--base-h)
}

#weaponStats .augInvis, .switch input, select.augInvis {
    display: none
}

.augInvis:not(.decoDisplay *) {
    display: none;
    visibility: hidden
}

#weaponSelects > section:nth-child(4) > label:first-child {
    background-image: var(--gradient-b);
    grid-area: 1/1/2/2
}

#weaponSelects > button.click {
    position: absolute;
    right: 0
}

.rampage > div {
    width: 100%
}

#Qurious {
    grid-area: 3 /auto/ 4 / auto;
    padding: 0
}

tr.tableRow {
    align-items: stretch;
    display: flex;
    flex-direction: column;
    gap: 0;
    justify-items: stretch;
    margin: 0 !important;
    place-items: stretch
}

section#section1 > div#setBuilder {
    display: grid;
    grid-area: 2 / 1 /auto/ 2;
    grid-template-columns: 1fr;
    max-width: 98.5vw;
    width: max(51.4em, min(45em, 98.5vw));
}

div.setResult {
    grid-template-columns: auto 1fr;
    height: max-content
}

.setResult > span {
    background-image: var(--gradient-b);
    width: 100%
}

table#damageTable:not(.augInvis), table#damageTable:not(.augInvis) * {
    display: grid !important;
    grid-area: 3/1/4/2
}

#damageContainer, table#ammoTable:not(.augInvis), table#ammoTable:not(.augInvis) * {
    display: grid !important;
    grid-template-columns: 1fr
}

#searchAgain {
    display: grid;
    gap: .5em;
    grid-gap: .5em;
    right: .6%
}

#resistances label, #searchAgain > button {
    min-width: max-content
}

#setReturn button:not(.close) {
    position: relative
}

[data-tooltip]:hover:not(th) {
    font-feature-settings: "titl";
    font-variant-caps: titling-caps;
    position: relative !important;
    z-index: 100;
}

[data-tooltip]:hover::after {
    background-image: var(--gradient-b) !important;
    bottom: calc(100% + 5px);
    color: var(--outline-g);
    content: attr(data-tooltip);
    font-size: 11.5px;
    left: 50%;
    max-width: 18em;
    min-width: max-content;
    opacity: 1;
    overflow: visible !important;
    padding: 3px;
    position: absolute;
    top: auto;
    transform: translateX(-50%);
    white-space: pre-line
}

#searcherSkills output[data-tooltip]:hover::after, #searcherSkills output[data-tooltip]:hover::before {
    left: -7em
}

button.augButton {
    min-width: 100%
}

label.switch {
    display: grid;
    grid-area: auto / 1 /auto/ 2 !important;
    height: 100%;
    padding: 0
}

.switch {
    display: block;
    position: relative
}

.currentPoints > output.NewArmorDisplay, button.NewArmorDisplay {
    background-image: var(--gradient-b) !important;
    color: var(--outline-g) !important
}

button.NewArmorDisplay {
    border: .0015em ridge var(--outline-g) !important
}

.armorIcon.NewArmorDisplay {
    display: grid;
    gap: 0 !important;
    grid-area: 2/1/4/2;
    height: calc(var(--base-h) * 2);
    margin: 0 !important;
    max-height: 4em !important;
    max-width: 4em !important
}

:has(>img~select,>select~img) > img:not(#charm img) {
    grid-area: auto / 1 /auto/ 2 !important;
    max-height: var(--base-h) !important
}

.armorDisplay select {
    height: var(--base-h) !important;
    max-height: var(--base-h)
}

:has(>img~select,>select~img) > select:not(.charm select) {
    grid-area: auto / 2 /auto/ 3 !important
}

.armorDisplay img:not(.armorDisplay>img:first-of-type,.decoDisplay img,#charm img), .rampage img {
    grid-area: 1 /auto/ 2 / auto !important
}

.armorTitle.NewArmorDisplay {
    grid-area: 1/1/2/2 !important;
    margin: 0 !important
}

select.NewArmorDisplay {
    background-color: #111 !important;
    color: oklch(.791 .061 86.921deg) !important
}

select.augment.NewArmorDisplay {
    font-size: 12px
}

section.armorDisplay.NewArmorDisplay {
    grid-template-columns: 4.1em 1fr .5fr .5fr 1fr !important
}

.armorDisplay, .armorDisplay * {
    display: grid;
    /* gap: 0 .1em; */
}

label.NewArmorDisplay {
    min-width: max-content !important;
    padding-left: .5em !important;
    padding-right: .5em !important
}

.currentPoints > output.NewArmorDisplay {
    grid-area: 1 !important
}

.armor.NewArmorDisplay {
    grid-area: 1/span 2 !important
}

.armorDisplay > output:not(.eleDiv output).NewArmorDisplay {
    grid-area: auto / 4 /auto/ auto !important
}

.def.NewArmorDisplay, .dragon.NewArmorDisplay, .fire.NewArmorDisplay, .ice.NewArmorDisplay, .thunder.NewArmorDisplay, .water.NewArmorDisplay {
    grid-template-columns: var(--base-h) var(--base-h)
}

section.armorDisplay > #BowGunId.NewArmorDisplay {
    grid-template-columns: 1fr 1fr !important;
    height: 100% !important
}

.rampage .rampage *, .skillDiv.NewArmorDisplay {
    display: grid !important;
    grid-template-columns: var(--base-h) 1fr !important
}

.skillDiv.div8.NewArmorDisplay {
    grid-area: 3/3/4/5
}

#dropWeapon.NewArmorDisplay {
    grid-template-columns: 100% !important
}

output.augCount {
    font-family: emoji;
    grid-area: 1/1;
    min-width: max-content;
    width: 20%;
    z-index: 73
}

.dropContainer.Bow {
    grid-area: 3/2/4/3;
    grid-template-columns: 1fr 1fr !important
}

section.eleSection {
    grid-area: 4/1/5/-1;
    grid-template-columns: 4.1em repeat(5, .25fr) 1.75fr;
    margin-top: .07em
}

section.decoDisplay {
    grid-area: 1/5/4/6;
    grid-template-columns: auto 1fr;
    height: 100%
}

.armorAugment {
    gap: .2em .1em
}

output.currentPoints.NewArmorDisplay, select#dropWeaponType.NewArmorDisplay {
    width: 100% !important
}

section.eleSection {
    display: grid
}

#armorSet :not(.augDiv *,.augCount) {
    font-size: 11px;
    font-weight: 500;
    width: 100%
}

section.armorDisplay.NewArmorDisplay :not(.armorIcon,.armorAugment,#armorSelects section,.decoDisplay,.armorAugment div) {
    gap: .015em;
    max-height: var(--base-h) !important
}

.def.eleDiv.NewArmorDisplay {
    grid-template-columns: 1fr 1fr !important
}

output.NewArmorDisplay {
    max-height: var(--base-h)
}

#armorSet, #armorSet.NewArmorDisplay, .armorDisplay.NewArmorDisplay {
    justify-self: center;
    width: max(51.4em, min(45em, 98.5vw))
}

div#armorSet > section.armorDisplay > section.augInvis.NewArmorDisplay {
    display: none !important;
    height: 0 !important
}

div#weaponDiv.NewArmorDisplay {
    gap: 0 !important;
    grid-template-columns: 1fr auto !important;
    width: 100%
}

.rampage {
    grid-template-columns: auto 1fr;
    width: 100%
}

section.armorAugment.NewArmorDisplay {
    display: grid;
    grid-area: 5/1/8/6 !important;
    grid-template-columns: 1fr 1fr 1fr;
    margin-top: .15em
}

section.armorAugment > .quriousAug.NewArmorDisplay {
    grid-template-columns: 1fr;
    position: relative
}

.div0 {
    grid-area: 1/2/2/3 !important
}

.div1 {
    grid-area: 2/2/3/3 !important
}

.div2 {
    grid-area: 3/2/4/3 !important
}

.div3 {
    grid-template-columns: auto 1fr !important;
    max-height: var(--base-h) !important
}

#settingsMenuButton {
    background-image: var(--gradient-b) !important;
    bottom: 21px;
    color: var(--outline-g) !important;
    display: grid;
    min-width: max-content;
    position: fixed;
    right: 5px;
    width: 8em;
    z-index: 100
}

.blunt:not(.eleSection *)::before, .dragon:not(.eleSection *)::before, .fire:not(.eleSection *)::before, .ice:not(.eleSection *)::before, .sever:not(.eleSection *)::before, .shot:not(.eleSection *)::before, .thunder:not(.eleSection *)::before, .water:not(.eleSection *)::before {
    background-position: 50%;
    background-repeat: no-repeat;
    background-size: contain;
    content: "";
    display: block;
    height: 21px;
    width: var(--base-h)
}

.sever:not(.eleSection *)::before {
    background-image: url(icons/attack.webp) !important
}

.blunt:not(.eleSection *)::before {
    background-image: url(icons/Hammer.webp) !important
}

.shot:not(.eleSection *)::before {
    background-image: url(icons/ammo.webp) !important
}

.ice:not(.eleSection *)::before {
    background-image: url(icons/ice.webp) !important
}

.fire:not(.eleSection *)::before {
    background-image: url(icons/fire.webp) !important
}

.dragon:not(.eleSection *)::before {
    background-image: url(icons/dragon.webp) !important
}

.thunder:not(.eleSection *)::before {
    background-image: url(icons/thunder.webp) !important
}

.water:not(.eleSection *)::before {
    background-image: url(icons/water.webp) !important
}

#infoSettings, th {
    align-items: center
}

#infoSettings {
    background-color: oklch(.182 0 89.876deg);
    box-sizing: border-box;
    color: var(--text-g);
    font-size: 15px;
    line-height: 1.6;
    text-align: center;
    top: 15%;
    width: 650px
}

#infoSettings h2 {
    font-size: var(--step-1);
    font-weight: 700
}

#infoSettings ul {
    list-style-type: disc;
    margin-left: 30px
}

#infoSettings li {
    margin-bottom: 8px
}

#infoSettings h2, #infoSettings p, #infoSettings ul {
    margin-bottom: 16px
}

#weapon .div3 {
    grid-area: 3/3/4/5
}

#weapon .div8 {
    grid-area: 1/4 !important
}

section#weapon {
    grid-area: 1/1/2/-1;
    grid-template-columns: 4.1em 1fr .5fr .5fr 1fr !important;
    max-width: 98.5vw !important;
    width: max(51.4em, min(45em, 98.5vw))
}

#weapon .skillDiv.div6.NewArmorDisplay {
    grid-area: 1/3
}

section#section2 > div {
    overflow: visible;
    overflow: initial;
    width: 100%;
    will-change: contents;
    z-index: 80
}

div#sharpnessContainer {
    background: #111;
    justify-content: flex-start;
    margin: .5em
}

image {
    display: block;
    max-width: 100%
}

button#ammoChange {
    justify-self: end;
    width: fit-content
}

#resistances {
    display: flex;
    flex-wrap: wrap;
    gap: 1em;
    grid-area: auto / 1 /auto/ -1;
    justify-content: space-around;
    margin-bottom: 1.5em;
    max-width: 98vw;
    width: 98vw
}

#damageContainer * {
    font-size: 11px !important
}

#monDisplay {
    display: flex;
    flex-wrap: wrap;
    gap: .5em;
    grid-area: 1/1/2/-1;
    justify-content: space-evenly;
    margin-bottom: 1.5em;
    max-width: 97%
}

#monDisplay * {
    max-height: var(--base-h) !important
}

#monDisplay div {
    display: grid;
    grid-template-columns: auto 1fr
}

#monDisplay label {
    grid-area: 1/1/2/2;
    padding-left: 5px;
    padding-right: 5px
}

button#enraged:not(.selected), button#weaponFilter:not(.selected) {
    color: oklch(.867 0 89.876deg) !important
}

section#charmSlots > label:first-child {
    grid-area: 1/1/2/3
}

#damageContainer, table#dpsTable, tbody#dpsBody {
    grid-template-columns: 1fr;
    width: 100%
}

tbody#dpsBody {
    grid-area: 2/1/3/-1
}

.grid, .grid div, span, table#dpsTable {
    display: grid
}

output#enrageOutput {
    padding-left: 2.5px;
    padding-right: 2.5px
}

section#section2 {
    gap: 1em
}

.grid {
    gap: 1em !important;
    margin-bottom: 1em;
    overflow: auto
}

tbody#ammoBody {
    grid-template-columns: 1fr
}

section#section1 {
    filter: drop-shadow(.5px .5px 0 #000);
    max-width: 98.5vw
}

#weaponSelects, .dropdown, .grid, .setResult > div, div#augToggle, div#setReturn, div#unique, img.invis:hover {
    position: relative
}

div#setReturn {
    grid-template-columns: 1fr;
    z-index: 100
}

#armorSet, #armorSet.NewArmorDisplay, .armorDisplay.NewArmorDisplay {
    max-width: 98.5vw
}

button#extendedSearch {
    grid-area: 1/2
}

.animate-fade-in {
    animation: fadeIn .5s ease-out
}

div#loadStateContainer div {
    background: #111;
    display: grid !important;
    grid-template-columns: auto 1fr !important;
    margin: .5rem;
    width: 10em
}

div#loadStateContainer button {
    grid-area: 1/1/2/3;
    margin-block: .15rem
}

button, label {
    height: var(--base-h);
    max-height: var(--base-h)
}

div#loadStateContainer {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(10em, 1fr));
    justify-items: center;
    margin-bottom: 1em;
    width: 98vw
}

div#loadStateContainer img {
    height: var(--base-h) !important;
    max-height: var(--base-h) !important;
    min-height: var(--base-h) !important
}
