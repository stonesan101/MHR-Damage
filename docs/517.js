(self.webpackChunkmhrdamage=self.webpackChunkmhrdamage||[]).push([[517,459],{517:(e,t,o)=>{o.r(t),o.d(t,{konamiCode:()=>konamiCode,loadState:()=>loadState,saveState:()=>saveState});var s=o(459),n=o(552);const toClipboardNoFocus=e=>{const t=document.createElement("textarea");t.value=e,document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t)};let r=document.getElementById("dropWeapon").value,l=document.getElementById("dropWeaponType").value,weaponSelect=()=>{let e="";window.info[l].weapons.forEach(((t,o)=>{t.rank<10||(e+=`<option value="${o}">${t.weapon}</option>`)})),r.innerHTML=e};function saveState(){const e=[r.selectedIndex,l.selectedIndex];document.querySelectorAll("#skillSelect label").forEach((t=>{e.push([t.textContent,+t.nextElementSibling.textContent.slice(-1)])})),toClipboardNoFocus(JSON.stringify([[e],Object.values(document.querySelectorAll("section.armorDisplay")).map((e=>[].concat(Object.values(e.querySelectorAll(".armor,select.augmentType,select.augment")).map((e=>e.selectedIndex)),Object.values(e.querySelectorAll("select.armorDisplay")).map((e=>e.selectedIndex)))))]))}function loadState(){navigator.clipboard.readText().then((async e=>{const t=JSON.parse(e),o=await t.shift()[0];l.selectedIndex=await o.shift(),await(0,n.rA)(),await weaponSelect(),r.selectedIndex=await o.shift(),await(0,n.E_)(),await o.forEach((e=>(0,n.Nb)(e[0],e[1]))),(0,s.getSetBuilds)(15)}))}document.getElementById("saveState").addEventListener("click",(()=>saveState())),document.getElementById("loadState").addEventListener("click",(()=>loadState()));let i=[38,38,40,40,37,39,37,39,97,98,13],a=0;function konamiCode(e){(0,n.rA)(e);const t=window.info.types.maxLevel,o=Object.entries(t).sort(),s=document.querySelector("#EquippedSkillDisplay>output");let r="";for(const[e,t]of o){let o="Active",s=["Active","Inactive"];if("Dereliction"===e)s=["Lvl-3","Inactive","Lvl-1","Lvl-2"],o=s[0];else if("Fortify"===e)s=["Inactive","Lvl-1","Lvl-2"],o=s[0];else if("Frostcraft"===e){switch(t){case 1:s=["Lvl-1","Inactive"];break;case 2:s=["Lvl-2","Lvl-1","Inactive"];break;default:s=["Lvl-3","Lvl-2","Lvl-1","Inactive"]}o=s[0]}else"Strife"===e&&(s=["High","Low","Inactive"],o=s[0]);r+=`<button type="button" aria-pressed="false" data-state="0" onclick='let states = ${JSON.stringify(s)}; let index = (parseInt(this.dataset.state) + 1) % states.length; this.textContent = states[index]; this.dataset.state = index;'>${o}</button><output>${l=e,l.replace(/(?<=[a-z])([A-Z])(?![A-Z])/g," $1")}: ${t}</output>`}var l;s.innerHTML=r,Object.values(document.querySelectorAll(`select.${e},#dango select`)).forEach((e=>e.selectedIndex=e.childElementCount-1)),Object.values(document.querySelectorAll("#boxes .check")).forEach((e=>e.checked=!0)),console.log("Konami Code entered!")}window.addEventListener("keydown",(function(e){e.keyCode===i[a]?(a++,a===i.length&&(konamiCode(document.getElementById("dropWeaponType").value),a=0)):a=0}))},459:(e,t,o)=>{o.r(t),o.d(t,{getSetBuilds:()=>getSetBuilds,getSetRequirements:()=>getSetRequirements,getSkillReq:()=>getSkillReq,testBuild:()=>testBuild});var s=o(16),n=o(552),r=o(102),l=o(923);const i=JSON.parse('{"AttackBoost":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"Agitator":[4,3,[[2,2,2,2,16],[2,2,1,1,12]]],"PeakPerformance":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"Resentment":[4,3,[[2,2,2,2,16],[2,2,1,1,12]]],"Resuscitate":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"CriticalEye":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"CriticalBoost":[3,2,[[3,3,0,0,15],[2,2,0,0,10]]],"WeaknessExploit":[3,2,[[3,3,0,0,15],[2,2,0,0,10]]],"LatentPower":[5,4,[[3,3,2,2,20],[2,2,2,2,16]]],"MaximumMight":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"CriticalElement":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"MastersTouch":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"FireAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"WaterAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"IceAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"ThunderAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"DragonAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"PoisonAttack":[3,3,[[1,1,1,1,6],[1,1,1,1,6]]],"ParalysisAttack":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"SleepAttack":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"BlastAttack":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"Handicraft":[4,3,[[2,2,2,2,16],[2,2,2,1,12]]],"RazorSharp":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"SpareShot":[3,2,[[3,3,0,0,15],[2,2,0,0,10]]],"ProtectivePolish":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"MindsEye":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"Ballistics":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"Bludgeoner":[3,2,[[3,3,0,0,0],[2,2,0,0,0]]],"Focus":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"PowerProlonger":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"MarathonRunner":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"Constitution":[5,4,[[3,3,2,2,10],[2,2,2,2,8]]],"StaminaSurge":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"Guard":[5,4,[[3,3,2,0,10],[2,2,2,0,8]]],"GuardUp":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"OffensiveGuard":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"CriticalDraw":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"PunishingDraw":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"QuickSheathe":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"Slugger":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"StaminaThief":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"AffinitySliding":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"HornMaestro":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"Artillery":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"LoadShells":[2,2,[[1,1,1,1,4],[1,1,1,1,4]]],"SpecialAmmoBoost":[2,2,[[1,1,1,1,4],[1,1,1,1,4]]],"NormalRapidUp":[3,2,[[2,2,2,1,15],[1,1,1,1,10]]],"PierceUp":[3,2,[[2,2,2,1,15],[1,1,1,1,10]]],"SpreadUp":[3,2,[[2,2,2,1,15],[1,1,1,1,10]]],"AmmoUp":[3,2,[[2,2,2,1,15],[1,1,1,1,10]]],"ReloadSpeed":[3,2,[[3,0,0,0,6],[2,0,0,0,4]]],"RecoilDown":[3,2,[[3,0,0,0,6],[2,0,0,0,4]]],"Steadiness":[3,2,[[1,1,1,1,6],[2,0,0,0,4]]],"RapidFireUp":[3,2,[[3,3,3,0,15],[2,2,2,0,10]]],"DefenseBoost":[7,6,[[2,2,1,1,7],[2,1,1,1,6]]],"DivineBlessing":[3,3,[[2,2,1,1,3],[2,2,1,1,3]]],"RecoveryUp":[3,3,[[2,2,1,1,3],[2,2,1,1,3]]],"RecoverySpeed":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"SpeedEating":[3,3,[[2,2,1,1,6],[2,2,1,1,6]]],"Earplugs":[5,4,[[3,3,3,2,15],[2,2,2,2,12]]],"Windproof":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"TremorResistance":[3,3,[[2,2,1,1,6],[2,2,1,1,6]]],"BubblyDance":[3,3,[[2,2,1,1,6],[2,2,1,1,6]]],"EvadeWindow":[5,4,[[3,3,2,2,10],[2,2,2,2,8]]],"EvadeExtender":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"FireResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"WaterResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"IceResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"ThunderResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"DragonResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"BlightResistance":[3,2,[[2,2,1,1,3],[1,1,1,1,2]]],"PoisonResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"ParalysisResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"SleepResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"StunResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"MuckResistance":[2,2,[[2,0,0,0,2],[2,0,0,0,2]]],"BlastResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"Botanist":[4,4,[[2,1,1,1,0],[2,1,1,1,0]]],"Geologist":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"Partbreaker":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"GoodLuck":[3,2,[[2,2,2,1,12],[1,1,1,1,8]]],"SpeedSharpening":[3,2,[[1,1,1,1,3],[2,0,0,0,2]]],"Bombardier":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"Mushroomancer":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"ItemProlonger":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"Wide-Range":[5,4,[[2,2,1,1,5],[1,1,1,1,4]]],"FreeMeal":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"Heroics":[4,3,[[2,2,2,2,12],[2,2,1,1,9]]],"Fortify":[1,1,[[1,1,0,0,1],[1,1,0,0,1]]],"FlinchFree":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"JumpMaster":[1,1,[[1,1,1,0,0],[1,1,1,0,0]]],"CarvingPro":[1,1,[[1,0,0,0,0],[1,0,0,0,0]]],"HungerResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"LeapofFaith":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"Diversion":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"MasterMounter":[1,1,[[1,1,0,0,1],[1,1,0,0,1]]],"WirebugWhisperer":[3,3,[[2,2,1,1,9],[2,2,1,1,9]]],"WallRunner":[3,3,[[1,1,1,1,6],[1,1,1,1,6]]],"Counterstrike":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"RapidMorph":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"HellfireCloak":[4,3,[[2,2,2,2,12],[2,2,2,1,9]]],"Coalescence":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"Redirection":[2,1,[[1,1,1,1,6],[1,1,1,0,3]]],"SpiribirdsCall":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"ChargeMaster":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"Foray":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"Tune-Up":[2,1,[[1,1,1,1,8],[1,1,1,0,4]]],"GrinderS":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"BladescaleHone":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"WallRunnerBoost":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"Burst":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"ChameleosBlessing":[4,3,[[4,0,0,0,8],[3,0,0,0,6]]],"KushalaBlessing":[4,3,[[4,0,0,0,8],[3,0,0,0,6]]],"TeostraBlessing":[4,3,[[4,0,0,0,8],[3,0,0,0,6]]],"Dragonheart":[4,3,[[4,4,4,4,12],[3,3,3,3,9]]],"BloodRite":[3,2,[[3,3,3,0,12],[2,2,2,0,8]]],"Bloodlust":[3,2,[[3,3,3,3,12],[2,2,2,2,8]]],"Dereliction":[2,1],"Furious":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"MailofHellfire":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"SneakAttack":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"AdrenalineRush":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"ElementExploit":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"StatusTrigger":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"Defiance":[5,4,[[3,1,1,1,10],[2,1,1,1,8]]],"Guts":[2,1,[[0,0,0,0,10],[0,0,0,0,5]]],"Embolden":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"IntrepidHeart":[2,1,[[1,1,1,0,4],[1,0,0,0,2]]],"BuildupBoost":[3,2,[[0,0,0,0,12],[0,0,0,0,8]]],"Berserk":[2,1],"Strife":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"WindMantle":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"PowderMantle":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"Frostcraft":[3,2,[[0,0,0,0,12],[0,0,0,0,8]]],"DragonConversion":[3,2,[[0,0,0,0,12],[0,0,0,0,8]]]}');const compareKeys=(e,t)=>{for(let o=0;o<4;o++)if(e[o]>t[o])return!1;return!0};let a={};const c=document.getElementById("dropWeapon"),d=document.getElementById("dropWeaponType");let u,m=0,f=0,h=[],p=0,GlobalMap=new Map,g=!window.location.origin.includes("github"),k=0;const getUsedCharm=e=>e.map((e=>{let t=e.usedSkills.charm;return`${t[0][0]}: ${t[0][1]} & ${t[1][0]}: ${t[1][1]}`})),getSkillReq=(e=[])=>(document.querySelectorAll(".buildSkills>div>.skill").forEach((t=>{t.selectedIndex>0&&e.push([t.id,t.selectedIndex])})),e),getSetRequirements=(e=window.info.types)=>{const t={},o={};let s=new Set;return window.info.charms.forEach((e=>Object.keys(e.skills).map((e=>s.add(e))))),document.querySelectorAll("#searcherSkills>div>output").forEach((n=>{const r=n.className.split(" ")[1];t[r]=-n.textContent.match(/(?<=Lv-)\d/)[0],o[r]={lvl:e.decos[r]??5,lvl4:e.lvl4[r]??0,qurious:~~((e.qurious[r]??(s.has(r)||e.decos[r]?30:60))/3)};let l=0;5===o[r].lvl&&++l,o[r].qurious>5&&++l,s.has(r)||++l,3===l?(o.setBonus||(o.setBonus={}),o.setBonus[r]=-t[r]):2===l&&(o.charmNeeded||(o.charmNeeded={}),o.charmNeeded[r]=-t[r],o.charmSkillPoints=i[r][0])})),{skills:Object.fromEntries(Object.entries(t).sort(((e,t)=>o[t[0]].lvl-o[e[0]].lvl||o[e[0]].qurious-o[t[0]].qurious))),skillInfo:o}},max=(e,t)=>e>=t?e:t;function startWorkers(){for(let e=0;e<5;e++)h[e]=new Worker("./setBuildWorker.js");h.forEach((e=>{e.addEventListener("message",(e=>{--p,e.data.final.sets.length&&(m+=e.data.final.count.combos,k+=e.data.final.count.sets,GlobalMap.size<100&&(e=>{for(const t of e){if(GlobalMap.size<100){GlobalMap.set(GlobalMap.size,t);const e=getUsedCharm(t);let o='<button type="button" aria-pressed="false" class="equipBuild">Equip Build</button>';for(let e=0;e<5;e++)o+=`<output class="armorImg ${["helm","chest","arm","waist","leg"][e]}"></output><span>${t[0].armors[e][0]}</span>`;let s="";e.forEach((e=>{s+=`<option value="${e}">${e}</option>`})),o+=`<output class="armorImg charm"></output><select class="armorCharm" title="charmSkill1">${s}</select>`;const n=document.createElement("div");n.classList.add("setResult"),n.innerHTML=o,document.querySelector(".grid").appendChild(n)}let e=0;for(let t=0;t<=100&&GlobalMap.has(t);t++)GlobalMap.get(t).forEach((t=>e+=t.charmList.length));document.getElementById("setOutput").textContent=`Displayed ${Math.min(100,GlobalMap.size)} Builds / ${e.toLocaleString()} Combinations`}})(e.data.final.sets));let t=e.data.final.stats;for(let e=0;e<4;e++)a.remainingSlots[e]=max(a.remainingSlots[e]||0,t.remainingSlots[e]);for(let e=0;e<5;e++)a.quriousSkills[e]=max(a.quriousSkills[e]||0,t.quriousSkills[e]);for(const[e,o]of Object.entries(t.armorSkills))a.armorSkills[e]=max(a.armorSkills[e]||0,o);g||e.target.terminate(),p||((e=>{let t="";e.forEach((e=>{0!=e[1]&&(t+=`<button textContent="${e[0]}">${e[0].replace(/(?<=[a-z])([A-Z])(?![A-Z])/g," $1")} +${+e[1]}</button>`)})),document.getElementById("temp")&&document.getElementById("temp").remove(),document.querySelector(".extraSkills").innerHTML+=t,document.getElementById("extraOutput").textContent=`Found ${k.toLocaleString()} Builds / ${m.toLocaleString()} Combinations`,window.location.href.includes("github")||(console.log((performance.now()-f)/1e3),console.log(GlobalMap))})(((e=window.info.types)=>{const{skills:t}=getSetRequirements(),{armorSkills:o,remainingSlots:s,quriousSkills:n}=a;for(let t=0;t<4;++t)if(s[t])for(const[n,r]of Object.entries(e.decoLevels[t]))o[n]=Math.max(o[n]||0,r*s[t]);Object.entries(e.qurious).forEach((([e,t])=>{n[~~(t/3)-1]&&(o[e]=Math.max(o[e]||0,n[t/3-1]))}));const r=[];return Object.entries(o).forEach((([o,s])=>{if(isNaN(o))if(t[o]+ +s>0&&e.maxLevel[o]>0){const n=(e.maxLevel[o]||window.info.skills[o].length-1)+t[o];r.push([o,Math.min(+s,n)])}else t[o]||!e.maxLevel[o]&&!window.info.skills[o]||r.push([o,Math.min(+s,e.maxLevel[o]||window.info.skills[o].length-1)])})),r.sort()})()),GlobalMap.has("finished")||(document.querySelector(".grid").innerHTML+=u,u="",GlobalMap.set("finished",!0)),m||(document.getElementById("setOutput").textContent="No Results Found",document.querySelectorAll(".grid>div").forEach((e=>e.remove()))))}))}))}const getSetBuilds=(e=10)=>{if(f=performance.now(),h.length)for(let e of h)e.terminate();p=5,startWorkers();const t=getSetRequirements();t.charmSlots=window.info[d.value].weapons[c.value].decos.slice(),document.querySelectorAll(".charmSlot").forEach((e=>{e.selectedIndex>0&&++t.charmSlots[e.selectedIndex-1]})),t.theseCharms=(e=>{let t={qurious:{},standard:{},decos:{},charmRequired:{}};const{types:o,charms:s}=window.info;s.forEach((s=>{if(Object.entries(s.skills).every((([t,o])=>e[t]+o<=0))){if(!1===s.key){const e=Object.keys(s.skills)[1];return t.charmRequired[o.decos[e]]||(t.charmRequired[o.decos[e]]={}),t.charmRequired[o.decos[e]][o.qurious[e]]||(t.charmRequired[o.decos[e]][o.qurious[e]]=[]),void t.charmRequired[o.decos[e]][o.qurious[e]].push(...s.skills)}let e,n,r="standard";Array.isArray(s.key)&&4===s.key.length?(e=[...s.key[0].slice(0,4),s.key[2]],n=s.key[0].slice(4),r="deco"===s.key[3]?"deco":"qurious"):(e=s.key.slice(0,4),n=s.key.slice(4)),t[r][e]||(t[r][e]={}),t[r][e][n]||(t[r][e][n]=[]),t[r][e][n].push(s.skills)}}));for(let e in t)for(let o in t[e])t[e][o]=Object.values(t[e][o])[0].reverse();const n={charmRequired:t.charmRequired};for(const e in t){if("charmRequired"===e)continue;const o=Object.entries(t[e]).map((e=>[e[0].split(","),e[1]]));o.sort((([e],[t])=>t.join("")-e.join("")));let s=[],r=[];e:for(let e of o){for(let t=0;t<r.length;t++)if(compareKeys(e[0],r[t][r[t].length-1])){r[t].push(e[0]),s[t].push(e[1]);continue e}r[r.length]=[e[0]],s[s.length]=[e[1]]}n[e]=s}return console.log(n),n})(t.skills),t.armors=function(e,t,o){let s=JSON.parse(JSON.stringify(window.info.armor));const n={helm:[],waist:[],chest:[],arm:[],leg:[]},r=[2.5,4.25,4.25,7];for(let e=0;e<5;++e)(0,l.VW)().forEach((e=>{s[e]=s[e].filter((e=>"MaleOnly"!==e.sex))}));return(0,l.VW)().forEach((l=>{s[l].forEach((s=>{if(!s)return;const i={},a=s.skills;if(13!==s.quriousTable){let e,t=-1;for(let[o,n]of Object.entries(s.decoAugments)){if(++t,o>3)break;0==o||3===o&&t<2||(e=[+o,n[1]])}if(e){const[t,o]=e;i.decos=o,i.augs=[{"+Slots":-6*+t}],i.quriousPoints=s.quriousPoints-6*t}}else 13===s.quriousTable&&(i.decos=[1,1,0,1],i.quriousPoints=0,i.augs=[{def:5},{def:5},{def:5},{def:5},{"+Slots":-18},{"+Slots":-12}]);if(i.augs||(i.decos=s.decos,i.augs=[],i.quriousPoints=s.quriousPoints),e.StormSoul>3){const e=4===document.getElementById("StormSoul").selectedIndex?1:2;for(const o of a)t[o].qurious<6&&(a[o]+=e)}i.fodderSkills=[],i.fodderCount=0;let c=i.decos[0]*r[0]+i.decos[1]*r[1]+i.decos[2]*r[2]+i.decos[3]*r[3];for(const[o,n]of Object.entries(a))if(e[o])e[o]?((t[o].setBonus||t[o].charmNeeded)&&(c+=15*Math.min(-1*e[o],a[o])),c+=Math.min(-e[o],a[o])*(20===t[o].qurious?4:t[o].qurious/3)):13===s.quriousTable||i.fodderCount||(i.fodderCount=0);else{i.fodderCount+=n;for(let e=0;e<n;e++)i.fodderSkills.push(o)}if(13===s.quriousTable)i.unBloatedPoints=0,i.armorRating=c;else{let e=[],t=3;for(;t--;)i.augs[t]?e=e.concat(i.augs[0]):i.fodderCount-t>0?(e.push({"-Skill":i.fodderSkills.pop()}),i.quriousPoints+=10):(e.push({"-Def":5}),i.quriousPoints+=5);i.augs=e,i.unBloatedPoints=~~(i.quriousPoints/3),i.armorRating=c,i.armorRating=c+i.unBloatedPoints}const addArmorPiece=(e,t=!0)=>{i.name=s.name,i.type=l,i.skills=s.skills,t?(n[l].pop(),n[l].splice(e,0,i)):n[l].push(i)};for(let e=0;e<n[l].length;e++)if(i.armorRating>n[l][e].armorRating)return void addArmorPiece(e);n[l].length<o&&addArmorPiece(n[l].length-1,!1)}))})),Object.values(n).forEach((t=>t.forEach((t=>{t.skillLimitation=5-Object.keys(t.skills).length-(6-t.augs.length),t.requestedSkills=Object.keys(t.skills).filter((t=>e[t])),t.skillsRemovedCount=t.fodderCount<3?t.fodderCount:3,t.startingQuriousPoints=t.quriousPoints,delete t.armorRating})))),n}(t.skills,t.skillInfo,e),t.skillInfo={charmNeeded:t.skillInfo.charmNeeded,charmSkillPoints:t.skillInfo.charmSkillPoints,setBonus:t.skillInfo.setBonus,setLimiter:4-document.getElementById("skillsLimit").selectedIndex},t.skills=Object.entries(t.skills).sort(((e,t)=>window.info.types.qurious[e[0]]-window.info.types.qurious[t[0]]));let o=t.armors.helm.splice(0),s=~~(o.length/5);GlobalMap.clear();for(const e of h)t.armors.helm=o.splice(0,s),e.postMessage(t);u="",document.getElementById("setReturn").classList.remove("augInvis"),document.querySelectorAll(".extraSkills>button").forEach((e=>e.remove())),document.getElementById("temp")&&document.getElementById("temp").remove(),document.querySelector(".extraSkills").innerHTML+="<P2 id='temp' style='font-size:18px !important; height:15em !important;'>Searching...</P2>",document.getElementsByClassName("grid")[0].innerHTML="",a={remainingSlots:[0,0,0,0],armorSkills:{},quriousSkills:[0,0,0,0,0]},m=0,k=0};let S=0,y="";document.addEventListener("keypress",(e=>{e.key===["t","e","s","t"][Math.min(3,S)]&&++S<3||("Enter"===e.key&&S>=3?(testBuild("f"!==y),y="",S=0):/t|f/.test(e.key)&&S>=3?y=e.key:S<3&&(S=0))}));const testBuild=(e=!0)=>(["PeakPerformance","Coalescence","CriticalEye","CriticalBoost","MaximumMight","RecoilDown","ReloadSpeed","RapidFireUp","PierceUp","Burst","Agitator","AttackBoost","AmmoUp","SpareShot"].forEach((e=>(0,n.Nb)(e,window.info.types.maxLevel[e]))),getSetBuilds(15),GlobalMap);document.getElementById("startSearch").addEventListener("click",(()=>getSetBuilds(10))),document.getElementById("normalSearch").addEventListener("click",(()=>getSetBuilds())),document.getElementById("extendedSearch").addEventListener("click",(()=>getSetBuilds(15))),document.querySelector(".grid").addEventListener("mousedown",(e=>{if("BUTTON"!==e.target.tagName)return;const t=Object.values(document.querySelectorAll("div.grid > div.setResult")).indexOf(e.target.parentElement);if(!GlobalMap.has(t))return;const o=GlobalMap.get(t)[e.target.parentElement.lastElementChild.selectedIndex];(0,s.dj)(o.usedSkills.charm);let i=Object.values(o.usedSkills.augments);o.armors.forEach(((e,t)=>e[1].augs=i[t])),(0,s.qy)(o.armors),(0,s.Cj)((0,s.G_)(o.usedSkills.decos)),document.getElementById("setReturn").classList.add("augInvis"),(0,n.TG)(),document.querySelectorAll(".extraSkills>button").forEach((e=>e.remove())),document.querySelectorAll(".grid>div").forEach((e=>e.remove())),(0,s.ae)(),(0,l.VW)().forEach((e=>(0,r.M9)(e))),(0,n.TG)(),window.location.href.includes("github")||console.log(JSON.parse(JSON.stringify(o))),GlobalMap.clear()}))}}]);