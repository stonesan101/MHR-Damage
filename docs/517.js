(self.webpackChunkmhrdamage=self.webpackChunkmhrdamage||[]).push([[517,951],{517:(e,t,o)=>{o.r(t),o.d(t,{konamiCode:()=>f,loadState:()=>d,saveState:()=>c});var n=o(951),s=o(552);const l=e=>{const t=document.createElement("textarea");t.value=e,document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t)};let i=document.getElementById("dropWeapon").value,r=document.getElementById("dropWeaponType").value,a=()=>{let e="";window.info[r].weapons.forEach(((t,o)=>{t.rank<10||(e+=`<option value="${o}">${t.weapon}</option>`)})),document.getElementById("dropWeapon").innerHTML=e};function c(){const e=[i.selectedIndex,r.selectedIndex];document.querySelectorAll("#skillSelect label").forEach((t=>{e.push([t.textContent,+t.nextElementSibling.textContent.slice(-1)])})),l(JSON.stringify([[e],Object.values(document.querySelectorAll("section.armorDisplay")).map((e=>[].concat(Object.values(e.querySelectorAll(".armor,select.augmentType,select.augment")).map((e=>e.selectedIndex)),Object.values(e.querySelectorAll("select.armorDisplay")).map((e=>e.selectedIndex)))))]))}function d(){navigator.clipboard.readText().then((async e=>{const t=JSON.parse(e),o=await t.shift()[0];document.getElementById("dropWeaponType").selectedIndex=await o.shift(),await(0,s.rA)(),await a(),document.getElementById("dropWeapon").selectedIndex=await o.shift(),await(0,s.E_)(),await o.forEach((e=>(0,s.Nb)(e[0],e[1]))),(0,n.getSetBuilds)(15)}))}document.getElementById("saveState").addEventListener("click",(()=>c())),document.getElementById("loadState").addEventListener("click",(()=>d()));let u=[38,38,40,40,37,39,37,39,97,98,13],m=0;function f(e){(0,s.rA)(e);const t=window.info.types.maxLevel,o=Object.entries(t).sort();document.querySelector("#EquippedSkillDisplay>output").innerHTML=function(e,t){let o="";for(const[n,s]of e){let e="Active",l=["Active","Inactive"];if("Dereliction"===n)l=["Lvl-3","Inactive","Lvl-1","Lvl-2"],e=l[0];else if("Fortify"===n)l=["Inactive","Lvl-1","Lvl-2"],e=l[0];else if("Frostcraft"===n){switch(s){case 1:l=["Lvl-1","Inactive"];break;case 2:l=["Lvl-2","Lvl-1","Inactive"];break;default:l=["Lvl-3","Lvl-2","Lvl-1","Inactive"]}e=l[0]}else"Strife"===n&&(l=["High","Low","Inactive"],e=l[0]);o+=`<button type="button" aria-pressed="false" data-state="0" onclick='let states = ${JSON.stringify(l)}; let index = (parseInt(this.dataset.state) + 1) % states.length; this.textContent = states[index]; this.dataset.state = index;'>${e}</button><output>${t(n)}: ${s}</output>`}return o}(o,(e=>e.replace(/(?<=[a-z])([A-Z])(?![A-Z])/g," $1"))),Object.values(document.querySelectorAll(`select.${e},#dango select`)).forEach((e=>e.selectedIndex=e.childElementCount-1)),Object.values(document.querySelectorAll("#boxes .check")).forEach((e=>e.checked=!0)),console.log("Konami Code entered!")}document.addEventListener("keydown",(function(e){e.keyCode===u[m]?(m++,m===u.length&&(f(document.getElementById("dropWeaponType").value),m=0)):m=0}))},951:(e,t,o)=>{o.r(t),o.d(t,{getSetBuilds:()=>b,getSetRequirements:()=>v,getSkillReq:()=>y,testBuild:()=>C});var n=o(16),s=o(552),l=o(923);const i=JSON.parse('{"AttackBoost":[[3,[2,2,1,1],15],[2,[1,1,1,1],10]],"Agitator":[[4,[2,2,2,2],16],[3,[2,2,1,1],12]],"PeakPerformance":[[3,[2,2,1,1],12],[2,[1,1,1,1],8]],"Resentment":[[4,[2,2,2,2],16],[3,[2,2,1,1],12]],"Resuscitate":[[3,[2,2,1,1],12],[2,[1,1,1,1],8]],"CriticalEye":[[3,[2,2,1,1],15],[2,[1,1,1,1],10]],"CriticalBoost":[[3,[3,3,0,0],15],[2,[2,2,0,0],10]],"WeaknessExploit":[[3,[3,3,0,0],15],[2,[2,2,0,0],10]],"LatentPower":[[5,[3,3,2,2],20],[4,[2,2,2,2],16]],"MaximumMight":[[3,[2,2,1,1],12],[2,[1,1,1,1],8]],"CriticalElement":[[3,[2,2,1,1],9],[2,[1,1,1,1],6]],"MastersTouch":[[3,[2,2,1,1],15],[2,[1,1,1,1],10]],"FireAttack":[[5,[2,1,1,1],5],[3,[1,1,1,0],3]],"WaterAttack":[[5,[2,1,1,1],5],[3,[1,1,1,0],3]],"IceAttack":[[5,[2,1,1,1],5],[3,[1,1,1,0],3]],"ThunderAttack":[[5,[2,1,1,1],5],[3,[1,1,1,0],3]],"DragonAttack":[[5,[2,1,1,1],5],[3,[1,1,1,0],3]],"PoisonAttack":[[3,[1,1,1,1],6],[3,[1,1,1,1],6]],"ParalysisAttack":[[3,[2,2,1,1],6],[2,[1,1,1,1],4]],"SleepAttack":[[3,[2,2,1,1],6],[2,[1,1,1,1],4]],"BlastAttack":[[3,[2,2,1,1],6],[2,[1,1,1,1],4]],"Handicraft":[[4,[2,2,2,2],16],[3,[2,2,2,1],12]],"RazorSharp":[[3,[2,2,1,1],15],[2,[1,1,1,1],10]],"SpareShot":[[3,[2,2,1,1],15],[2,[1,1,1,1],10]],"ProtectivePolish":[[3,[2,2,1,1],9],[2,[1,1,1,1],6]],"MindsEye":[[3,[2,2,1,1],9],[2,[1,1,1,1],6]],"Ballistics":[[3,[2,2,1,1],9],[2,[1,1,1,1],6]],"Bludgeoner":[[3,[3,3,0,0],0],[2,[2,2,0,0],0]],"Focus":[[3,[2,2,1,1],9],[2,[1,1,1,1],6]],"PowerProlonger":[[3,[2,2,1,1],9],[2,[1,1,1,1],6]],"MarathonRunner":[[3,[2,2,1,1],6],[2,[1,1,1,1],4]],"Constitution":[[5,[3,3,2,2],10],[4,[2,2,2,2],8]],"StaminaSurge":[[3,[2,2,1,1],6],[2,[1,1,1,1],4]],"Guard":[[5,[3,3,2,0],10],[4,[2,2,2,0],8]],"GuardUp":[[3,[2,2,1,1],6],[2,[1,1,1,1],4]],"OffensiveGuard":[[3,[2,2,2,1],9],[2,[1,1,1,1],6]],"CriticalDraw":[[3,[2,2,2,1],9],[2,[1,1,1,1],6]],"PunishingDraw":[[3,[2,2,1,1],6],[2,[1,1,1,1],4]],"QuickSheathe":[[3,[2,2,1,1],6],[2,[1,1,1,1],4]],"Slugger":[[3,[2,2,1,1],6],[2,[1,1,1,1],4]],"StaminaThief":[[3,[1,1,1,1],3],[3,[1,1,1,1],3]],"AffinitySliding":[[1,[1,0,0,0],1],[1,[1,0,0,0],1]],"HornMaestro":[[1,[1,0,0,0],1],[1,[1,0,0,0],1]],"Artillery":[[3,[2,2,1,1],12],[2,[1,1,1,1],8]],"LoadShells":[[2,[1,1,1,1],4],[2,[1,1,1,1],4]],"SpecialAmmoBoost":[[2,[1,1,1,1],4],[2,[1,1,1,1],4]],"NormalRapidUp":[[3,[2,2,2,1],15],[2,[1,1,1,1],10]],"PierceUp":[[3,[2,2,2,1],15],[2,[1,1,1,1],10]],"SpreadUp":[[3,[2,2,2,1],15],[2,[1,1,1,1],10]],"AmmoUp":[[3,[2,2,2,1],15],[2,[1,1,1,1],10]],"ReloadSpeed":[[3,[3,0,0,0],6],[2,[2,0,0,0],4]],"RecoilDown":[[3,[3,0,0,0],6],[2,[2,0,0,0],4]],"Steadiness":[[3,[1,1,1,1],6],[2,[2,0,0,0],4]],"RapidFireUp":[[3,[3,3,3,0],15],[2,[2,2,2,0],10]],"DefenseBoost":[[7,[2,2,1,1],7],[6,[2,1,1,1],6]],"DivineBlessing":[[3,[2,2,1,1],3],[3,[2,2,1,1],3]],"RecoveryUp":[[3,[2,2,1,1],3],[3,[2,2,1,1],3]],"RecoverySpeed":[[3,[1,1,1,1],3],[3,[1,1,1,1],3]],"SpeedEating":[[3,[2,2,1,1],6],[3,[2,2,1,1],6]],"Earplugs":[[5,[3,3,3,2],15],[4,[2,2,2,2],12]],"Windproof":[[3,[1,1,1,1],3],[3,[1,1,1,1],3]],"TremorResistance":[[3,[2,2,1,1],6],[3,[2,2,1,1],6]],"BubblyDance":[[3,[2,2,1,1],6],[3,[2,2,1,1],6]],"EvadeWindow":[[5,[3,3,2,2],10],[4,[2,2,2,2],8]],"EvadeExtender":[[3,[2,2,1,1],6],[2,[1,1,1,1],4]],"FireResistance":[[3,[1,1,1,1],0],[3,[1,1,1,1],0]],"WaterResistance":[[3,[1,1,1,1],0],[3,[1,1,1,1],0]],"IceResistance":[[3,[1,1,1,1],0],[3,[1,1,1,1],0]],"ThunderResistance":[[3,[1,1,1,1],0],[3,[1,1,1,1],0]],"DragonResistance":[[3,[1,1,1,1],0],[3,[1,1,1,1],0]],"BlightResistance":[[3,[2,2,1,1],3],[2,[1,1,1,1],2]],"PoisonResistance":[[3,[1,1,1,1],3],[3,[1,1,1,1],3]],"ParalysisResistance":[[3,[1,1,1,1],3],[3,[1,1,1,1],3]],"SleepResistance":[[3,[1,1,1,1],3],[3,[1,1,1,1],3]],"StunResistance":[[3,[1,1,1,1],3],[3,[1,1,1,1],3]],"MuckResistance":[[2,[2,0,0,0],2],[2,[2,0,0,0],2]],"BlastResistance":[[3,[1,1,1,1],3],[3,[1,1,1,1],3]],"Botanist":[[4,[2,1,1,1],0],[4,[2,1,1,1],0]],"Geologist":[[3,[1,1,1,1],0],[3,[1,1,1,1],0]],"Partbreaker":[[3,[2,2,1,1],6],[2,[1,1,1,1],4]],"GoodLuck":[[3,[2,2,2,1],12],[2,[1,1,1,1],8]],"SpeedSharpening":[[3,[1,1,1,1],3],[2,[2,0,0,0],2]],"Bombardier":[[3,[1,1,1,1],0],[3,[1,1,1,1],0]],"Mushroomancer":[[3,[2,2,2,1],9],[2,[1,1,1,1],6]],"ItemProlonger":[[3,[1,1,1,1],3],[3,[1,1,1,1],3]],"Wide-Range":[[5,[2,2,1,1],5],[4,[1,1,1,1],4]],"FreeMeal":[[3,[1,1,1,1],3],[3,[1,1,1,1],3]],"Heroics":[[4,[2,2,2,2],12],[3,[2,2,1,1],9]],"Fortify":[[1,[1,1,0,0],1],[1,[1,1,0,0],1]],"FlinchFree":[[3,[1,1,1,1],3],[3,[1,1,1,1],3]],"JumpMaster":[[1,[1,1,1,0],0],[1,[1,1,1,0],0]],"CarvingPro":[[1,[1,0,0,0],0],[1,[1,0,0,0],0]],"HungerResistance":[[3,[1,1,1,1],3],[3,[1,1,1,1],3]],"LeapofFaith":[[1,[1,0,0,0],1],[1,[1,0,0,0],1]],"Diversion":[[1,[1,0,0,0],1],[1,[1,0,0,0],1]],"MasterMounter":[[1,[1,1,0,0],1],[1,[1,1,0,0],1]],"WirebugWhisperer":[[3,[2,1,0,0],6],[3,[2,1,0,0],6]],"WallRunner":[[3,[1,1,1,1],6],[3,[1,1,1,1],6]],"Counterstrike":[[3,[2,2,1,1],6],[2,[1,1,1,1],4]],"RapidMorph":[[3,[2,2,1,1],12],[2,[1,1,1,1],8]],"HellfireCloak":[[4,[2,2,2,2],12],[3,[2,2,2,1],9]],"Coalescence":[[3,[2,2,1,1],12],[2,[1,1,1,1],8]],"Redirection":[[2,[1,1,1,1],6],[1,[1,1,1,0],3]],"SpiribirdsCall":[[1,[1,0,0,0],1],[1,[1,0,0,0],1]],"ChargeMaster":[[3,[2,2,1,1],9],[2,[1,1,1,1],6]],"Foray":[[3,[2,2,1,1],9],[2,[1,1,1,1],6]],"Tune-Up":[[2,[1,1,1,1],8],[1,[1,1,1,0],4]],"GrinderS":[[3,[2,2,2,1],9],[2,[1,1,1,1],6]],"BladescaleHone":[[3,[2,2,1,1],9],[2,[1,1,1,1],6]],"WallRunnerBoost":[[1,[1,0,0,0],1],[1,[1,0,0,0],1]],"Burst":[[3,[2,2,1,1],12],[2,[1,1,1,1],8]],"ChameleosBlessing":[[4,[4,0,0,0],8],[3,[3,0,0,0],6]],"KushalaBlessing":[[4,[4,0,0,0],8],[3,[3,0,0,0],6]],"TeostraBlessing":[[4,[4,0,0,0],8],[3,[3,0,0,0],6]],"Dragonheart":[[4,[4,4,4,4],12],[3,[3,3,3,3],9]],"BloodRite":[[3,[2,2,2,1],12],[2,[1,1,1,1],8]],"Bloodlust":[[3,[3,3,3,3],12],[2,[2,2,2,2],8]],"Dereliction":[[2],[1]],"Furious":[[3,[0,0,0,0],9],[2,[0,0,0,0],6]],"MailofHellfire":[[3,[0,0,0,0],9],[2,[0,0,0,0],6]],"SneakAttack":[[3,[2,2,1,1],12],[2,[1,1,1,1],8]],"AdrenalineRush":[[3,[2,2,1,1],9],[2,[1,1,1,1],6]],"ElementExploit":[[3,[2,2,1,1],9],[2,[1,1,1,1],6]],"StatusTrigger":[[3,[2,2,2,1],9],[2,[1,1,1,1],6]],"Defiance":[[5,[3,1,1,1],10],[4,[2,1,1,1],8]],"Guts":[[2,[0,0,0,0],10],[1,[0,0,0,0],5]],"Embolden":[[3,[2,2,1,1],6],[2,[1,1,1,1],4]],"IntrepidHeart":[[2,[1,1,1,0],4],[1,[1,0,0,0],2]],"BuildupBoost":[[3,[0,0,0,0],12],[2,[0,0,0,0],8]],"Berserk":[[2],[1]],"Strife":[[3,[0,0,0,0],9],[2,[0,0,0,0],6]],"WindMantle":[[3,[0,0,0,0],9],[2,[0,0,0,0],6]],"PowderMantle":[[3,[0,0,0,0],9],[2,[0,0,0,0],6]],"Frostcraft":[[3,[0,0,0,0],12],[2,[0,0,0,0],8]],"DragonConversion":[[3,[0,0,0,0],12],[2,[0,0,0,0],8]],"FrenziedBloodlust":[[3,[0,0,0,0],9],[2,[0,0,0,0],6]]}');let r={};const a=document.getElementById("dropWeapon"),c=document.getElementById("dropWeaponType");let d=0,u=0,m=[];var f=0;let h=0,p=new Map,g=!window.location.origin.includes("github"),k=0;const S=e=>{const t=[];for(let o of e)for(let e of o.charm)t.push(`${e[0][0]}: ${e[0][1]} & ${e[1][0]}: ${e[1][1]}`);return t},y=(e=[])=>(document.querySelectorAll(".buildSkills>div>.skill").forEach((t=>{t.selectedIndex>0&&e.push([t.id,t.selectedIndex])})),e),v=(e=window.info.types)=>{const t={},o={};return document.querySelectorAll("#searcherSkills>div>output").forEach((n=>{const s=n.className.split(" ")[1];t[s]=-n.textContent.match(/(?<=Lv-)\d/)[0],o[s]={lvl:e.decos[s]??5,lvl4:e.lvl4[s]??0,qurious:~~((e.qurious[s]??(window.info.charms[s]||e.decos[s]?30:60))/3)};let l=0;5===o[s].lvl&&++l,o[s].qurious>5&&++l,window.info.charms[s]&&++l,3===l||2===l&&!i[s]?(o.setBonus||(o.setBonus={}),o.setBonus[s]=-t[s]):2===l&&(o.charmNeeded||(o.charmNeeded={}),o.charmNeeded[s]=-t[s],o.charmSkillPoints=i[s][0])})),{skills:Object.fromEntries(Object.entries(t).sort(((e,t)=>o[t[0]].lvl-o[e[0]].lvl||o[e[0]].qurious-o[t[0]].qurious))),skillInfo:o}},E=(e,t)=>e>=t?e:t;function B(){for(let e=0;e<5;e++)m[e]=new Worker("./setBuildWorker.js");m.forEach((e=>{e.addEventListener("message",(e=>{--h,e.data.final.sets.length&&(d+=e.data.final.count.combos,k+=e.data.final.count.sets,p.size<100&&(e=>{for(const t of e){if(p.size<100){p.set(p.size,t);const e=S(t.usedSkills);let o='<button type="button" aria-pressed="false" class="equipBuild">Equip Build</button>';const n=Object.keys(t.usedSkills[0].augments);for(let e=0;e<5;e++)o+=`<output class="armorImg ${(0,l.VW)()[e]}"></output><span>${n[e]}</span>`;let s="";e.forEach((e=>{s+=`<option value="${e}">${e}</option>`})),o+=`<output class="armorImg charm"></output><select class="armorCharm" title="charmSkill1">${s}</select>`;const i=document.createElement("div");i.classList.add("setResult"),i.innerHTML+=o,o="",document.querySelector(".grid").appendChild(i)}let e=0;for(let t of p.values())t.count&&(e+=t.count);document.getElementById("setOutput").textContent=`Displayed ${Math.min(100,p.size)} Builds / ${e.toLocaleString()} Combinations`}})(e.data.final.sets));let t=e.data.final.stats;for(let e=0;e<4;e++)r.remainingSlots[e]=E(r.remainingSlots[e]||0,t.remainingSlots[e]);for(let e=0;e<5;e++)r.quriousSkills[e]=E(r.quriousSkills[e]||0,t.quriousSkills[e]);for(const[e,o]of Object.entries(t.armorSkills))r.armorSkills[e]=E(r.armorSkills[e]||0,o);h||((e=>{let t="";e.forEach((e=>{0!=e[1]&&(t+=`<button textContent="${e[0]}">${e[0].replace(/(?<=[a-z])([A-Z])(?![A-Z])/g," $1")} +${+e[1]}</button>`)})),document.getElementById("temp")&&document.getElementById("temp").remove(),document.querySelector(".extraSkills").innerHTML+=t,document.getElementById("extraOutput").textContent=`Found ${k.toLocaleString()} Builds / ${d.toLocaleString()} Combinations`,window.location.href.includes("github")||(console.log((performance.now()-u)/1e3),console.log(p))})(((e=window.info.types)=>{const{skills:t}=v(),{armorSkills:o,remainingSlots:n,quriousSkills:s}=r;for(let t=0;t<4;++t)if(n[t])for(const[s,l]of Object.entries(e.decoLevels[t]))o[s]=Math.max(o[s]||0,l*n[t]);Object.entries(e.qurious).forEach((([e,t])=>{s[t/3-1]&&(o[e]=Math.max(o[e]||0,s[t/3-1]))}));const l=[];return Object.entries(o).forEach((([o,n])=>{if(isNaN(o))if(t[o]+ +n>0&&e.maxLevel[o]>0){const s=(e.maxLevel[o]||window.info.skills[o].length-1)+t[o];l.push([o,Math.min(+n,s)])}else t[o]||!e.maxLevel[o]&&!window.info.skills[o]||l.push([o,Math.min(+n,e.maxLevel[o]||window.info.skills[o].length-1)])})),l.sort()})()),d||(document.getElementById("setOutput").textContent="No Results Found",document.querySelectorAll(".grid>div").forEach((e=>e.remove()))))}))}))}const b=(e=10)=>{if((h||g)&&(u=performance.now(),m.length))for(let e of m)e.terminate();h=5,B();const t=v();t.charmSlots=window.info[c.value].weapons[a.value].decos.slice(),document.querySelectorAll(".charmSlot").forEach((e=>{e.selectedIndex>0&&++t.charmSlots[e.selectedIndex-1]})),t.theseCharms={charms:{},charmSkills:{},skill1Names:[],skill2Names:[]};for(let e of Object.entries(t.skills))if(window.info.charms[e[0]]){t.theseCharms.charmSkills[e[0]]=window.info.charms[e[0]];for(let o=0;o<2;++o)(window.info.charms[e[0]][o][0]<=-e[1]&&(!window.info.types.qurious[e[0]]||!window.info.types.decos[e[0]])||-e[1]>2-o&&window.info.types.qurious[e[0]]>3)&&t.theseCharms[`skill${o+1}Names`].push(e[0])}t.armors=function(e,t,o){let n=JSON.parse(JSON.stringify(window.info.armor));const s={helm:[],waist:[],chest:[],arm:[],leg:[]},i=[2.5,4.25,4.25,7];for(let e=0;e<5;++e)(0,l.VW)().forEach((e=>{n[e]=n[e].filter((e=>"MaleOnly"!==e.sex))}));return(0,l.VW)().forEach((l=>{n[l].forEach((n=>{if(!n)return;const r={},a=n.skills;if(13!==n.quriousTable){let e,t=-1;for(let[o,s]of Object.entries(n.decoAugments)){if(++t,o>3)break;0==o||3===o&&t<2||(e=[+o,s[1]])}if(e){const[t,o]=e;r.decos=o,r.augs=[{"+Slots":-6*+t}],r.quriousPoints=n.quriousPoints-6*t}}else 13===n.quriousTable&&(r.decos=[1,1,0,1],r.quriousPoints=0,r.augs=[{def:5},{def:5},{def:5},{def:5},{"+Slots":-18},{"+Slots":-12}]);if(r.augs||(r.decos=n.decos,r.augs=[],r.quriousPoints=n.quriousPoints),e.StormSoul>3){const e=4===document.getElementById("StormSoul").selectedIndex?1:2;for(const o of a)t[o].qurious<6&&(a[o]+=e)}r.fodderSkills=[],r.fodderCount=0;let c=r.decos[0]*i[0]+r.decos[1]*i[1]+r.decos[2]*i[2]+r.decos[3]*i[3];for(const[o,s]of Object.entries(a))if(e[o])e[o]?((t[o].setBonus||t[o].charmNeeded)&&(c+=15*Math.min(-1*e[o],a[o])),c+=Math.min(-e[o],a[o])*(20===t[o].qurious?4:t[o].qurious/3)):13===n.quriousTable||r.fodderCount||(r.fodderCount=0);else{r.fodderCount+=s;for(let e=0;e<s;e++)r.fodderSkills.push(o)}if(13===n.quriousTable)r.unBloatedPoints=0,r.armorRating=c;else{let e=[],t=3;for(;t--;)r.augs[t]?e=e.concat(r.augs[0]):r.fodderCount-t>0?(e.push({"-Skill":r.fodderSkills.pop()}),r.quriousPoints+=10):(e.push({"-Def":5}),r.quriousPoints+=5);r.augs=e,r.unBloatedPoints=~~(r.quriousPoints/3),r.armorRating=c,r.armorRating=c+r.unBloatedPoints}const d=(e,t=!0)=>{r.name=n.name,r.type=l,r.skills=n.skills,t?(s[l].pop(),s[l].splice(e,0,r)):s[l].push(r)};for(let e=0;e<s[l].length;e++)if(r.armorRating>s[l][e].armorRating)return void d(e);s[l].length<o&&d(s[l].length-1,!1)}))})),Object.values(s).forEach((t=>t.forEach((t=>{t.skillLimitation=5-Object.keys(t.skills).length-(6-t.augs.length),t.requestedSkills=Object.keys(t.skills).filter((t=>e[t])),t.skillsRemovedCount=t.fodderCount<3?t.fodderCount:3,t.startingQuriousPoints=t.quriousPoints,delete t.armorRating})))),s}(t.skills,t.skillInfo,e),t.skillInfo={charmNeeded:t.skillInfo.charmNeeded,charmSkillPoints:t.skillInfo.charmSkillPoints,setBonus:t.skillInfo.setBonus,setLimiter:4-document.getElementById("skillsLimit").selectedIndex},t.skills=Object.entries(t.skills).sort(((e,t)=>window.info.types.qurious[e[0]]-window.info.types.qurious[t[0]]));let o=t.armors.helm.splice(0),n=~~(o.length/5);p.clear();for(const e of m)t.armors.helm=o.splice(0,n),e.postMessage(t);document.getElementById("setReturn").classList.remove("augInvis"),document.querySelectorAll(".extraSkills>button").forEach((e=>e.remove())),document.getElementById("temp")&&document.getElementById("temp").remove(),document.querySelector(".extraSkills").innerHTML+="<P2 id='temp' style='font-size:18px !important; height:15em !important;'>Searching...</P2>",document.getElementsByClassName("grid")[0].innerHTML="",r={remainingSlots:[0,0,0,0],armorSkills:{},quriousSkills:[0,0,0,0,0]},d=0,k=0};let w=0,I="";document.addEventListener("keypress",(e=>{e.key===["t","e","s","t"][Math.min(3,w)]&&++w<3||("Enter"===e.key&&w>=3?(C("f"!==I),I="",w=0):/t|f/.test(e.key)&&w>=3?I=e.key:w<3&&(w=0))})),document.addEventListener("keypress",(e=>{e.key===["b","u","i","l","d"][Math.min(5,f)]&&++f<5||("Enter"===e.key&&f>=5?(q(),f=0):f<5&&(f=0))}));const q=()=>{[["AdrenalineRush",3],["Bloodlust",3],["BloodRite",3],["Burst",3],["ChargeMaster",3],["Coalescence",1],["CriticalBoost",3],["CriticalElement",3],["Defiance",3],["DragonAttack",5],["ElementExploit",3],["Focus",2],["Frostcraft",3],["IntrepidHeart",2],["MailofHellfire",3],["MindsEye",3],["Partbreaker",3],["ProtectivePolish",3],["Slugger",1],["StunResistance",3],["WeaknessExploit",3],["WindMantle",1],["WirebugWhisperer",3]].forEach((e=>(0,s.Nb)(e[0],e[1]))),b(15),console.log(p)},C=(e=!0)=>([["PeakPerformance",3],["Coalescence",3],["CriticalEye",7],["CriticalBoost",3],["MaximumMight",3],["RecoilDown",3],["ReloadSpeed",3],["RapidFireUp",3],["PierceUp",3],["Burst",1],["Agitator",5],["AttackBoost",7],["AmmoUp",2],["SpareShot",3],["WeaknessExploit",3],["Tune-Up",1],["Bloodlust",1]].forEach((e=>(0,s.Nb)(e[0],e[1]))),b(15),p);document.getElementById("startSearch").addEventListener("click",(()=>b(10))),document.getElementById("normalSearch").addEventListener("click",(()=>b())),document.getElementById("extendedSearch").addEventListener("click",(()=>b(15))),document.querySelector(".grid").addEventListener("mousedown",(e=>{if("BUTTON"!==e.target.tagName)return;const t=Object.values(document.querySelectorAll("div.grid > div.setResult")).indexOf(e.target.parentElement);if(!p.has(t))return;const o=p.get(t);let l=e.target.parentElement.lastElementChild.selectedIndex,i=0;for(let e of o.usedSkills){if(l<e.charm.length)break;++i,l-=e.charm.length}let r=o.usedSkills[i],a=r.charm[l];if((0,n.dj)(a),0!==l){let e=Object.fromEntries(r.charm[0]);if(e[a[0][0]]){let t=Math.min(e[a[0][0]],a[0][1]);e[a[0][0]]-=t,a[0][1]-=t}if(e[a[1][0]]){let t=Math.min(e[a[1][0]],a[0][1]);e[a[1][0]]-=t,a[1][1]-=t}for(let[t]of a)if(a[1])for(let o of r.decos){if(!a[1])break;if(o[0]===t&&o[1]<=a[1])for(let t in e)if(e[t]>=o[1]){let n=t;o[0]=n,e[n]-=o[1],a[1]-=o[1];break}}for(let[t,o]of a){if(!o)continue;let n=[];for(let e of Object.values(r.usedSkills.augments))n=n.concat(e);for(;o-- >0;){let s=n.find((e=>e["-Skill"]===t));s||console.log("error finding augment to replace");for(let t in e)if(e[t]>0){s["-Skill"]=t,--e[t],--o;break}}}}(0,n.qy)(r.augments),(0,n.Cj)((0,n.G_)(r.decos)),document.getElementById("setReturn").classList.add("augInvis"),(0,s.TG)(),document.querySelectorAll(".extraSkills>button").forEach((e=>e.remove())),document.querySelectorAll(".grid>div").forEach((e=>e.remove())),(0,n.to)(),(0,s.TG)(),g&&console.log(JSON.parse(JSON.stringify(r))),p.clear()}))}}]);