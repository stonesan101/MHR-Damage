"use strict";(self["webpackChunkmhrdamage"]=self["webpackChunkmhrdamage"]||[]).push([[517,459],{517:(e,t,o)=>{o.r(t);o.d(t,{konamiCode:()=>konamiCode,loadState:()=>loadState,saveState:()=>saveState});var s=o(459);var n=o(552);const toClipboardNoFocus=e=>{const t=document.createElement("textarea");t.value=e;document.body.appendChild(t);t.select();document.execCommand("copy");document.body.removeChild(t)};let i=document.getElementById("dropWeapon").value;let l=document.getElementById("dropWeaponType").value;let weaponSelect=()=>{let e="";window.info[l].weapons.forEach(((t,o)=>{if(t.rank<10)return;e+=`<option value="${o}">${t.weapon}</option>`}));i.innerHTML=e};function saveState(){const e=[i.selectedIndex,l.selectedIndex];document.querySelectorAll("#skillSelect label").forEach((t=>{e.push([t.textContent,+t.nextElementSibling.textContent.slice(-1)])}));toClipboardNoFocus(JSON.stringify([[e],Object.values(document.querySelectorAll("section.armorDisplay")).map((e=>[].concat(Object.values(e.querySelectorAll(".armor,select.augmentType,select.augment")).map((e=>e.selectedIndex)),Object.values(e.querySelectorAll("select.armorDisplay")).map((e=>e.selectedIndex)))))]))}function loadState(){navigator.clipboard.readText().then((async e=>{const t=JSON.parse(e);const o=await t.shift()[0];l.selectedIndex=await o.shift();await(0,n.rA)();await weaponSelect();i.selectedIndex=await o.shift();await(0,n.E_)();await o.forEach((e=>(0,n.Nb)(e[0],e[1])));(0,s.getSetBuilds)(15)}))}document.getElementById("saveState").addEventListener("click",(()=>saveState()));document.getElementById("loadState").addEventListener("click",(()=>loadState()));let r=[38,38,40,40,37,39,37,39,97,98,13];let a=0;function konamiListener(e){if(e.keyCode===r[a]){a++;if(a===r.length){konamiCode(document.getElementById("dropWeaponType").value);a=0}}else{a=0}}function konamiCode(e){(0,n.rA)(e);let addSpaces=e=>e.replace(/(?<=[a-z])([A-Z])(?![A-Z])/g," $1");const t=window.info.types.maxLevel;const o=Object.entries(t).sort();const s=document.querySelector("#EquippedSkillDisplay>output");let i="";for(const[e,t]of o){let o="Active";let s=["Active","Inactive"];if(e==="Dereliction"){s=["Lvl-3","Inactive","Lvl-1","Lvl-2"];o=s[0]}else if(e==="Fortify"){s=["Inactive","Lvl-1","Lvl-2"];o=s[0]}else if(e==="Frostcraft"){switch(t){case 1:s=["Lvl-1","Inactive"];break;case 2:s=["Lvl-2","Lvl-1","Inactive"];break;default:s=["Lvl-3","Lvl-2","Lvl-1","Inactive"]}o=s[0]}else if(e==="Strife"){s=["High","Low","Inactive"];o=s[0]}i+=`<button type="button" aria-pressed="false" data-state="0" onclick='let states = ${JSON.stringify(s)}; let index = (parseInt(this.dataset.state) + 1) % states.length; this.textContent = states[index]; this.dataset.state = index;'>${o}</button><output>${addSpaces(e)}: ${t}</output>`}s.innerHTML=i;Object.values(document.querySelectorAll(`select.${e},#dango select`)).forEach((e=>e.selectedIndex=e.childElementCount-1));Object.values(document.querySelectorAll("#boxes .check")).forEach((e=>e.checked=true));console.log("Konami Code entered!")}window.addEventListener("keydown",konamiListener)},459:(e,t,o)=>{o.r(t);o.d(t,{getSetBuilds:()=>getSetBuilds,getSetRequirements:()=>getSetRequirements,getSkillReq:()=>getSkillReq,testBuild:()=>testBuild});var s=o(16);var n=o(552);var i=o(923);const l=JSON.parse('{"AttackBoost":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"Agitator":[4,3,[[2,2,2,2,16],[2,2,1,1,12]]],"PeakPerformance":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"Resentment":[4,3,[[2,2,2,2,16],[2,2,1,1,12]]],"Resuscitate":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"CriticalEye":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"CriticalBoost":[3,2,[[3,3,0,0,15],[2,2,0,0,10]]],"WeaknessExploit":[3,2,[[3,3,0,0,15],[2,2,0,0,10]]],"LatentPower":[5,4,[[3,3,2,2,20],[2,2,2,2,16]]],"MaximumMight":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"CriticalElement":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"MastersTouch":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"FireAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"WaterAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"IceAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"ThunderAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"DragonAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"PoisonAttack":[3,3,[[1,1,1,1,6],[1,1,1,1,6]]],"ParalysisAttack":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"SleepAttack":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"BlastAttack":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"Handicraft":[4,3,[[2,2,2,2,16],[2,2,2,1,12]]],"RazorSharp":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"SpareShot":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"ProtectivePolish":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"MindsEye":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"Ballistics":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"Bludgeoner":[3,2,[[3,3,0,0,0],[2,2,0,0,0]]],"Focus":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"PowerProlonger":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"MarathonRunner":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"Constitution":[5,4,[[3,3,2,2,10],[2,2,2,2,8]]],"StaminaSurge":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"Guard":[5,4,[[3,3,2,0,10],[2,2,2,0,8]]],"GuardUp":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"OffensiveGuard":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"CriticalDraw":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"PunishingDraw":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"QuickSheathe":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"Slugger":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"StaminaThief":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"AffinitySliding":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"HornMaestro":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"Artillery":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"LoadShells":[2,2,[[1,1,1,1,4],[1,1,1,1,4]]],"SpecialAmmoBoost":[2,2,[[1,1,1,1,4],[1,1,1,1,4]]],"NormalRapidUp":[3,2,[[2,2,2,1,15],[1,1,1,1,10]]],"PierceUp":[3,2,[[2,2,2,1,15],[1,1,1,1,10]]],"SpreadUp":[3,2,[[2,2,2,1,15],[1,1,1,1,10]]],"AmmoUp":[3,2,[[2,2,2,1,15],[1,1,1,1,10]]],"ReloadSpeed":[3,2,[[3,0,0,0,6],[2,0,0,0,4]]],"RecoilDown":[3,2,[[3,0,0,0,6],[2,0,0,0,4]]],"Steadiness":[3,2,[[1,1,1,1,6],[2,0,0,0,4]]],"RapidFireUp":[3,2,[[3,3,3,0,15],[2,2,2,0,10]]],"DefenseBoost":[7,6,[[2,2,1,1,7],[2,1,1,1,6]]],"DivineBlessing":[3,3,[[2,2,1,1,3],[2,2,1,1,3]]],"RecoveryUp":[3,3,[[2,2,1,1,3],[2,2,1,1,3]]],"RecoverySpeed":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"SpeedEating":[3,3,[[2,2,1,1,6],[2,2,1,1,6]]],"Earplugs":[5,4,[[3,3,3,2,15],[2,2,2,2,12]]],"Windproof":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"TremorResistance":[3,3,[[2,2,1,1,6],[2,2,1,1,6]]],"BubblyDance":[3,3,[[2,2,1,1,6],[2,2,1,1,6]]],"EvadeWindow":[5,4,[[3,3,2,2,10],[2,2,2,2,8]]],"EvadeExtender":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"FireResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"WaterResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"IceResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"ThunderResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"DragonResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"BlightResistance":[3,2,[[2,2,1,1,3],[1,1,1,1,2]]],"PoisonResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"ParalysisResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"SleepResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"StunResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"MuckResistance":[2,2,[[2,0,0,0,2],[2,0,0,0,2]]],"BlastResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"Botanist":[4,4,[[2,1,1,1,0],[2,1,1,1,0]]],"Geologist":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"Partbreaker":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"GoodLuck":[3,2,[[2,2,2,1,12],[1,1,1,1,8]]],"SpeedSharpening":[3,2,[[1,1,1,1,3],[2,0,0,0,2]]],"Bombardier":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"Mushroomancer":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"ItemProlonger":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"Wide-Range":[5,4,[[2,2,1,1,5],[1,1,1,1,4]]],"FreeMeal":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"Heroics":[4,3,[[2,2,2,2,12],[2,2,1,1,9]]],"Fortify":[1,1,[[1,1,0,0,1],[1,1,0,0,1]]],"FlinchFree":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"JumpMaster":[1,1,[[1,1,1,0,0],[1,1,1,0,0]]],"CarvingPro":[1,1,[[1,0,0,0,0],[1,0,0,0,0]]],"HungerResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"LeapofFaith":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"Diversion":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"MasterMounter":[1,1,[[1,1,0,0,1],[1,1,0,0,1]]],"WirebugWhisperer":[3,3,[[2,2,1,1,9],[2,2,1,1,9]]],"WallRunner":[3,3,[[1,1,1,1,6],[1,1,1,1,6]]],"Counterstrike":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"RapidMorph":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"HellfireCloak":[4,3,[[2,2,2,2,12],[2,2,2,1,9]]],"Coalescence":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"Redirection":[2,1,[[1,1,1,1,6],[1,1,1,0,3]]],"SpiribirdsCall":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"ChargeMaster":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"Foray":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"Tune-Up":[2,1,[[1,1,1,1,8],[1,1,1,0,4]]],"GrinderS":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"BladescaleHone":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"WallRunnerBoost":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"Burst":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"ChameleosBlessing":[4,3,[[4,0,0,0,8],[3,0,0,0,6]]],"KushalaBlessing":[4,3,[[4,0,0,0,8],[3,0,0,0,6]]],"TeostraBlessing":[4,3,[[4,0,0,0,8],[3,0,0,0,6]]],"Dragonheart":[4,3,[[4,4,4,4,12],[3,3,3,3,9]]],"BloodRite":[3,2,[[2,2,2,1,12],[1,1,1,1,8]]],"Bloodlust":[3,2,[[3,3,3,3,12],[2,2,2,2,8]]],"Dereliction":[2,1],"Furious":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"MailofHellfire":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"SneakAttack":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"AdrenalineRush":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"ElementExploit":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"StatusTrigger":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"Defiance":[5,4,[[3,1,1,1,10],[2,1,1,1,8]]],"Guts":[2,1,[[0,0,0,0,10],[0,0,0,0,5]]],"Embolden":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"IntrepidHeart":[2,1,[[1,1,1,0,4],[1,0,0,0,2]]],"BuildupBoost":[3,2,[[0,0,0,0,12],[0,0,0,0,8]]],"Berserk":[2,1],"Strife":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"WindMantle":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"PowderMantle":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"Frostcraft":[3,2,[[0,0,0,0,12],[0,0,0,0,8]]],"DragonConversion":[3,2,[[0,0,0,0,12],[0,0,0,0,8]]],"FrenziedBloodlust":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]]}');function applyArmorFilter(e,t,o){let s=JSON.parse(JSON.stringify(window.info.armor));const n={helm:[],waist:[],chest:[],arm:[],leg:[]};const l=[2.5,4.25,4.25,7];for(let e=0;e<5;++e){(0,i.VW)().forEach((e=>{s[e]=s[e].filter((e=>e.sex!=="MaleOnly"))}))}(0,i.VW)().forEach((i=>{s[i].forEach((s=>{if(!s)return;const r={};const a=s.skills;if(s.quriousTable!==13){let e=-1;let t;for(let[o,n]of Object.entries(s.decoAugments)){++e;if(o>3)break;if(o==0||o===3&&e<2)continue;t=[+o,n[1]]}if(t){const[e,o]=t;r.decos=o;r.augs=[{"+Slots":+e*-6}];r.quriousPoints=s.quriousPoints-6*e}}else if(s.quriousTable===13){r.decos=[1,1,0,1];r.quriousPoints=0;r.augs=[{def:5},{def:5},{def:5},{def:5},{"+Slots":-18},{"+Slots":-12}]}if(!r.augs){r.decos=s.decos;r.augs=[];r.quriousPoints=s.quriousPoints}if(e.StormSoul>3){const e=document.getElementById("StormSoul").selectedIndex===4?1:2;for(const o of a){if(t[o].qurious<6){a[o]+=e}}}r.fodderSkills=[];r.fodderCount=0;let c=r.decos[0]*l[0]+r.decos[1]*l[1]+r.decos[2]*l[2]+r.decos[3]*l[3];for(const[o,n]of Object.entries(a)){if(!e[o]){r.fodderCount+=n;for(let e=0;e<n;e++){r.fodderSkills.push(o)}}else if(e[o]){if(t[o].setBonus){c+=Math.min(e[o]*-1,a[o])*15}else if(t[o].charmNeeded){c+=Math.min(e[o]*-1,a[o])*15}c+=Math.min(-e[o],a[o])*(t[o].qurious===20?4:t[o].qurious/3)}else if(s.quriousTable!==13&&!r.fodderCount){r.fodderCount=0}}if(s.quriousTable===13){r.unBloatedPoints=0;r.armorRating=c}else{let e=[];let t=3;while(t--){if(r.augs[t]){e=e.concat(r.augs[0])}else if(r.fodderCount-t>0){e.push({"-Skill":r.fodderSkills.pop()});r.quriousPoints+=10}else{e.push({"-Def":5});r.quriousPoints+=5}}r.augs=e;r.unBloatedPoints=~~(r.quriousPoints/3);r.armorRating=c;r.armorRating=c+r.unBloatedPoints}const addArmorPiece=(e,t=true)=>{r.name=s.name;r.type=i;r.skills=s.skills;if(t){n[i].pop();n[i].splice(e,0,r)}else{n[i].push(r)}};for(let e=0;e<n[i].length;e++){if(r.armorRating>n[i][e].armorRating){addArmorPiece(e);return}}if(n[i].length<o){addArmorPiece(n[i].length-1,false)}}))}));Object.values(n).forEach((t=>t.forEach((t=>{t.skillLimitation=5-Object.keys(t.skills).length-(6-t.augs.length);t.requestedSkills=Object.keys(t.skills).filter((t=>e[t]));t.skillsRemovedCount=t.fodderCount<3?t.fodderCount:3;t.startingQuriousPoints=t.quriousPoints;delete t.armorRating}))));return n}const compareKeys=(e,t)=>{for(let o=0;o<e.length;++o){if(e[o]>t[o]){return false}}return true};let r=window.info.types;const isRestricted=e=>r.decos[e[0]]||r.qurious[e[0]]?[r.decos[e[0]],r.qurious[e[0]]]:e[0]+e[1];const getCharms=e=>{let t={qurious:{},standard:{},decos:{},charmRequired:{}};window.info.charms.forEach((o=>{if(Object.entries(o.skills).some((t=>(e[t[0]]||1)+t[1]>0)))return;if(o.key===false){let e=Object.keys(o.skills);const s=isRestricted(e);const n=isRestricted(e);const[i,l]=Array.isArray(s)?[n,s]:[s,n];if(!t.charmRequired[i]){t.charmRequired[i]={}}if(!t.charmRequired[i][l]){t.charmRequired[i][l]=[]}t.charmRequired[i][l].push(o.skills);return}let s,n;let i="standard";if(Array.isArray(o.key)&&o.key.length===4){s=[...o.key[0].slice(0,4),o.key[2]];n=o.key[0].slice(4);i=o.key[3]==="decos"?"decos":"qurious"}else{s=o.key.slice(0,4);n=o.key.slice(4)}if(!t[i][s])t[i][s]={};if(!t[i][s][n])t[i][s][n]=[];t[i][s][n].push(o.skills)}));for(let e in t){for(let o in t[e]){t[e][o]=Object.values(t[e][o]).reverse()}}const o={charmRequired:t.charmRequired};for(const e in t){const s=Object.entries(t[e]).map((e=>[e[0].split(",").reverse(),e[1]]));s.sort((([e],[t])=>t.join("")-e.join("")));let n=[];let i=[];e:for(let e of s){for(let t=0;t<i.length;t++){if(compareKeys(e[0],i[t][i[t].length-1])){i[t].push(e[0]);n[t].push(e[1]);continue e}}i[i.length]=[e[0]];n[n.length]=[e[1]]}o[e]=n}console.log(o);return o};let a={};const c=document.getElementById("dropWeapon");const u=document.getElementById("dropWeaponType");let d=0;let f=0;let m=[];let h=0;let GlobalMap=new Map;let p;let g=!window.location.origin.includes("github");let k=0;const getTotal=(e=window.info.types)=>{const{skills:t}=getSetRequirements();const{armorSkills:o,remainingSlots:s,quriousSkills:n}=a;for(let t=0;t<4;++t){if(!s[t])continue;for(const[n,i]of Object.entries(e.decoLevels[t])){o[n]=Math.max(o[n]||0,i*s[t])}}Object.entries(e.qurious).forEach((([e,t])=>{if(!n[~~(t/3)-1])return;o[e]=Math.max(o[e]||0,n[~~(t/3)-1])}));const i=[];Object.entries(o).forEach((([o,s])=>{if(!isNaN(o))return;if(t[o]+ +s>0&&e.maxLevel[o]>0){const n=(e.maxLevel[o]||window.info.skills[o].length-1)+t[o];i.push([o,Math.min(+s,n)])}else if(!t[o]&&(e.maxLevel[o]||window.info.skills[o])){i.push([o,Math.min(+s,e.maxLevel[o]||window.info.skills[o].length-1)])}}));return i.sort()};const setOutput=e=>{let t="";e.forEach((e=>{if(e[1]==0)return;t+=`<button textContent="${e[0]}">${e[0].replace(/(?<=[a-z])([A-Z])(?![A-Z])/g," $1")} +${+e[1]}</button>`}));if(document.getElementById("temp"))document.getElementById("temp").remove();document.querySelector(".extraSkills").innerHTML+=t;document.getElementById("extraOutput").textContent=`Found ${k.toLocaleString()} Builds / ${d.toLocaleString()} Combinations`;if(!window.location.href.includes("github")){console.log((performance.now()-f)/1e3);console.log(GlobalMap)}};const getUsedCharm=e=>{const t=[];for(let o of e.usedSkills){for(let e of o.charm){t.push(`${e[0][0]}: ${e[0][1]} & ${e[1][0]}: ${e[1][1]}`)}}return t};const getSkillReq=(e=[])=>{document.querySelectorAll(".buildSkills>div>.skill").forEach((t=>{if(t.selectedIndex>0)e.push([t.id,t.selectedIndex])}));return e};const getSetRequirements=(e=window.info.types)=>{const t={};const o={};let s=new Set;window.info.charms.forEach((e=>Object.keys(e.skills).map((e=>s.add(e)))));document.querySelectorAll("#searcherSkills>div>output").forEach((n=>{const i=n.className.split(" ")[1];t[i]=-n.textContent.match(/(?<=Lv-)\d/)[0];o[i]={lvl:e.decos[i]??5,lvl4:e.lvl4[i]??0,qurious:~~((e.qurious[i]??(s.has(i)||e.decos[i]?30:60))/3)};let r=0;if(o[i].lvl===5)++r;if(o[i].qurious>5)++r;if(!s.has(i))++r;if(r===3){if(!o.setBonus)o.setBonus={};o.setBonus[i]=-t[i]}else if(r===2){if(!o.charmNeeded)o.charmNeeded={};o.charmNeeded[i]=-t[i];o.charmSkillPoints=l[i][0]}}));return{skills:Object.fromEntries(Object.entries(t).sort(((e,t)=>o[t[0]].lvl-o[e[0]].lvl||o[e[0]].qurious-o[t[0]].qurious))),skillInfo:o}};const resetGlobals=()=>{p="";document.getElementById("setReturn").classList.remove("augInvis");document.querySelectorAll(".extraSkills>button").forEach((e=>e.remove()));if(document.getElementById("temp"))document.getElementById("temp").remove();document.querySelector(".extraSkills").innerHTML+="<P2 id='temp' style='font-size:18px !important; height:15em !important;'>Searching...</P2>";document.getElementsByClassName("grid")[0].innerHTML="";a={remainingSlots:[0,0,0,0],armorSkills:{},quriousSkills:[0,0,0,0,0]};d=0;k=0};const receiveMessage=e=>{for(const t of e){if(GlobalMap.size<100){GlobalMap.set(GlobalMap.size,t);const e=getUsedCharm(t);let o='<button type="button" aria-pressed="false" class="equipBuild">Equip Build</button>';const s=Object.keys(t.usedSkills[0].augments);for(let e=0;e<5;e++){o+=`<output class="armorImg ${(0,i.VW)()[e]}"></output><span>${s[e]}</span>`}let n="";e.forEach((e=>{n+=`<option value="${e}">${e}</option>`}));o+=`<output class="armorImg charm"></output><select class="armorCharm" title="charmSkill1">${n}</select>`;const l=document.createElement("div");l.classList.add("setResult");l.innerHTML=o;document.querySelector(".grid").appendChild(l)}let e=0;for(let t=0;t<=100;t++){if(!GlobalMap.has(t))break;e+=GlobalMap.get(t).count}document.getElementById("setOutput").textContent=`Displayed ${Math.min(100,GlobalMap.size)} Builds / ${e.toLocaleString()} Combinations`}};const max=(e,t)=>e>=t?e:t;function startWorkers(){for(let e=0;e<5;e++){m[e]=new Worker("./setBuildWorker.js")}m.forEach((e=>{e.addEventListener("message",(e=>{--h;if(e.data.final.sets.length){d+=e.data.final.count.combos;k+=e.data.final.count.sets;if(GlobalMap.size<100){receiveMessage(e.data.final.sets)}}let t=e.data.final.stats;for(let e=0;e<4;e++){a.remainingSlots[e]=max(a.remainingSlots[e]||0,t.remainingSlots[e])}for(let e=0;e<5;e++){a.quriousSkills[e]=max(a.quriousSkills[e]||0,t.quriousSkills[e])}for(const[e,o]of Object.entries(t.armorSkills)){a.armorSkills[e]=max(a.armorSkills[e]||0,o)}if(!g)e.target.terminate();if(h)return;setOutput(getTotal());if(!GlobalMap.has("finished")){document.querySelector(".grid").innerHTML+=p;p="";GlobalMap.set("finished",true)}if(!d){document.getElementById("setOutput").textContent="No Results Found";document.querySelectorAll(".grid>div").forEach((e=>e.remove()))}}))}))}const getSetBuilds=(e=10)=>{if(h||g){f=performance.now();if(m.length){for(let e of m)e.terminate()}}h=5;startWorkers();const t=getSetRequirements();t.charmSlots=window.info[u.value].weapons[c.value].decos.slice();document.querySelectorAll(".charmSlot").forEach((e=>{if(e.selectedIndex>0){++t.charmSlots[e.selectedIndex-1]}}));t.theseCharms=getCharms(t.skills);t.armors=applyArmorFilter(t.skills,t.skillInfo,e);t.skillInfo={charmNeeded:t.skillInfo.charmNeeded,charmSkillPoints:t.skillInfo.charmSkillPoints,setBonus:t.skillInfo.setBonus,setLimiter:4-document.getElementById("skillsLimit").selectedIndex};t.skills=Object.entries(t.skills).sort(((e,t)=>window.info.types.qurious[e[0]]-window.info.types.qurious[t[0]]));let o=t.armors.helm.splice(0);let s=~~(o.length/5);GlobalMap.clear();for(const e of m){t.armors.helm=o.splice(0,s);e.postMessage(t)}resetGlobals()};let S=0;let y="";document.addEventListener("keypress",(e=>{if(!(e.key===["t","e","s","t"][Math.min(3,S)]&&++S<3)){if(e.key==="Enter"&&S>=3){testBuild(y!=="f");y="";S=0}else if(/t|f/.test(e.key)&&S>=3){y=e.key}else if(S<3){S=0}}}));const testBuild=(e=true)=>{["PeakPerformance","Coalescence","CriticalEye","CriticalBoost","MaximumMight","RecoilDown","ReloadSpeed","RapidFireUp","PierceUp","Burst","Agitator","AttackBoost","AmmoUp","SpareShot"].forEach((e=>(0,n.Nb)(e,window.info.types.maxLevel[e])));getSetBuilds(15);return GlobalMap};document.getElementById("startSearch").addEventListener("click",(()=>getSetBuilds(10)));document.getElementById("normalSearch").addEventListener("click",(()=>getSetBuilds()));document.getElementById("extendedSearch").addEventListener("click",(()=>getSetBuilds(15)));document.querySelector(".grid").addEventListener("mousedown",(e=>{if(e.target.tagName!=="BUTTON"){return}const t=Object.values(document.querySelectorAll("div.grid > div.setResult")).indexOf(e.target.parentElement);if(!GlobalMap.has(t))return;const o=GlobalMap.get(t);let i=e.target.parentElement.lastElementChild.selectedIndex;let l=0;for(let e of o.usedSkills){if(i<e.charm.length)break;++l;i-=e.charm.length}let r=o.usedSkills[l];let a=r.charm[i];(0,s.dj)(a);if(i!==0){let e=Object.fromEntries(r.charm[0]);if(e[a[0][0]]){let t=Math.min(e[a[0][0]],a[0][1]);e[a[0][0]]-=t;a[0][1]-=t}if(e[a[1][0]]){let t=Math.min(e[a[1][0]],a[0][1]);e[a[1][0]]-=t;a[1][1]-=t}for(let[t]of a){if(!a[1])continue;for(let o of r.decos){if(!a[1])break;if(o[0]===t&&o[1]<=a[1]){for(let t in e){if(e[t]>=o[1]){let s=t;o[0]=s;e[s]-=o[1];a[1]-=o[1];break}}}}}for(let[t,o]of a){if(!o)continue;let s=[];for(let e of Object.values(r.usedSkills.augments))s=s.concat(e);while(o-- >0){let n=s.find((e=>e["-Skill"]===t));if(!n){console.log("error finding augment to replace")}for(let t in e){if(e[t]>0){n["-Skill"]=t;--e[t];--o;break}}}}}(0,s.qy)(r.augments);(0,s.Cj)((0,s.G_)(r.decos));document.getElementById("setReturn").classList.add("augInvis");(0,n.TG)();document.querySelectorAll(".extraSkills>button").forEach((e=>e.remove()));document.querySelectorAll(".grid>div").forEach((e=>e.remove()));(0,s.to)();(0,n.TG)();if(!window.location.href.includes("github")){console.log(JSON.parse(JSON.stringify(r)))}GlobalMap.clear()}))}}]);