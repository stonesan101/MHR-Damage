(()=>{function t(t,e,s,i,o,r,n){const{armorSkills:l,quriousSkills:f,remainingSlots:u}=t;!function(t,e,s){let i={};for(let t of e.theseArmors){if(!t.fodder)continue;const{names:e}=s,o={...t.skills};for(let s=0;s<t.augsPointer;s++){const i=t.augs[s];i<250&&(!e[i]||e[i].points<o[i])&&--o[i]}let r=0;for(let s=0;s<t.len;s++){const i=t.baseSkills[s];e[i]?e[i]?.points<o[i]&&(r+=o[i]-(e[i]?.points||0)):r+=o[i]}const n=r+(6-t.augsPointer)+~~(t.budget/1.66);if(n)for(let s=0;s<t.len;s++){let o=t.baseSkills[s],r=e[o]?-e[o].stats[1]:n;r&&(i[o]=(i[o]||0)+Math.min(t.skills[o],r))}}}(0,e,s);const a=function(t,e,s,i){const o=[0,0,0,0,0];if(0===e)return o;for(let t of s.theseArmors){let s=t.augsPointer,r=5-s;if(t.budget<(r>0?1:2.67)||t.len>4)continue;let n=e,l=0,f=0;for(let e=0;e<s;e++){const s=t.augs[e];255===s?++l:s<250&&!i.names[s]&&++f;let u=--r>=0?0:--l>=0?1.67:--f>=0?3.34:999;if(999===u)continue;let a=1;for(;t.budget>=u+a;){let e=Math.min(n,6,~~((t.budget-u)/a));for(;e--;)++o[e];if(u+=--r>=0?0:--l>=0?1.67:--f>=0?3.34:999,u>=999)break;++a}}}for(let e=0;e<5;e++)t[e]=Math.max(t[e],o[e]);return o}(f,i,e,s);if(function(t,e,s,i,o){let r=[0,0,0,0],n=i[3];if(i[0]){let t=i[2]-n;if(t){let s=0;for(;s<e[63]-1;){let n=e[s++];const l=o.names[n].stats;let f=e[s++],u=3===f?l[5]:l[6]===f?1:l[7],a=e[s++];const d=l[2]-1;if(d<3)break;if(i[d]<u)continue;let g=Math.min(~~(t/u),a);r[f-1]<g&&(r[f-1]=g)}}}for(let e=0;e<4;++e)r[e]+=t[e];n&&(r[3]+=~~((n+r[1]+r[2])/2),r[1]+=n+r[1]+r[2],r[2]+=n,r[0]=i[1]);for(let t=0;t<4;++t)s[t]=Math.max(s[t],r[t])}(o,r,u,a,s),!n[0]){const{theseArmors:t,indexByType:s,armorTypes:i}=e;let o=6;for(let e=0;e<5;e++){let r=t[s[i[e]]],l=r.augs;n[e+1]=r.name;for(let t=0;t<6;t++)n[o++]=t<r.augsPointer?l[t]:250}}return a}function e(t){const e=d.costs,s=e[0];let f;const u=a.theseArmors,g=s.keys;t:for(let d=0;d<5;d++){if(s.total<=0)return s.total;const h=u[d];let c=5-h.len,m=Math.min(3,t,s.total),k=g[s.pointer-1];if(h.budget<k*m){let t,s=m,i=0,o=0,r=0;for(;s>0;)t=g[o++],r=Math.min(s,e[t].total),i+=t*r,s-=r;if(i>h.budget||m<3){let e=3-m;for(;e>0||i>h.budget&&--m;)a.getPoints(h),--e<0&&(i-=r-- >0?t:g[o-1]);if(!m)continue t}}for(;m;)if(m>c){if(f=1===c?n(m,~~h.budget,s,h):n(m-1,~~h.budget-g[0],s,h),f){if(l(f[0],h,e,f[1]))return s.total;if(0==(m-=f[1]))continue t;continue}if(0==--m)continue t;g[s.pointer-1]*m>~~h.budget&&a.getPoints(h)}else{if(f=2===m?o(s,~~h.budget,e):3===m?i(s,h.budget,e):1===m?r(s,~~h.budget):0,f){for(;m;){const t=f[m-1];let i=e[t].skills[0],o=m&&i[1]>1&&f[m-2]===t?2:1;if(m-=o,l(i,h,e,o))return s.total}continue t}if(! --m)continue t;g[s.pointer-1]*m>h.budget&&a.getPoints(h)}}return s.pointer&&4===t&&function(t){let{costs:e,names:s}=d,i=a.theseArmors;for(let o=0;o<5&&t.total&&t.pointer;o++){const r=i[o];let n=r.augsPointer;if(n<6&&r.budget<t.keys[0]||6===n&&r.budget<1.67+t.keys[0])continue;let f=0,u=0;for(let t=0;t<n;++t){let e=r.augs[t];255===e?f=t:!(e<250&&t<4)&&r.skills[e]>s[e]?.points||(u=t)}let d,g=6-r.augsPointer?0:f?1.67:u?3.34:999;if(!(999===g||r.budget-g<t.keys[0])){t:for(let s=0;s<t.pointer;s++){let i=t.keys[s];if(r.budget-g<i)continue;let o=e[i];for(let t=0;t<o.pointer;++t)if(a.addSkillToSet(o.skills[t][2],r,r.baseSkills)){d=o.skills[t];break t}}if(d){if(g){r.budget-=g;let t=f||u;for(;t<r.augsPointer;)r.augs[t]=r.augs[++t];--r.augsPointer}l(d,r,e)}}}}(s),s.total}function s(t,e){for(let s of t)if(s===e[0]&&(e[0][0]+=e[2]),s[0]>0)return!0}function i(t,e,s){const i=t.pointer,o=t.keys;let r=i;for(;r--;){if(3*o[r]>e)continue;let t=i;for(;t-- >r;){if(o[r]+(o[t]<<1)>e||s[o[r]].total<=(r===t))continue;let n=i;for(;n-- >t;)if((t===n||o[r]+o[t]+o[n]<=e)&&s[o[n]].total>+(n===r)+ +(n===t))return[o[r],o[t],o[n]]}}}function o(t,e,s){const i=t.pointer;let o=i;const r=t.keys,n=e>>1;for(;o--;){if(r[o]>n)continue;let t=i;for(;t-- >o;)if(o!==t&&r[o]+r[t]<=e||o===t&&s[r[o]].total>1)return[r[o],r[t]]}}function r(t,e){let s=t.pointer;for(;s--;)if(t.keys[s]<=e)return[t.keys[s]]}function n(t,e,s,i){let o,r=d.costs,n=d.names,l=s.pointer,f=s.keys;if(i.usedSkills.length){let r=e-s.keys[0]*(t-1);for(let t=0;t<i.usedSkills.length;++t)if(o=n[i.usedSkills[t]].stats,o[1]>0&&o[2]<=r)return[o,1]}for(;l--;){let s=f[l],i=r[s];if(s*t<=e&&i.total-i.pointer>=t){let e=i.pointer;for(;e--;)if(o=i.skills[e],o[1]>=t)return[o,t]}}}function l(t,e,s,i=1){let o=t[7],r=t[2],n=s[r],l=s[0];if(e.budget<r*i||e.augsPointer+i>6||!a.addSkillToSet(o,e,e.baseSkills))return!0;for(let s=0;s<i;++s)e.augs[e.augsPointer++]=t[7];if(e.budget-=r*i,t[1]-=i,0==(l.total-=i))return!0;if(0!=(n.total-=i)){if(!t[1]){let e=n.skills,s=--n.pointer;if(e[s]===t)return;for(let i=0;i<s;++i)if(e[i]===t)return void(e[i]=e[s])}}else{if(n.skills.pop(),--n.pointer,l.keys[--l.pointer]===r)return;l.removeCost(r)}}class f{constructor(t,e){this.skillsClass=e,this.armors=t.armors,this.augmentRemovalOrder=[0,1,2,3,4],this.budget=0,this.theseArmors=[],this.ifUnder=[0,0],this.ifOver=[0,0],this.isOverLimit=0,this.pointsAug=[this.ifUnder,this.ifOver],this.budgetOffset=[0,0,0,0,0,0,0,0,0,0,0],this.decoSlotsResetValues=new Int8Array(t.decoSlots),this.indexByType={helm:0,chest:1,arm:2,waist:3,leg:4},this.indexes=[],this.armorTypes=["helm","chest","arm","waist","leg"];for(let t=0;t<5;++t){let e=this.armorTypes[t];this.indexes[t]={index:-1,len:this.armors[e].length,type:e}}}getArmor(t,e){}getArmor(t,e){this.armors[t][e]}setNextArmor(t,e,s){const i=this.armors[t.type],o=i[t.index];if(this.theseArmors[this.indexByType[t.type]]=o,e>=0){let t=i[e];this.removeArmor(t,s);for(let e=0;e<4;++e)this.decoSlotsResetValues[e]+=-t.decos[e]+o.decos[e]}else for(let t=0;t<4;++t)this.decoSlotsResetValues[t]+=o.decos[t];this.addArmor(o,s)}addArmor(t,e){this.budget+=t.baseBudget,++this.ifUnder[t.fodder?.length?1:0],++this.ifOver[255===t.augs[7]?0:1];for(let s of t.usedSkills){const{stats:i,max:o}=e[s];i[0]>=o&&i[0]-t.skills[s]<o&&++this.isOverLimit,i[0]-=t.skills[s]}}removeArmor(t,e){this.budget-=t.baseBudget,--this.ifUnder[t.fodder.length?1:0],--this.ifOver[255===t.augs[7]?0:1];for(let s of t.usedSkills){const{stats:i,max:o}=e[s];i[0]<o&&i[0]+t.skills[s]>=o&&--this.isOverLimit,i[0]+=t.skills[s]}}resetArmors(){for(let t=0;t<5;t++){let e=this.theseArmors[t];e.augsPointer=3,e.skillLen=e.len,e.fodderPointer=0,e.budget=e.baseBudget,e.augs[0]=e.augs[6],e.augs[1]=e.augs[7],e.augs[2]=e.augs[8]}}getPoints(t,e){if(!e){if(6===(e=t.augsPointer))return;++t.augsPointer}if(t.fodderCount>t.fodderPointer)return t.augs[e]=t.fodder[t.fodderPointer++],void(t.budget+=3.34);t.augs[e]=255,t.budget+=1.67}setAugmentRemovalOrder(){this.theseArmors.sort(((t,e)=>e.skillLen-t.skillLen||t.baseBudget-e.baseBudget));let t=this.theseArmors,e=0,s=4;for(let i=0;i<5;++i)this.indexByType[t[i].type]=i,t[i].decoAugs&&(this.augmentRemovalOrder[t[i].skillLen<3?e++:s--]=t[i]);this.augmentRemovalOrder.splice(e,s-e+1);let[[i,o],[r,n]]=this.pointsAug,l=5;for(;o--;)this.budgetOffset[--l]=this.budgetOffset[l+1]+3.34;for(;i--;)this.budgetOffset[--l]=this.budgetOffset[l+1]+1.67;for(l=5;r--;)this.budgetOffset[++l]=this.budgetOffset[l-1]-1.67;for(;n--;)this.budgetOffset[++l]=this.budgetOffset[l-1]-3.34}removeUnusedSlotAugments(t){let e,s,i=this.budget,o=0,r=0,n=0;for(let l=0,f=this.augmentRemovalOrder.length;l<f;++l){s=this.augmentRemovalOrder[l],e=s.decoAugs,o=e.length,r=s.skillLen>2?1:0;let f=s.budget;for(;o-- >r&&(n=e[o],!(!t[n]||1===n&&o>0&&0!==e[o-1]&&!t[e[o-1]]));)--t[n],n&&++t[n-1],s.budget+=2,++s.augs[2];255===s.augs[2]&&(s.budget+=1.67,s.fodderCount>s.fodderPointer&&(s.augs[2]=s.fodder[s.fodderPointer++],s.budget+=1.67)),i+=s.budget-f}return i}addSkillToSet(t,e,s){let i=e.skillLen;for(;i--;)if(s[i]===t)return!0;return e.skillLen<5&&(s[e.skillLen++]=t,!0)}}class u{constructor(t){this.skillsArr=t.skills,this.len=this.skillsArr.length,this.names=t.starting,this.charms=t.charmLevels,this.previousObj={total:0},this.round2=[],this.costKeys={total:0,keys:new Int8Array(5),pointer:0,removeCost:t=>{const{keys:e,pointer:s}=this.costKeys;for(let i=0;i<s;++i)if(e[i]===t){for(;i<s;)e[i]=e[++i];return}}},this.costs=[this.costKeys,{total:1,skills:[],pointer:0},{total:2,skills:[],pointer:0},{total:1,skills:[],pointer:0},{total:1,skills:[],pointer:0},{total:3,skills:[],pointer:0}]}useDecorationSlots(t,e,s){let i,o,r,n,l,f=0,u=this.round2,a=0,d=this.len;t:for(;d--;){if(l=this.skillsArr[d],l[1]=l[0],l[1]<=0)continue;n=l[7];let e=t[3]&&l[1]>=l[4]?l[3]:5;for(;e<6&&l[e++];){if(5===e){if(i=3,o=l[4],!o)break;r=Math.min(~~(l[1]/o),t[i])}else{if(3===l[2]||2===l[2])break;i=l[5]-1,o=1,r=Math.min(l[1],t[i])}if(r>=1&&(t[i]-=r,l[1]-=r*o,s&&(s[f++]=n,s[f++]=i,s[f++]=r),!l[1]))continue t}u[a++]=l}let g=e.removeUnusedSlotAugments(t),h=0,c=0,m=this.previousObj;const k=this.costKeys.keys;let b=0;t:for(let e=0;e<a;++e){l=u[e],n=l[7];let a=t[3]?4:5;for(;a<7&&l[a++];)if(5===a?(i=3,o=l[4],r=Math.min(~~(l[1]/o),t[i])):6===a?(i=l[5]-1,o=1,r=Math.min(l[1],t[i])):(i=l[5],o=l[6],r=Math.min(~~(l[1]/o),t[i])),r>=1&&(s&&(s[f++]=n,s[f++]=i,s[f++]=r),t[i]-=r,l[1]-=r*o,!l[1]))continue t;const d=l[1],p=l[2];g-=d*p,h+=d,c===p?(m.total+=d,m.skills[m.pointer++]=l):(c=p,k[b++]=c,m=this.costs[c],m.pointer=1,m.total=d,m.skills[0]=l)}if(g+=e.budgetOffset[Math.max(h-10,0)],this.costKeys.pointer=b,this.costKeys.total=h,b>1){let t=-1;for(;++t<--b;)[k[b],k[t]]=[k[t],k[b]]}return s&&(s[63]=f),~~g}}let a,d;"undefined"!=typeof self&&(self.onmessage=i=>{const{setLimiter:o,setBonus:r,charmNeeded:n,runChecks:l}=i.data;d=new u(i.data.skillObj),a=new f(i.data.armorObj,d);const{indexes:g,decoSlotsResetValues:h}=a,c=d.charms,m=c.length;let k;const b={sets:[{armors:new Uint8Array(36),decos:new Uint8Array(64),charms:new Uint8Array(360)}],count:{sets:0,combos:0},stats:{quriousSkills:[0,0,0,0,0],armorSkills:{},remainingSlots:[0,0,0,0]}},p=b.stats;let y=b.sets[0],A=y.charms,S=y.armors,O=y.decos;const v=new Uint8Array(4);let P,x,M;t:for(;;){for(let t=0;t<5;t++){let e=g[t],s=e.index;if(++e.index===e.len&&(e.index=0,"leg"===e.type))break t;if(a.setNextArmor(e,s,d.names),0!==e.index)break}if(a.isOverLimit>0)continue;if(r)for(const t in r)if(d.names[t].stats[0]>0)continue t;if(n){P=[];for(let t of Object.keys(n)){let e=d.names[t].stats;e[0]>0&&P.push(e)}}a.setAugmentRemovalOrder(),l&&(k=[]);let i=0;for(let r=0;r<m;r++)if(x=c[r],!(x[0][0]<x[1])){x[0][0]-=x[1];e:for(let f=0;f<m;f++){if(f===r)continue;if(M=c[f],M[0][0]<M[2])continue;if(M[0][0]-=M[2],n&&s(P,M))continue e;for(let t=0;t<4;t++)v[t]=h[t];a.resetArmors();const u=S[0]>0?d.useDecorationSlots(v,a,!1):d.useDecorationSlots(v,a,O);if(!(u>-5)){if(M[0][0]+=M[2],S[0]||u>=-18||!M[0][2]||!M[0][5])continue e;x[0][0]+=x[1];continue t}let g=e(o);M[0][0]+=M[2],g>0||((!S[0]||l||p.remainingSlots[3]<5&&p.quriousSkills[4]<5)&&(p.remainingSlots[3]<5&&p.quriousSkills[4]<5&&t(p,a,d,o,v,O,S),l&&y.armors[0]>1&&k.push([S,O,[x[1],M[2]]])),S[0]++,A[i++]=x[0][7],A[i++]=M[0][7])}x[0][0]+=x[1]}if(!S[0])continue;b.count.sets++,b.count.combos+=S[0];let f=b.sets.length-1;if(f<5||b.sets[f-1].armors[0]<S[0]){for(;f>0&&b.sets[f-1].armors[0]<S[0];)b.sets[f]=b.sets[--f];b.sets[f]=y,b.sets.length<6&&b.sets.push({armors:new Uint8Array(36),decos:new Uint8Array(64),charms:new Uint8Array(360)}),y=b.sets.at(-1),S=y.armors,O=y.decos,A=y.charms}S[0]=0}1===b.sets.length?postMessage(""):(b.sets.pop(),postMessage(b))})})();