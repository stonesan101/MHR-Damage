(()=>{function t(t,e,s,r,o,i,n){const{armorSkills:l,quriousSkills:a,remainingSlots:u}=t;!function(t,e,s){let r={};for(let t of e.theseArmors){if(!t.fodder)continue;const{names:e}=s,o={...t.skills};for(let s=0;s<t.augsPointer;s++){const r=t.augs[s];r<250&&(!e[r]||e[r].points<o[r])&&--o[r]}let i=0;for(let s=0;s<t.len;s++){const r=t.baseSkills[s];e[r]?e[r]?.points<o[r]&&(i+=o[r]-(e[r]?.points||0)):i+=o[r]}const n=i+(6-t.augsPointer)+~~(t.budget/5);if(n)for(let s=0;s<t.len;s++){let o=t.baseSkills[s],i=e[o]?-e[o].stats[1]:n;i&&(r[o]=(r[o]||0)+Math.min(t.skills[o],i))}}}(0,e,s);const f=function(t,e,s,r){const o=[0,0,0,0,0];if(0===e)return o;for(let t of s.theseArmors){let s=t.augsPointer,i=5-s;if(t.budget<(i>0?1:8)||t.len>4)continue;let n=e,l=0,a=0;for(let e=0;e<s;e++){const s=t.augs[e];255===s?++l:s<250&&!r.names[s]&&++a;let u=--i>=0?0:--l>=0?5:--a>=0?10:999;if(999===u)continue;let f=1;for(;t.budget>=u+f;){let e=Math.min(n,6,~~((t.budget-u)/f));for(;e--;)++o[e];if(u+=--i>=0?0:--l>=0?5:--a>=0?10:999,u>=999)break;++f}}}for(let e=0;e<5;e++)t[e]=Math.max(t[e],o[e]);return o}(a,r,e,s);if(function(t,e,s,r,o){let i=[0,0,0,0],n=r[3];if(r[0]){let t=r[2]-n;if(t){let s=0;for(;s<e[63]-1;){let n=e[s++];const l=o.names[n].stats;let a=e[s++],u=3===a?l[5]:l[6]===a?1:l[7],f=e[s++];const d=l[2]/3-1;if(d<3)break;if(r[d]<u)continue;let c=Math.min(~~(t/u),f);i[a-1]<c&&(i[a-1]=c)}}}for(let e=0;e<4;++e)i[e]+=t[e];n&&(i[3]+=~~((n+i[1]+i[2])/2),i[1]+=n+i[1]+i[2],i[2]+=n,i[0]=r[1]);for(let t=0;t<4;++t)s[t]=Math.max(s[t],i[t])}(o,i,u,f,s),!n[0]){const{theseArmors:t,indexByType:s,armorTypes:r}=e;let o=6;for(let e=0;e<5;e++){let i=t[s[r[e]]],l=i.augs;n[e+1]=i.name;for(let t=0;t<6;t++)n[o++]=t<i.augsPointer?l[t]:250}}return f}function e(t){const e=h.costs,r=e[0];let u;const f=c.theseArmors,d=r.keys;t:for(let s=0;s<5;s++){if(r.total<=0)return r.total;const h=f[s];let m=5-h.len,g=Math.min(3,t,r.total);const p=d[r.pointer-1]*g;if(h.budget<p){let t,s=0,r=0,o=0,i=3-g;for(;s<3&&h.budget<p;){t=e[0].keys[o++];let{total:n}=e[t];for(;n&&s++<3;)s<=i?c.getPoints(h):h.budget<r+t?(c.getPoints(h),--g):(r+=t,--n)}}for(;g;)if(g>m){if(u=1===m?l(g,h.budget,r,h):l(g-1,h.budget-d[0],r,h),u){if(a(u[0],h,e,u[1]))return r.total;if(0==(g-=u[1]))continue t;continue}if(0==--g)continue t;d[r.pointer-1]*g>h.budget&&c.getPoints(h)}else if(u=2===g?i(r,h.budget,e):3===g?o(r,h.budget,e):1===g?n(r,h.budget):0,u){for(;g;)if(a(e[u[--g]].skills[0],h,e))return r.total}else{if(0==--g)continue t;d[r.pointer-1]*g>h.budget&&c.getPoints(h)}}return r.pointer&&4===t&&function(t){let{costs:e,names:r}=h,o=c.theseArmors;for(let i=0;i<5&&t.total;i++){const n=o[i];let l=n.augsPointer,u=n.budget-t.keys[0];if(u-(6===l?5:0)<t[0])continue;let[f,d]=m(n,r);if(u-=d,!(u>=0))continue;let c=s(t.pointer,e,n,t,u);if(c){if(d){for(n.budget-=d;f<n.augsPointer;)n.augs[f]=n.augs[++f];--n.augsPointer}a(c,n,e)}}}(r),r.total}function s(t,e,s,r,o){for(;t--;){let i=r.keys[t];if(i>o)continue;let n=e[i],l=n.skills;for(let t=0;t<n.pointer;++t)if(s.addSkillToSet(l[t][7]))return l[t]}}function r(t){for(let e of t)if(e[0]>0)return!0}function o(t,e,s){const r=t.pointer,o=t.keys;let i=r;for(;i--;){if(3*o[i]>e)continue;let t=r;for(;t-- >i;){if(i!==t&&o[i]+2*o[t]>e||i===t&&s[o[t]].total<2)continue;let n=r;for(;n-- >t;)if(n!==t&&o[i]+o[t]+o[n]<=e||n===t&&s[o[n]].total>(n===i?2:1))return[o[i],o[t],o[n]]}}}function i(t,e,s){const r=t.pointer;let o=r;const i=t.keys,n=e>>1;for(;o--;){if(i[o]>n)continue;let t=r;const l=s[i[o]].total>1?o:o+1;for(;t-- >l;)if(o===t||i[o]+i[t]<=e)return[i[o],i[t]]}}function n(t,e){let s=t.pointer;for(;s--;)if(t.keys[s]<=e)return[t.keys[s]]}function l(t,e,s,r){let o,i=h.costs,n=h.names,l=s.pointer,a=s.keys;if(r.usedSkills.length){let i=e-s.keys[0]*(t-1);for(let t=0;t<r.usedSkills.length;++t)if(o=n[r.usedSkills[t]].stats,o[1]>0&&o[2]<=i)return[o,1]}for(;l--;){let s=a[l],r=i[s];if(s*t<=e&&r.total-r.pointer>=t){let e=r.pointer;for(;e--;)if(o=r.skills[e],o[1]>=t)return[o,t]}}}function a(t,e,s,r=1){let o=t[7],i=t[2],n=s[i],l=s[0];if(e.budget<i*r||e.augsPointer+r>6||!e.addSkillToSet(o))return!0;for(let t=0;t<r;++t)e.augs[e.augsPointer++]=o;if(e.budget-=i*r,t[1]-=r,0==(l.total-=r))return!0;if(0!=(n.total-=r)){if(!t[1]){let e=n.skills,s=--n.pointer;if(e[s]===t)return;for(let r=0;r<s;++r)if(e[r]===t)return void(e[r]=e[s])}}else{if(n.skills.pop(),--n.pointer,l.keys[--l.pointer]===i)return;l.removeCost(i)}}class u{constructor(t,e){this.skillsClass=e,this.armors=t.armors,this.augmentRemovalOrder=[0,1,2,3,4],this.budget=0,this.theseArmors=[],this.isOverLimit=0,this.decoSlotsResetValues=new Int8Array(t.decoSlots),this.indexByType={helm:0,chest:1,arm:2,waist:3,leg:4},this.indexes=[],this.armorTypes=["helm","chest","arm","waist","leg"];for(let t=0;t<5;++t){let e=this.armorTypes[t];this.armors[e].forEach((t=>{t.addSkillToSet=function(t){let e=this.skillLen;for(;e--;)if(this.baseSkills[e]===t)return!0;return this.skillLen<5&&(this.baseSkills[this.skillLen++]=t,!0)}})),this.indexes[t]={index:-1,len:this.armors[e].length,type:e}}}getArmor(t,e){this.armors[t][e]}setNextArmor(t,e,s){const r=this.armors[t.type],o=r[t.index];if(this.theseArmors[this.indexByType[t.type]]=o,e>=0){let t=r[e];this.removeArmor(t,s);for(let e=0;e<4;++e)this.decoSlotsResetValues[e]+=-t.decos[e]+o.decos[e]}else for(let t=0;t<4;++t)this.decoSlotsResetValues[t]+=o.decos[t];this.addArmor(o,s)}addArmor(t,e){this.budget+=t.baseBudget;for(let s of t.usedSkills){const{stats:r,max:o}=e[s];r[0]>=o&&r[0]-t.skills[s]<o&&++this.isOverLimit,r[0]-=t.skills[s]}}removeArmor(t,e){this.budget-=t.baseBudget;for(let s of t.usedSkills){const{stats:r,max:o}=e[s];r[0]<o&&r[0]+t.skills[s]>=o&&--this.isOverLimit,r[0]+=t.skills[s]}}resetArmors(){for(let t=0;t<5;t++){let e=this.theseArmors[t];e.augsPointer=3,e.skillLen=e.len,e.fodderPointer=0,e.budget=e.baseBudget,e.augs[0]=e.augs[6],e.augs[1]=e.augs[7],e.augs[2]=e.augs[8]}}getPoints(t,e){if(!e){if(6===(e=t.augsPointer))return;++t.augsPointer}if(t.fodderCount&&t.fodderCount>t.fodderPointer)return t.augs[e]=t.fodder[t.fodderPointer++],void(t.budget+=10);t.augs[e]=255,t.budget+=5}setAugmentRemovalOrder(){this.theseArmors.sort(((t,e)=>e.skillLen-t.skillLen||t.baseBudget-e.baseBudget));let t=this.theseArmors,e=0,s=4;for(let r=0;r<5;++r)this.indexByType[t[r].type]=r,t[r].decoAugs&&(this.augmentRemovalOrder[t[r].len<3?e++:s--]=t[r]);this.augmentRemovalOrder.splice(e,s-e+1)}removeUnusedSlotAugments(t){let e,s,r=0,o=0,i=0;for(let n=0,l=this.augmentRemovalOrder.length;n<l;++n){for(s=this.augmentRemovalOrder[n],e=s.decoAugs,r=e.length,o=s.len>2?1:0;r-- >o&&(i=e[r],!(!t[i]||1===i&&r>0&&0!==e[r-1]&&!t[e[r-1]]));)--t[i],i&&++t[i-1],s.budget+=6,++s.augs[2];255===s.augs[2]&&(s.budget+=5,s.fodderCount>s.fodderPointer&&(s.augs[2]=s.fodder[s.fodderPointer++],s.budget+=5))}}}class f extends Int16Array{constructor(t,e,s,r,o){super(t,e,s),this.primary=r,this.secondary=o}resetPoints=function(){return this[1]=this[0],this[1]>0};addPrimary=function(){return!(this[0]<this.primary||(this[0]-=this.primary,0))};removePrimary=function(){this[0]+=this.primary};addSecondary=function(){return!(this[0]<this.secondary||(this[0]-=this.secondary,0))};removeSecondary=function(){this[0]+=this.secondary}}class d{constructor(t){const{skillBuffer:e,infoBuffer:s}=t;this.len=s.length>>2,this.skillsArr=[],this.names={},this.primaries=[],this.secondaries=[],this.round2=[];let r=0;for(let t=0;t<this.len;t++){const o=s[r+2],i=s[r+3],n=new f(e,16*t,8,o,i);i&&(this.primaries.push(o?n:void 0),this.secondaries.push(n)),this.skillsArr[t]=n,this.names[n[7]]={stats:n,points:s[r],max:s[r+1]},r+=4,n[4]||n[2]||(!i&&n[0]>1?(this.setBonus||(this.setBonus=[]),this.setBonus.push(n)):(this.charmNeeded||(this.charmNeeded=[]),this.charmNeeded.push(n)))}this.costKeys={total:0,keys:new Int8Array(5),pointer:0,removeCost:t=>{const{keys:e,pointer:s}=this.costKeys;for(let r=0;r<s;++r)if(e[r]===t){for(;r<s;)e[r]=e[++r];return}}},this.costs={0:this.costKeys,3:{total:0,skills:[],pointer:0},6:{total:0,skills:[],pointer:0},9:{total:0,skills:[],pointer:0},12:{total:0,skills:[],pointer:0},15:{total:0,skills:[],pointer:0},previousObj:{},addNew(t,e){this.previousObj=this[e[2]],this.previousObj.pointer=1,this.previousObj.total=e[1],this.previousObj.skills[0]=e},addSameCost(t){this.previousObj.total+=t[1],this.previousObj.skills[this.previousObj.pointer++]=t}}}useDecorationSlots(t,e,s){let r=0;const o=this.round2;let i,n,l,a,u=0,f=this.len;t:for(;f--;){if(a=this.skillsArr[f],!a.resetPoints())continue;let e=4===a[3]&&a[1]>=a[4]&&t[3]?4:5;for(;e<6&&a[e++];){if(5===e)i=3,n=a[4],l=Math.min(a[1]>>n-1,t[i]);else{if(a[2]<9)break;i=a[5]-1,n=1,l=Math.min(a[1],t[i])}if(l>=1&&(t[i]-=l,a[1]-=l*n,s&&(s[r++]=a[7],s[r++]=i,s[r++]=l),!a[1]))continue t}o[u++]=a}e.removeUnusedSlotAugments(t);let d=0,c=0;const h=this.costs,m=h[0].keys;let g=0;t:for(let e=0;e<u;++e){a=o[e];let u=t[3]?4:5;for(;u<7&&a[u++];)if(5===u?(i=3,n=a[4],l=Math.min(~~(a[1]/n),t[i])):6===u?(i=a[5]-1,n=1,l=Math.min(a[1],t[i])):(i=a[5],n=a[6],l=Math.min(~~(a[1]/n),t[i])),l>=1&&(s&&(s[r++]=a[7],s[r++]=i,s[r++]=l),t[i]-=l,a[1]-=l*n,!a[1]))continue t;c===a[2]?h.addSameCost(a):(c=a[2],h.addNew(c,a),m[g++]=c),d+=a[1]}this.costKeys.pointer=g,this.costKeys.total=d;let p=-1;for(;++p<--g;)[m[g],m[p]]=[m[p],m[g]];s&&(s[63]=r)}}let c,h;"undefined"!=typeof self&&(self.onmessage=s=>{performance.now();const{setLimiter:o,runChecks:i}=s.data;h=new d(s.data.skillBuffer),c=new u(s.data.armorObj,h);const n=[];for(let t=0;t<5;++t){let e=c.armorTypes[t];n[t]={index:-1,len:c.armors[e].length,type:e}}const l=c.decoSlotsResetValues,{primaries:a,secondaries:f,setBonus:m,charmNeeded:g}=h,p=h.primaries.length;let y;const k={sets:[{armors:new Uint8Array(36),decos:new Uint8Array(64),charms:new Uint8Array(360)}],count:{sets:0,combos:0},stats:{quriousSkills:[0,0,0,0,0],armorSkills:{},remainingSlots:[0,0,0,0]}},b=k.stats;let A=k.sets[0],S=A.charms,v=A.armors,P=A.decos;const x=new Uint8Array(4),{costKeys:O}=h;t:for(;;){for(let t=0;t<5;t++){let e=n[t],s=e.index;if(++e.index===e.len&&(e.index=0,"leg"===e.type))break t;if(c.setNextArmor(e,s,h.names),0!==e.index)break}if(c.isOverLimit>0)continue;if(m&&r(m))continue t;c.setAugmentRemovalOrder(),i&&(y=[]);let s=0;for(let n=0;n<p;n++)if(a[n]?.addPrimary()){e:for(let u=n>0?0:1;u<p;u+=u+1!==n?1:2){if(!f[u]?.addSecondary())continue;if(g&&r(g))continue e;for(let t=0;t<4;t++)x[t]=l[t];if(c.resetArmors(),v[0]>0?h.useDecorationSlots(x,c,!1):h.useDecorationSlots(x,c,P),O.total>5*o){f[u].removeSecondary();continue e}let d=e(o);if(f[u].removeSecondary(),d>0){if(d<4)continue e;if(d<7)break e;a[n].removePrimary();continue t}v[0]&&!i||(i&&A.armors[0]>1&&y.push([v,P,[a[n].primary,f[u].secondary]]),t(b,c,h,o,x,P,v)),v[0]++,S[s++]=a[n][7],S[s++]=f[u][7]}a[n].removePrimary()}if(!v[0])continue;k.count.sets++,k.count.combos+=v[0];let u=k.sets.length-1;if(u<5||k.sets[u-1].armors[0]<v[0]){for(;u>0&&k.sets[u-1].armors[0]<v[0];)k.sets[u]=k.sets[--u];k.sets[u]=A,k.sets.length<6&&k.sets.push({armors:new Uint8Array(36),decos:new Uint8Array(64),charms:new Uint8Array(360)}),A=k.sets.at(-1),v=A.armors,P=A.decos,S=A.charms}v[0]=0}1===k.sets.length?postMessage(""):(k.sets.pop(),postMessage(k))});let m=function(t,e){if(t.augsPointer<6)return[t.augsPointer,0];const s=t.augs;if(255===s[1])return[1,5];let r=6;for(;r--;){let o=s[r];if(255===o)return[r,5];if(o<250&&(!e[o]||t.skills[o]>e[o].points))return[r,10]}return[0,99]}})();