(()=>{"use strict";const e=JSON.parse('{"decos":{"AffinitySliding":1,"BlastResistance":1,"Bombardier":1,"Botanist":1,"CarvingPro":1,"ChameleosBlessing":1,"DefenseBoost":1,"Defiance":1,"Diversion":1,"DragonAttack":1,"DragonResistance":1,"FireAttack":1,"FireResistance":1,"FlinchFree":1,"FreeMeal":1,"Geologist":1,"HornMaestro":1,"HungerResistance":1,"IceAttack":1,"IceResistance":1,"IntrepidHeart":1,"KushalaBlessing":1,"LeapofFaith":1,"MuckResistance":1,"ParalysisResistance":1,"PoisonAttack":1,"PoisonResistance":1,"RecoilDown":1,"RecoverySpeed":1,"ReloadSpeed":1,"ShockAbsorber":1,"SleepResistance":1,"SpeedSharpening":1,"SpiribirdsCall":1,"StaminaThief":1,"Steadiness":1,"StunResistance":1,"TeostraBlessing":1,"ThunderAttack":1,"ThunderResistance":1,"WallRunnerBoost":1,"WaterAttack":1,"WaterResistance":1,"Windproof":1,"AdrenalineRush":2,"Agitator":2,"Artillery":2,"AttackBoost":2,"Ballistics":2,"BladescaleHone":2,"BlastAttack":2,"BlightResistance":2,"Bludgeoner":2,"BubblyDance":2,"Burst":2,"ChargeMaster":2,"Coalescence":2,"Constitution":2,"Counterstrike":2,"CriticalBoost":2,"CriticalElement":2,"CriticalEye":2,"DivineBlessing":2,"ElementExploit":2,"Embolden":2,"EvadeExtender":2,"EvadeWindow":2,"Focus":2,"Foray":2,"Fortify":2,"Guard":2,"GuardUp":2,"Heroics":2,"ItemProlonger":2,"LatentPower":2,"LoadShells":2,"MarathonRunner":2,"MasterMounter":2,"MastersTouch":2,"MaximumMight":2,"MindsEye":2,"ParalysisAttack":2,"Partbreaker":2,"PeakPerformance":2,"PowerProlonger":2,"ProtectivePolish":2,"PunishingDraw":2,"QuickSheathe":2,"RapidMorph":2,"RazorSharp":2,"RecoveryUp":2,"Resentment":2,"Resuscitate":2,"SleepAttack":2,"Slugger":2,"SneakAttack":2,"SpareShot":2,"SpecialAmmoBoost":2,"SpeedEating":2,"StaminaSurge":2,"TremorResistance":2,"WallRunner":2,"WeaknessExploit":2,"Wide-Range":2,"WirebugWhisperer":2,"AmmoUp":3,"BloodRite":3,"CriticalDraw":3,"Earplugs":3,"GoodLuck":3,"GrinderS":3,"Handicraft":3,"HellfireCloak":3,"JumpMaster":3,"Mushroomancer":3,"NormalRapidUp":3,"OffensiveGuard":3,"PierceUp":3,"QuickBreath":3,"RapidFireUp":3,"Redirection":3,"SpreadUp":3,"StatusTrigger":3,"Tune-Up":3,"Bloodlust":4,"BowChargePlus":4,"Dragonheart":4},"maxLevel":{"AdrenalineRush":3,"AffinitySliding":1,"Agitator":5,"AmmoUp":3,"Artillery":3,"AttackBoost":7,"Ballistics":3,"Berserk":2,"BladescaleHone":3,"BlastAttack":3,"BlastResistance":3,"BlightResistance":3,"Bloodlust":3,"BloodRite":3,"Bludgeoner":3,"Bombardier":3,"Botanist":4,"BowChargePlus":1,"BubblyDance":3,"BuildupBoost":3,"Burst":3,"CaptureMaster":1,"CarvingMaster":1,"CarvingPro":1,"ChameleosBlessing":4,"ChargeMaster":3,"Coalescence":3,"Constitution":5,"Counterstrike":3,"CriticalBoost":3,"CriticalDraw":3,"CriticalElement":3,"CriticalEye":7,"DefenseBoost":7,"Defiance":5,"Dereliction":3,"Diversion":1,"DivineBlessing":3,"DragonAttack":5,"DragonConversion":3,"Dragonheart":5,"DragonResistance":3,"Earplugs":5,"ElementExploit":3,"Embolden":3,"EvadeExtender":3,"EvadeWindow":5,"FireAttack":5,"FireResistance":3,"FlinchFree":3,"Focus":3,"Foray":3,"Fortify":1,"FreeMeal":3,"FrenziedBloodlust":3,"Frostcraft":3,"Furious":3,"Geologist":3,"GoodLuck":3,"GrinderS":3,"Guard":5,"GuardUp":3,"Guts":3,"Handicraft":5,"Heaven-Sent":3,"HellfireCloak":4,"Heroics":5,"HornMaestro":1,"HungerResistance":3,"IceAttack":5,"IceResistance":3,"IntrepidHeart":2,"ItemProlonger":3,"JumpMaster":1,"KushalaBlessing":4,"LatentPower":5,"LeapofFaith":1,"LoadShells":2,"MailofHellfire":3,"MarathonRunner":3,"MasterMounter":1,"MastersTouch":3,"MaximumMight":3,"MindsEye":3,"MuckResistance":2,"Mushroomancer":3,"NormalRapidUp":3,"OffensiveGuard":3,"ParalysisAttack":3,"ParalysisResistance":3,"Partbreaker":3,"PeakPerformance":3,"PierceUp":3,"PoisonAttack":3,"PoisonResistance":3,"PowderMantle":3,"PowerProlonger":3,"ProtectivePolish":3,"PunishingDraw":3,"QuickBreath":1,"QuickSheathe":3,"RapidFireUp":3,"RapidMorph":3,"RazorSharp":3,"RecoilDown":3,"RecoverySpeed":3,"RecoveryUp":3,"Redirection":2,"ReloadSpeed":3,"Resentment":5,"Resuscitate":3,"ShockAbsorber":1,"SleepAttack":3,"SleepResistance":3,"Slugger":3,"SneakAttack":3,"SpareShot":3,"SpecialAmmoBoost":2,"SpeedEating":3,"SpeedSharpening":3,"SpiribirdsCall":1,"SpreadUp":3,"StaminaSurge":3,"StaminaThief":3,"StatusTrigger":3,"Steadiness":3,"Stormsoul":5,"Strife":3,"StunResistance":3,"TeostraBlessing":4,"ThunderAlignment":5,"ThunderAttack":5,"ThunderResistance":3,"TremorResistance":3,"Tune-Up":2,"WallRunner":3,"WallRunnerBoost":1,"WaterAttack":5,"WaterResistance":3,"WeaknessExploit":3,"Wide-Range":5,"WindAlignment":5,"WindMantle":3,"Windproof":3,"WirebugWhisperer":3},"qurious":{"AmmoUp":15,"AttackBoost":15,"CriticalBoost":15,"CriticalEye":15,"Guts":15,"MastersTouch":15,"NormalRapidUp":15,"PierceUp":15,"RapidFireUp":15,"RazorSharp":15,"SpareShot":15,"SpreadUp":15,"WeaknessExploit":15,"Agitator":12,"Artillery":12,"BloodRite":12,"Bloodlust":12,"BuildupBoost":12,"Burst":12,"Coalescence":12,"DragonConversion":12,"Frostcraft":12,"GoodLuck":12,"Handicraft":12,"LatentPower":12,"MaximumMight":12,"PeakPerformance":12,"RapidMorph":12,"Resentment":12,"Resuscitate":12,"SneakAttack":12,"Tune-Up":12,"AdrenalineRush":9,"Ballistics":9,"BladescaleHone":9,"ChargeMaster":9,"CriticalDraw":9,"CriticalElement":9,"Dragonheart":9,"Earplugs":9,"ElementExploit":9,"Focus":9,"Foray":9,"Furious":9,"GrinderS":9,"HellfireCloak":9,"Heroics":9,"MailofHellfire":9,"MindsEye":9,"Mushroomancer":9,"OffensiveGuard":9,"PowderMantle":9,"PowerProlonger":9,"ProtectivePolish":9,"Redirection":9,"StatusTrigger":9,"Strife":9,"WindMantle":9,"WirebugWhisperer":9,"BlastAttack":6,"BubblyDance":6,"ChameleosBlessing":6,"Constitution":6,"Counterstrike":6,"Defiance":6,"Embolden":6,"EvadeExtender":6,"EvadeWindow":6,"Guard":6,"GuardUp":6,"IntrepidHeart":6,"KushalaBlessing":6,"LoadShells":6,"MarathonRunner":6,"ParalysisAttack":6,"Partbreaker":6,"PoisonAttack":6,"PunishingDraw":6,"QuickSheathe":6,"RecoilDown":6,"ReloadSpeed":6,"SleepAttack":6,"Slugger":6,"SpecialAmmoBoost":6,"SpeedEating":6,"StaminaSurge":6,"Steadiness":6,"TeostraBlessing":6,"TremorResistance":6,"WallRunner":6,"AffinitySliding":3,"BlastResistance":3,"BlightResistance":3,"DefenseBoost":3,"Diversion":3,"DivineBlessing":3,"DragonAttack":3,"FireAttack":3,"FlinchFree":3,"Fortify":3,"FreeMeal":3,"HornMaestro":3,"HungerResistance":3,"IceAttack":3,"ItemProlonger":3,"LeapofFaith":3,"MasterMounter":3,"MuckResistance":3,"ParalysisResistance":3,"PoisonResistance":3,"RecoverySpeed":3,"RecoveryUp":3,"SleepResistance":3,"SpeedSharpening":3,"SpiribirdsCall":3,"StaminaThief":3,"StunResistance":3,"ThunderAttack":3,"WallRunnerBoost":3,"WaterAttack":3,"Wide-Range":3,"Windproof":3},"pointsPerSlot":[{"ChameleosBlessing":1,"Defiance":1,"IntrepidHeart":1,"KushalaBlessing":1,"PoisonAttack":1,"RecoilDown":1,"ReloadSpeed":1,"Steadiness":1,"TeostraBlessing":1,"AffinitySliding":1,"BlastResistance":1,"DefenseBoost":1,"Diversion":1,"DragonAttack":1,"FireAttack":1,"FlinchFree":1,"FreeMeal":1,"HornMaestro":1,"HungerResistance":1,"IceAttack":1,"LeapofFaith":1,"MuckResistance":1,"ParalysisResistance":1,"PoisonResistance":1,"RecoverySpeed":1,"SleepResistance":1,"SpeedSharpening":1,"SpiribirdsCall":1,"StaminaThief":1,"StunResistance":1,"ThunderAttack":1,"WallRunnerBoost":1,"WaterAttack":1,"Windproof":1,"Bombardier":1,"Botanist":1,"CarvingPro":1,"DragonResistance":1,"FireResistance":1,"Geologist":1,"IceResistance":1,"ShockAbsorber":1,"ThunderResistance":1,"WaterResistance":1},{"AttackBoost":1,"CriticalBoost":1,"CriticalEye":1,"MastersTouch":1,"RazorSharp":1,"SpareShot":1,"WeaknessExploit":1,"Agitator":1,"Artillery":1,"Burst":1,"Coalescence":1,"LatentPower":1,"MaximumMight":1,"PeakPerformance":1,"RapidMorph":1,"Resentment":1,"Resuscitate":1,"SneakAttack":1,"AdrenalineRush":1,"Ballistics":1,"BladescaleHone":1,"ChargeMaster":1,"CriticalElement":1,"ElementExploit":1,"Focus":1,"Foray":1,"Heroics":1,"MindsEye":1,"PowerProlonger":1,"ProtectivePolish":1,"WirebugWhisperer":1,"BlastAttack":1,"BubblyDance":1,"Constitution":1,"Counterstrike":1,"Embolden":1,"EvadeExtender":1,"EvadeWindow":1,"Guard":1,"GuardUp":1,"LoadShells":1,"MarathonRunner":1,"ParalysisAttack":1,"Partbreaker":1,"PunishingDraw":1,"QuickSheathe":1,"SleepAttack":1,"Slugger":1,"SpecialAmmoBoost":1,"SpeedEating":1,"StaminaSurge":1,"TremorResistance":1,"WallRunner":1,"ChameleosBlessing":1,"DefenseBoost":2,"Defiance":1,"DragonAttack":2,"FireAttack":2,"IceAttack":2,"IntrepidHeart":1,"KushalaBlessing":1,"PoisonAttack":1,"RecoilDown":1,"ReloadSpeed":1,"Steadiness":1,"TeostraBlessing":1,"ThunderAttack":2,"WaterAttack":2,"BlightResistance":1,"DivineBlessing":1,"Fortify":1,"ItemProlonger":1,"MasterMounter":1,"RecoveryUp":1,"Wide-Range":1,"AffinitySliding":1,"BlastResistance":1,"Diversion":1,"FlinchFree":1,"FreeMeal":1,"HornMaestro":1,"HungerResistance":1,"LeapofFaith":1,"MuckResistance":1,"ParalysisResistance":1,"PoisonResistance":1,"RecoverySpeed":1,"SleepResistance":1,"SpeedSharpening":1,"SpiribirdsCall":1,"StaminaThief":1,"StunResistance":1,"WallRunnerBoost":1,"Windproof":1,"Bludgeoner":1,"Bombardier":1,"Botanist":1,"CarvingPro":1,"DragonResistance":1,"FireResistance":1,"Geologist":1,"IceResistance":1,"ShockAbsorber":1,"ThunderResistance":1,"WaterResistance":1},{"AmmoUp":1,"NormalRapidUp":1,"PierceUp":1,"RapidFireUp":1,"SpreadUp":1,"AttackBoost":1,"CriticalBoost":1,"CriticalEye":1,"MastersTouch":1,"RazorSharp":1,"SpareShot":1,"WeaknessExploit":1,"BloodRite":1,"GoodLuck":1,"Handicraft":1,"Tune-Up":1,"Agitator":1,"Artillery":1,"Burst":1,"Coalescence":1,"Guard":2,"LatentPower":1,"MaximumMight":1,"PeakPerformance":1,"RapidMorph":1,"Resentment":1,"Resuscitate":1,"SneakAttack":1,"IntrepidHeart":2,"CriticalDraw":1,"Earplugs":1,"GrinderS":1,"HellfireCloak":1,"Mushroomancer":1,"OffensiveGuard":1,"Redirection":1,"StatusTrigger":1,"AdrenalineRush":1,"Ballistics":1,"BladescaleHone":1,"ChargeMaster":1,"CriticalElement":1,"ElementExploit":1,"Focus":1,"Foray":1,"Heroics":1,"MindsEye":1,"PowerProlonger":1,"ProtectivePolish":1,"Wide-Range":3,"WirebugWhisperer":1,"DefenseBoost":3,"DragonAttack":3,"FireAttack":3,"IceAttack":3,"ThunderAttack":3,"WaterAttack":3,"BlastAttack":1,"BubblyDance":1,"Constitution":1,"Counterstrike":1,"Embolden":1,"EvadeExtender":1,"EvadeWindow":1,"GuardUp":1,"LoadShells":1,"MarathonRunner":1,"ParalysisAttack":1,"Partbreaker":1,"PunishingDraw":1,"QuickSheathe":1,"SleepAttack":1,"Slugger":1,"SpecialAmmoBoost":1,"SpeedEating":1,"StaminaSurge":1,"TremorResistance":1,"WallRunner":1,"ChameleosBlessing":1,"Defiance":1,"KushalaBlessing":1,"PoisonAttack":1,"RecoilDown":1,"ReloadSpeed":1,"Steadiness":1,"TeostraBlessing":1,"BlightResistance":1,"DivineBlessing":1,"Fortify":1,"ItemProlonger":1,"MasterMounter":1,"RecoveryUp":1,"AffinitySliding":1,"BlastResistance":1,"Diversion":1,"FlinchFree":1,"FreeMeal":1,"HornMaestro":1,"HungerResistance":1,"LeapofFaith":1,"MuckResistance":1,"ParalysisResistance":1,"PoisonResistance":1,"RecoverySpeed":1,"SleepResistance":1,"SpeedSharpening":1,"SpiribirdsCall":1,"StaminaThief":1,"StunResistance":1,"WallRunnerBoost":1,"Windproof":1,"JumpMaster":1,"QuickBreath":1,"Bludgeoner":1,"Bombardier":1,"Botanist":1,"CarvingPro":1,"DragonResistance":1,"FireResistance":1,"Geologist":1,"IceResistance":1,"ShockAbsorber":1,"ThunderResistance":1,"WaterResistance":1},{"AmmoUp":2,"NormalRapidUp":2,"PierceUp":2,"SpreadUp":2,"AttackBoost":2,"CriticalEye":2,"MastersTouch":2,"RazorSharp":2,"GoodLuck":2,"Handicraft":2,"Tune-Up":2,"Agitator":2,"Artillery":2,"Burst":2,"Coalescence":2,"LatentPower":2,"MaximumMight":2,"PeakPerformance":2,"RapidMorph":2,"Resentment":2,"Resuscitate":2,"SneakAttack":2,"CriticalDraw":2,"Earplugs":2,"GrinderS":2,"HellfireCloak":2,"Mushroomancer":2,"OffensiveGuard":2,"Redirection":2,"StatusTrigger":2,"AdrenalineRush":2,"Ballistics":2,"BladescaleHone":2,"ChargeMaster":2,"CriticalElement":2,"ElementExploit":2,"Focus":2,"Foray":2,"Heroics":2,"MindsEye":2,"PowerProlonger":2,"ProtectivePolish":2,"WallRunner":3,"WirebugWhisperer":2,"Defiance":3,"PoisonAttack":3,"Steadiness":3,"RapidFireUp":1,"CriticalBoost":1,"SpareShot":1,"WeaknessExploit":1,"DefenseBoost":5,"Bloodlust":1,"BloodRite":1,"BlastAttack":2,"BubblyDance":2,"Constitution":2,"Counterstrike":2,"Embolden":2,"EvadeExtender":2,"EvadeWindow":2,"Guard":2,"GuardUp":2,"LoadShells":2,"MarathonRunner":2,"ParalysisAttack":2,"Partbreaker":2,"PunishingDraw":2,"QuickSheathe":2,"SleepAttack":2,"Slugger":2,"SpecialAmmoBoost":2,"SpeedEating":2,"StaminaSurge":2,"TremorResistance":2,"Wide-Range":4,"DragonAttack":4,"FireAttack":4,"IceAttack":4,"IntrepidHeart":2,"ThunderAttack":4,"WaterAttack":4,"Dragonheart":1,"ItemProlonger":3,"BlastResistance":3,"FlinchFree":3,"FreeMeal":3,"HungerResistance":3,"ParalysisResistance":3,"PoisonResistance":3,"RecoverySpeed":3,"SleepResistance":3,"SpeedSharpening":3,"StaminaThief":3,"StunResistance":3,"Windproof":3,"BlightResistance":2,"DivineBlessing":2,"RecoveryUp":2,"ChameleosBlessing":1,"KushalaBlessing":1,"RecoilDown":1,"ReloadSpeed":1,"TeostraBlessing":1,"Fortify":1,"MasterMounter":1,"AffinitySliding":1,"Diversion":1,"HornMaestro":1,"LeapofFaith":1,"MuckResistance":1,"SpiribirdsCall":1,"WallRunnerBoost":1,"BowChargePlus":1,"JumpMaster":1,"QuickBreath":1,"Bludgeoner":1,"Bombardier":3,"Botanist":3,"CarvingPro":1,"DragonResistance":3,"FireResistance":3,"Geologist":3,"IceResistance":3,"ShockAbsorber":1,"ThunderResistance":3,"WaterResistance":3}]}');let{decos:t,maxLevel:s,qurious:i,pointsPerSlot:a}=e;const max=(e,t)=>e>=t?e:t,getMostSkills=(e,t)=>{for(const s of e)if("memo"!==s){for(let e=0;e<4;e++)t.remainingSlots[e]=max(t.remainingSlots[e]||0,s.remainingSlots[e]);for(let e=0;e<5;e++)t.quriousSkills[e]=max(t.quriousSkills[e]||0,s.quriousSkills[e]);for(const[e,i]of Object.entries(s.armorSkills))t.armorSkills[e]=max(t.armorSkills[e]||0,i)}},slotDecos=(e,t,s)=>{[0,3,2,1].forEach((i=>{for(const[n,o]of a[i]){if(!t[i])break;if(!e[n])continue;const a=Math.min(t[i],~~(-e[n]/o));a&&(e[n]+=a*o,t[i]-=a,s.decos.push([n,o,"Slot lvl"+(+i+1),a]))}}));const n={};return Object.entries(e).forEach((e=>{const t=i[e[0]]/3;e[1]>=0||!e[0]||!t||(n[t]||(n[t]={total:0}),n[t].total-=e[1],n[t][e[0]]=-e[1])})),[n,t]};const findBestSum1=(e,t)=>{for(let s=e.length-1;s>=0;--s)if(+e[s]<=t)return[[+e[s]],+e[s]]},getPoints=(e,t)=>{e.fodderSkills.length>0?(t[e.name].push({"-Skill":e.fodderSkills[++e.skillsRemovedCount]}),e.quriousPoints+=10):(t[e.name].push({"-Def":5}),e.quriousPoints+=5),e.unBloatedPoints=~~(e.quriousPoints/3)},minimumCostForPossibleAugs=(e,t,s)=>{let i=0;for(let a=0;e>0&&a<t.length;++a){const n=Math.min(s[t[a]].total,e);i+=n*+t[a],e-=n}return i};function pushAugs(e,t,s,a,n=!1){if(!s.innateSkills.has(e)){if(!(s.innateSkills.size<5))return a&&console.log(s.name,e),!0;s.innateSkills.add(e)}n&&(s.quriousPoints-=i[e],s.unBloatedPoints=~~(s.quriousPoints/3)),s.quriousPoints>=0?t[s.name].push({"+Skill":e}):console.log("error")}function updateRemainingSkills(e,t){if(0==--e.total)return!0;0==--e[t]&&delete e[t]}function getBestCombos(e,t,s,i){switch(e){case 2:return function(e,t,s,i){let a=[[],0];for(let n=0,o=e.length;0!==n||!a[1];){if(++n>=o){if(a[1])return a;++a[1],n=0}const r=+e[n];if(!(t[r].total<1))for(let l=n;l<o;l++){const n=+e[l];if(!(r+n>s||r+n<=a[1]||r===n&&1===t[n].total||r!==n&&1===i)&&(a=[[r,n],r+n],a[1]===s))return a}}return a}(Object.keys(t),t,s>10?10:s,i);case 3:return function(e,t,s,i=0){let a=[[],0];for(let n=0,o=e.length;0!==n||!a[1];){if(++n>=o){if(a[1])return a;++a[1],n=0}let r=+e[n];e:for(let l=n;l<o;l++){let n=+e[l];if(r!==n||1!==t[n].total)for(let c=l;c<o;c++){let o=+e[c];if(r+n+o>s)continue e;if(r+n+o<=a[1])continue;let l=0;if(!(r===n&&t[r].total<1+ ++l||r===o&&t[r].total<1+ ++l||2!==l&&n===o&&t[o].total<Math.min(3,1+ ++l)||i&&l+i<3||(a=[[r,n,o],r+n+o],a[1]!==s)))return a}}}return a}(Object.keys(t),t,s>15?15:s,i);default:return findBestSum1(Object.keys(t),s>5?5:s)||[0,1]}}const findMaxValueNotInRequestedSkills=e=>{const t={};for(const s in e){const i=e[s];let a=0,n="";for(const e in i)"total"!==e&&i[e]>a&&(a=i[e],n=e);a>0&&(t[s]={total:a,skill:n})}return t},getQuriousSkills=(e,t,s,a,n,o)=>{let r=0;if(Object.values(e).forEach((e=>r+=e.total)),r>5*n)return!1;for(let e of t)e.quriousPoints=e.startingQuriousPoints,s[e.name]=e.augs.slice(),e.unBloatedPoints=~~(e.quriousPoints/3),e.innateSkills=new Set(Object.keys(e.skills));for(const l of a){let a,c=t[l];if(!Object.keys(e).length||r<=0||s[c.name].length>=6)continue;let u=6-s[c.name].length,d=Math.min(u,r,n),g=u-r;for(;--g>=0||minimumCostForPossibleAugs(d,Object.keys(e),e)>c.unBloatedPoints&&--d>0;)getPoints(c,s);if(!d)continue;const h=5-c.innateSkills.size<d?5-c.innateSkills.size:0;if(h){for(let t of c.requestedSkills)if(e[i[t]/3]&&e[i[t]/3][t])for(;h<d&&e[i[t]/3][t]&&c.quriousPoints>i[t];)pushAugs(t,s,c,o,!0)||(--d,--r,updateRemainingSkills(e[i[t]/3],t)&&delete e[i[t]/3]);let t=h<d?findMaxValueNotInRequestedSkills(e):e;for(;(!a||--d>0)&&(a&&c.unBloatedPoints<5*d&&getPoints(c,s),a=getBestCombos(d,t,c.unBloatedPoints,h<d?h:0),!a||!(a[1]>1||1===d)););if(!a||1===a[1]&&0===a[0])continue;if((c.quriousPoints-=3*a[1])<0||isNaN(c.quriousPoints)&&o){console.log(`${c.name} has ${c.quriousPoints} points}`,c);continue}for(let i of a[0]){let a;t[i]?.total>0?(a=t[i].skill||Object.keys(e[i])[1],pushAugs(a,s,c,o)||(--r,updateRemainingSkills(e[i],a)&&delete e[i])):o&&console.log("augment not found")}}else{if(a=getBestCombos(d,e,c.unBloatedPoints),!a)continue;if((c.quriousPoints-=3*a[1])<0||isNaN(c.quriousPoints)){o&&console.log(`${c.name} has ${c.quriousPoints} points}`,c);continue}for(const t of a[0]){const i=Object.keys(e[t])[1];pushAugs(i,s,c,o)||(--r,updateRemainingSkills(e[t],i)&&delete e[t])}}}const replaceAugment=(t,i,a)=>{i&&t.augs.splice(i,1);const n=findBestSum1(a,~~(t.quriousPoints/3)),l=t.innateSkills.size<5?Object.keys(e[n[0]])[1]:Object.keys(e[n[0]]).filter((e=>t.innateSkills.has(e)))[0];pushAugs(l,s,t,o,!0)||(--r,updateRemainingSkills(e[n[0]],l)&&delete e[n[0]])};e:for(const i of t){if(!Object.keys(e).length||!n||!r)break;for(let t=i.augs.length-1;t>=0&&i.quriousPoints>=8;t--){let a=i.innateSkills.size<5?Object.keys(e):Object.keys(e).filter((t=>Object.keys(e[t]).some((e=>i.innateSkills.has(e)))));if(!a.length)continue e;s[i.name].length<6&&i.quriousPoints>=3*+a[0]?replaceAugment(i,!1,a):i.augs[t]["-Def"]&&i.quriousPoints-5>=3*+a[0]?(i.quriousPoints-=5,replaceAugment(i,t,a)):i.augs[t]["-Skill"]&&i.quriousPoints-10>=3*+a[0]&&(i.quriousPoints-=10,replaceAugment(i,t,a))}}return!Object.keys(e).length};self.onmessage=e=>{const s={sets:[],count:{sets:0,combos:0},stats:{quriousSkills:[0,0,0,0,0],armorSkills:{},remainingSlots:[0,0,0,0]}};a.forEach(((s,n)=>{let o=[];for(let t in s)e.data.skills[t]&&o.push([t,s[t]]);a[n]=o.sort(((e,s)=>i[s[0]]*s[1]-i[e[0]]*e[1]||t[s[0]]-t[e[0]]))}));for(const t of e.data.permutations){e.data.theseArmors=[e.data.armors.helm[t[0]],e.data.armors.chest[t[1]],e.data.armors.arm[t[2]],e.data.armors.waist[t[3]],e.data.armors.leg[t[4]]],e.data.memoBoolean=s.sets.length>=20;const i=testThisBatch(e.data);i&&(getMostSkills(i,s.stats),s.count.combos+=i.length,++s.count.sets,s.sets.length<20&&s.sets.push(i))}postMessage({final:s})};const testThisBatch=e=>{const{theseCharms:a,theseArmors:n,skills:o}=e,{setLimiter:r,charmNeeded:l,runChecks:c}=e.skillInfo,u=new Map,d=[],g={};for(const e of n)for(const t of e.requestedSkills)if(g[t]=g[t]?g[t]+e.skills[t]:e.skills[t],g[t]>s[t])return;const h=Object.entries(g),S=[0,0,0,0];[n[0].decos,n[1].decos,n[2].decos,n[3].decos,n[4].decos,e.charmSlots].forEach((e=>e.forEach(((e,t)=>S[t]+=e))));const f=[0,1,2,3,4].sort(((e,t)=>n[e].skillLimitation-n[t].skillLimitation)),k=[];e:for(const m of a){if(l)for(const e in l)if((g[e]||0)+(m[e]||0)<l[e])continue e;for(let e in m)if(g[e]&&g[e]+m[e]>s[e])continue e;let a={qurious:0,decos:[0,0,0,0]};const p={decos:[],augments:{},armorSkills:h,charm:[]};for(const e in m){if(g[e]&&g[e]+m[e]>s[e])return;a.qurious+=i[e]*m[e],a.decos[t[e]-1]+=m[e],p.charm.push([e,m[e]])}if(a=a.toString(),u.has(a)&&!1===u.get(a))continue;if(e.memoBoolean&&u.has(a)){k.push("memo");continue}const R={};for(const e in o)o[e]+(g[e]||0)+(m[e]||0)<0&&(R[e]=o[e]+(g[e]||0)+(m[e]||0));const[B,P]=slotDecos(R,S.slice(),p);if(getQuriousSkills(B,n,p.augments,f,r,c)){if(!c||testSets(p,n,o,R,B,d,S)){e.memoBoolean&&u.set(a,!0);let t=findExtraQuriousSkills(n,p.augments);k.push({usedSkills:p,armors:[[n[0].name,n[0]],[n[1].name,n[1]],[n[2].name,n[2]],[n[3].name,n[3]],[n[4]?.name,n[4]]],quriousSkills:t,remainingSlots:findExtraDecorationSkills(P,p.decos,t.slice()),armorSkills:findExtraArmorSkills(n,p.augments),decoArr:S})}}else u.set(a,!1)}if(d.length&&console.log(structuredClone(d)),k.length)return k};function testSets(e,t,s,i,a,n,o){let r={};r[e.charm[0][0]]=e.charm[0][1],r[e.charm[1][0]]=e.charm[1][1],e.decos.forEach((([e,t,,s])=>{r[e]=(r[e]||0)+t*s}));for(const t of e.armorSkills)r[t[0]]=(r[t[0]]||0)+t[1];for(let s of t)e.augments[s.name].forEach((e=>{e["+Skill"]&&(r[e["+Skill"]]=(r[e["+Skill"]]||0)+1)}));if(Object.entries(s).every((e=>r[e[0]]+e[1]>=0)))return!0;n.push({skillsNeeded:s,innateArmorSkills:e.armorSkills,charmSkills:e.charm,initalDecos:o,decosRecord:e.decos,skillsNeededAfterDecos:i,skillAugmentsRecorded:e.augments,remainingSkillsListAfterAugment:a})}function findExtraDecorationSkills(e,t,s){for(let a=s.length;a>0;a--)t.forEach((t=>{const n=i[t[0]]/3,o=t[2].slice(-1)-1;if(a!==n||s[a-1]<t[1])return;const r=Math.min(t[3],Math.floor(s[a-1]/t[1]));e[o]+=r,s[a-1]-=r}));return e}function findExtraQuriousSkills(e,t){const s=[0,0,0,0,0];for(const i of e){if(i.quriousPoints<8||i.innateSkills?.size>4)continue;let e=0;const a=5-(i.innateSkills?.size||Object.keys(i.skills).length);let n=1;for(let s in t[i.name])"-Def"===s&&++e;let o=6-t[i.name].length,r=o>0?0:--e>=0?5:10;for(;(i.quriousPoints-r)/(3*n)>=1&&n<=a;){let t=Math.min(5,~~((i.quriousPoints-r)/(3*n)));for(;--t>=0;)++s[t];o>0&&--o,r+=o>0?0:--e>=0?5:10,++n}}return s}function findExtraArmorSkills(e,t,s={}){for(const i of e){if(i.quriousPoints<5||!i.fodderCount)continue;let e={};for(let s of t[i.name])s["-Skill"]&&(e["-Skill"]=(e["-Skill"]||0)+1);Object.entries(e).forEach((e=>{s[e[0]]=(s[e[0]]||0)+Math.min(e[1],~~(i.quriousPoints/5))}))}return s}})();
//# sourceMappingURL=392.js.map