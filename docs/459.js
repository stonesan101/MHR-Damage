(self.webpackChunkmhrdamage=self.webpackChunkmhrdamage||[]).push([[459],{459:(e,t,o)=>{o.r(t),o.d(t,{getSetBuilds:()=>w,getSetRequirements:()=>b,getSkillReq:()=>v,testBuild:()=>I});var s=o(16),r=o(552),n=o(923);const l=JSON.parse('{"AttackBoost":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"Agitator":[4,3,[[2,2,2,2,16],[2,2,1,1,12]]],"PeakPerformance":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"Resentment":[4,3,[[2,2,2,2,16],[2,2,1,1,12]]],"Resuscitate":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"CriticalEye":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"CriticalBoost":[3,2,[[3,3,0,0,15],[2,2,0,0,10]]],"WeaknessExploit":[3,2,[[3,3,0,0,15],[2,2,0,0,10]]],"LatentPower":[5,4,[[3,3,2,2,20],[2,2,2,2,16]]],"MaximumMight":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"CriticalElement":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"MastersTouch":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"FireAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"WaterAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"IceAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"ThunderAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"DragonAttack":[5,3,[[2,1,1,1,5],[1,1,1,0,3]]],"PoisonAttack":[3,3,[[1,1,1,1,6],[1,1,1,1,6]]],"ParalysisAttack":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"SleepAttack":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"BlastAttack":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"Handicraft":[4,3,[[2,2,2,2,16],[2,2,2,1,12]]],"RazorSharp":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"SpareShot":[3,2,[[2,2,1,1,15],[1,1,1,1,10]]],"ProtectivePolish":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"MindsEye":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"Ballistics":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"Bludgeoner":[3,2,[[3,3,0,0,0],[2,2,0,0,0]]],"Focus":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"PowerProlonger":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"MarathonRunner":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"Constitution":[5,4,[[3,3,2,2,10],[2,2,2,2,8]]],"StaminaSurge":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"Guard":[5,4,[[3,3,2,0,10],[2,2,2,0,8]]],"GuardUp":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"OffensiveGuard":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"CriticalDraw":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"PunishingDraw":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"QuickSheathe":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"Slugger":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"StaminaThief":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"AffinitySliding":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"HornMaestro":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"Artillery":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"LoadShells":[2,2,[[1,1,1,1,4],[1,1,1,1,4]]],"SpecialAmmoBoost":[2,2,[[1,1,1,1,4],[1,1,1,1,4]]],"NormalRapidUp":[3,2,[[2,2,2,1,15],[1,1,1,1,10]]],"PierceUp":[3,2,[[2,2,2,1,15],[1,1,1,1,10]]],"SpreadUp":[3,2,[[2,2,2,1,15],[1,1,1,1,10]]],"AmmoUp":[3,2,[[2,2,2,1,15],[1,1,1,1,10]]],"ReloadSpeed":[3,2,[[3,0,0,0,6],[2,0,0,0,4]]],"RecoilDown":[3,2,[[3,0,0,0,6],[2,0,0,0,4]]],"Steadiness":[3,2,[[1,1,1,1,6],[2,0,0,0,4]]],"RapidFireUp":[3,2,[[3,3,3,0,15],[2,2,2,0,10]]],"DefenseBoost":[7,6,[[2,2,1,1,7],[2,1,1,1,6]]],"DivineBlessing":[3,3,[[2,2,1,1,3],[2,2,1,1,3]]],"RecoveryUp":[3,3,[[2,2,1,1,3],[2,2,1,1,3]]],"RecoverySpeed":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"SpeedEating":[3,3,[[2,2,1,1,6],[2,2,1,1,6]]],"Earplugs":[5,4,[[3,3,3,2,15],[2,2,2,2,12]]],"Windproof":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"TremorResistance":[3,3,[[2,2,1,1,6],[2,2,1,1,6]]],"BubblyDance":[3,3,[[2,2,1,1,6],[2,2,1,1,6]]],"EvadeWindow":[5,4,[[3,3,2,2,10],[2,2,2,2,8]]],"EvadeExtender":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"FireResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"WaterResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"IceResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"ThunderResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"DragonResistance":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"BlightResistance":[3,2,[[2,2,1,1,3],[1,1,1,1,2]]],"PoisonResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"ParalysisResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"SleepResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"StunResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"MuckResistance":[2,2,[[2,0,0,0,2],[2,0,0,0,2]]],"BlastResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"Botanist":[4,4,[[2,1,1,1,0],[2,1,1,1,0]]],"Geologist":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"Partbreaker":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"GoodLuck":[3,2,[[2,2,2,1,12],[1,1,1,1,8]]],"SpeedSharpening":[3,2,[[1,1,1,1,3],[2,0,0,0,2]]],"Bombardier":[3,3,[[1,1,1,1,0],[1,1,1,1,0]]],"Mushroomancer":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"ItemProlonger":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"Wide-Range":[5,4,[[2,2,1,1,5],[1,1,1,1,4]]],"FreeMeal":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"Heroics":[4,3,[[2,2,2,2,12],[2,2,1,1,9]]],"Fortify":[1,1,[[1,1,0,0,1],[1,1,0,0,1]]],"FlinchFree":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"JumpMaster":[1,1,[[1,1,1,0,0],[1,1,1,0,0]]],"CarvingPro":[1,1,[[1,0,0,0,0],[1,0,0,0,0]]],"HungerResistance":[3,3,[[1,1,1,1,3],[1,1,1,1,3]]],"LeapofFaith":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"Diversion":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"MasterMounter":[1,1,[[1,1,0,0,1],[1,1,0,0,1]]],"WirebugWhisperer":[3,3,[[2,2,1,1,9],[2,2,1,1,9]]],"WallRunner":[3,3,[[1,1,1,1,6],[1,1,1,1,6]]],"Counterstrike":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"RapidMorph":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"HellfireCloak":[4,3,[[2,2,2,2,12],[2,2,2,1,9]]],"Coalescence":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"Redirection":[2,1,[[1,1,1,1,6],[1,1,1,0,3]]],"SpiribirdsCall":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"ChargeMaster":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"Foray":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"Tune-Up":[2,1,[[1,1,1,1,8],[1,1,1,0,4]]],"GrinderS":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"BladescaleHone":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"WallRunnerBoost":[1,1,[[1,0,0,0,1],[1,0,0,0,1]]],"Burst":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"ChameleosBlessing":[4,3,[[4,0,0,0,8],[3,0,0,0,6]]],"KushalaBlessing":[4,3,[[4,0,0,0,8],[3,0,0,0,6]]],"TeostraBlessing":[4,3,[[4,0,0,0,8],[3,0,0,0,6]]],"Dragonheart":[4,3,[[4,4,4,4,12],[3,3,3,3,9]]],"BloodRite":[3,2,[[2,2,2,1,12],[1,1,1,1,8]]],"Bloodlust":[3,2,[[3,3,3,3,12],[2,2,2,2,8]]],"Dereliction":[2,1],"Furious":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"MailofHellfire":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"SneakAttack":[3,2,[[2,2,1,1,12],[1,1,1,1,8]]],"AdrenalineRush":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"ElementExploit":[3,2,[[2,2,1,1,9],[1,1,1,1,6]]],"StatusTrigger":[3,2,[[2,2,2,1,9],[1,1,1,1,6]]],"Defiance":[5,4,[[3,1,1,1,10],[2,1,1,1,8]]],"Guts":[2,1,[[0,0,0,0,10],[0,0,0,0,5]]],"Embolden":[3,2,[[2,2,1,1,6],[1,1,1,1,4]]],"IntrepidHeart":[2,1,[[1,1,1,0,4],[1,0,0,0,2]]],"BuildupBoost":[3,2,[[0,0,0,0,12],[0,0,0,0,8]]],"Berserk":[2,1],"Strife":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"WindMantle":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"PowderMantle":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]],"Frostcraft":[3,2,[[0,0,0,0,12],[0,0,0,0,8]]],"DragonConversion":[3,2,[[0,0,0,0,12],[0,0,0,0,8]]],"FrenziedBloodlust":[3,2,[[0,0,0,0,9],[0,0,0,0,6]]]}');const i=(e,t)=>{for(let o=0;o<e.length;++o)if(e[o]>t[o])return!1;return!0};let a=window.info.types;const c=e=>a.decos[e[0]]||a.qurious[e[0]]?[a.decos[e[0]],a.qurious[e[0]]]:e[0]+e[1];let u={};const d=document.getElementById("dropWeapon"),m=document.getElementById("dropWeaponType");let f,h=0,g=0,p=[],k=0,S=new Map,y=!window.location.origin.includes("github"),E=0;const B=e=>{const t=[];for(let o of e.usedSkills)for(let e of o.charm)t.push(`${e[0][0]}: ${e[0][1]} & ${e[1][0]}: ${e[1][1]}`);return t},v=(e=[])=>(document.querySelectorAll(".buildSkills>div>.skill").forEach((t=>{t.selectedIndex>0&&e.push([t.id,t.selectedIndex])})),e),b=(e=window.info.types)=>{const t={},o={};let s=new Set;return window.info.charms.forEach((e=>Object.keys(e.skills).map((e=>s.add(e))))),document.querySelectorAll("#searcherSkills>div>output").forEach((r=>{const n=r.className.split(" ")[1];t[n]=-r.textContent.match(/(?<=Lv-)\d/)[0],o[n]={lvl:e.decos[n]??5,lvl4:e.lvl4[n]??0,qurious:~~((e.qurious[n]??(s.has(n)||e.decos[n]?30:60))/3)};let i=0;5===o[n].lvl&&++i,o[n].qurious>5&&++i,s.has(n)||++i,3===i?(o.setBonus||(o.setBonus={}),o.setBonus[n]=-t[n]):2===i&&(o.charmNeeded||(o.charmNeeded={}),o.charmNeeded[n]=-t[n],o.charmSkillPoints=l[n][0])})),{skills:Object.fromEntries(Object.entries(t).sort(((e,t)=>o[t[0]].lvl-o[e[0]].lvl||o[e[0]].qurious-o[t[0]].qurious))),skillInfo:o}},q=(e,t)=>e>=t?e:t;function R(){for(let e=0;e<5;e++)p[e]=new Worker("./setBuildWorker.js");p.forEach((e=>{e.addEventListener("message",(e=>{--k,e.data.final.sets.length&&(h+=e.data.final.count.combos,E+=e.data.final.count.sets,S.size<100&&(e=>{for(const t of e){if(S.size<100){S.set(S.size,t);const e=B(t);let o='<button type="button" aria-pressed="false" class="equipBuild">Equip Build</button>';const s=Object.keys(t.usedSkills[0].augments);for(let e=0;e<5;e++)o+=`<output class="armorImg ${(0,n.VW)()[e]}"></output><span>${s[e]}</span>`;let r="";e.forEach((e=>{r+=`<option value="${e}">${e}</option>`})),o+=`<output class="armorImg charm"></output><select class="armorCharm" title="charmSkill1">${r}</select>`;const l=document.createElement("div");l.classList.add("setResult"),l.innerHTML=o,document.querySelector(".grid").appendChild(l)}let e=0;for(let t=0;t<=100&&S.has(t);t++)e+=S.get(t).count;document.getElementById("setOutput").textContent=`Displayed ${Math.min(100,S.size)} Builds / ${e.toLocaleString()} Combinations`}})(e.data.final.sets));let t=e.data.final.stats;for(let e=0;e<4;e++)u.remainingSlots[e]=q(u.remainingSlots[e]||0,t.remainingSlots[e]);for(let e=0;e<5;e++)u.quriousSkills[e]=q(u.quriousSkills[e]||0,t.quriousSkills[e]);for(const[e,o]of Object.entries(t.armorSkills))u.armorSkills[e]=q(u.armorSkills[e]||0,o);y||e.target.terminate(),k||((e=>{let t="";e.forEach((e=>{0!=e[1]&&(t+=`<button textContent="${e[0]}">${e[0].replace(/(?<=[a-z])([A-Z])(?![A-Z])/g," $1")} +${+e[1]}</button>`)})),document.getElementById("temp")&&document.getElementById("temp").remove(),document.querySelector(".extraSkills").innerHTML+=t,document.getElementById("extraOutput").textContent=`Found ${E.toLocaleString()} Builds / ${h.toLocaleString()} Combinations`,window.location.href.includes("github")||(console.log((performance.now()-g)/1e3),console.log(S))})(((e=window.info.types)=>{const{skills:t}=b(),{armorSkills:o,remainingSlots:s,quriousSkills:r}=u;for(let t=0;t<4;++t)if(s[t])for(const[r,n]of Object.entries(e.decoLevels[t]))o[r]=Math.max(o[r]||0,n*s[t]);Object.entries(e.qurious).forEach((([e,t])=>{r[~~(t/3)-1]&&(o[e]=Math.max(o[e]||0,r[~~(t/3)-1]))}));const n=[];return Object.entries(o).forEach((([o,s])=>{if(isNaN(o))if(t[o]+ +s>0&&e.maxLevel[o]>0){const r=(e.maxLevel[o]||window.info.skills[o].length-1)+t[o];n.push([o,Math.min(+s,r)])}else t[o]||!e.maxLevel[o]&&!window.info.skills[o]||n.push([o,Math.min(+s,e.maxLevel[o]||window.info.skills[o].length-1)])})),n.sort()})()),S.has("finished")||(document.querySelector(".grid").innerHTML+=f,f="",S.set("finished",!0)),h||(document.getElementById("setOutput").textContent="No Results Found",document.querySelectorAll(".grid>div").forEach((e=>e.remove()))))}))}))}const w=(e=10)=>{if((k||y)&&(g=performance.now(),p.length))for(let e of p)e.terminate();k=5,R();const t=b();t.charmSlots=window.info[m.value].weapons[d.value].decos.slice(),document.querySelectorAll(".charmSlot").forEach((e=>{e.selectedIndex>0&&++t.charmSlots[e.selectedIndex-1]})),t.theseCharms=(e=>{let t={qurious:{},standard:{},decos:{},charmNeeded:{}};window.info.charms.forEach((o=>{if(Object.entries(o.skills).some((t=>(e[t[0]]||1)+t[1]>0)))return;if(!1===o.key){let e=Object.keys(o.skills);const s=c(e),r=c(e),[n,l]=Array.isArray(s)?[r,s]:[s,r];return t.charmNeeded[n]||(t.charmNeeded[n]={}),t.charmNeeded[n][l]||(t.charmNeeded[n][l]=[]),void t.charmNeeded[n][l].push(o.skills)}let s,r,n="standard";Array.isArray(o.key)&&4===o.key.length?(s=[...o.key[0].slice(0,4),o.key[2]],r=o.key[0].slice(4),n="decos"===o.key[3]?"decos":"qurious"):(s=o.key.slice(0),r=s.pop()),t[n][s]||(t[n][s]={}),t[n][s][r]||(t[n][s][r]=[]),t[n][s][r].push(o.skills)}));for(let e in t)for(let o in t[e])t[e][o]=Object.values(t[e][o]);const o={charmNeeded:t.charmNeeded};for(const e in t){const s=Object.entries(t[e]).map((e=>[e[0].split(","),e[1]]));s.sort((([e],[t])=>t.join("")-e.join("")));let r=[],n=[];e:for(let e of s){for(let t=0;t<n.length;t++)if(i(e[0],n[t][n[t].length-1])){n[t].push(e[0]),r[t].push(e[1]);continue e}n[n.length]=[e[0]],r[r.length]=[e[1]]}console.log(n),o[e]=r}return console.log(o),o})(t.skills),t.armors=function(e,t,o){let s=JSON.parse(JSON.stringify(window.info.armor));const r={helm:[],waist:[],chest:[],arm:[],leg:[]},l=[2.5,4.25,4.25,7];for(let e=0;e<5;++e)(0,n.VW)().forEach((e=>{s[e]=s[e].filter((e=>"MaleOnly"!==e.sex))}));return(0,n.VW)().forEach((n=>{s[n].forEach((s=>{if(!s)return;const i={},a=s.skills;if(13!==s.quriousTable){let e,t=-1;for(let[o,r]of Object.entries(s.decoAugments)){if(++t,o>3)break;0==o||3===o&&t<2||(e=[+o,r[1]])}if(e){const[t,o]=e;i.decos=o,i.augs=[{"+Slots":-6*+t}],i.quriousPoints=s.quriousPoints-6*t}}else 13===s.quriousTable&&(i.decos=[1,1,0,1],i.quriousPoints=0,i.augs=[{def:5},{def:5},{def:5},{def:5},{"+Slots":-18},{"+Slots":-12}]);if(i.augs||(i.decos=s.decos,i.augs=[],i.quriousPoints=s.quriousPoints),e.StormSoul>3){const e=4===document.getElementById("StormSoul").selectedIndex?1:2;for(const o of a)t[o].qurious<6&&(a[o]+=e)}i.fodderSkills=[],i.fodderCount=0;let c=i.decos[0]*l[0]+i.decos[1]*l[1]+i.decos[2]*l[2]+i.decos[3]*l[3];for(const[o,r]of Object.entries(a))if(e[o])e[o]?((t[o].setBonus||t[o].charmNeeded)&&(c+=15*Math.min(-1*e[o],a[o])),c+=Math.min(-e[o],a[o])*(20===t[o].qurious?4:t[o].qurious/3)):13===s.quriousTable||i.fodderCount||(i.fodderCount=0);else{i.fodderCount+=r;for(let e=0;e<r;e++)i.fodderSkills.push(o)}if(13===s.quriousTable)i.unBloatedPoints=0,i.armorRating=c;else{let e=[],t=3;for(;t--;)i.augs[t]?e=e.concat(i.augs[0]):i.fodderCount-t>0?(e.push({"-Skill":i.fodderSkills.pop()}),i.quriousPoints+=10):(e.push({"-Def":5}),i.quriousPoints+=5);i.augs=e,i.unBloatedPoints=~~(i.quriousPoints/3),i.armorRating=c,i.armorRating=c+i.unBloatedPoints}const u=(e,t=!0)=>{i.name=s.name,i.type=n,i.skills=s.skills,t?(r[n].pop(),r[n].splice(e,0,i)):r[n].push(i)};for(let e=0;e<r[n].length;e++)if(i.armorRating>r[n][e].armorRating)return void u(e);r[n].length<o&&u(r[n].length-1,!1)}))})),Object.values(r).forEach((t=>t.forEach((t=>{t.skillLimitation=5-Object.keys(t.skills).length-(6-t.augs.length),t.requestedSkills=Object.keys(t.skills).filter((t=>e[t])),t.skillsRemovedCount=t.fodderCount<3?t.fodderCount:3,t.startingQuriousPoints=t.quriousPoints,delete t.armorRating})))),r}(t.skills,t.skillInfo,e),t.skillInfo={charmNeeded:t.skillInfo.charmNeeded,charmSkillPoints:t.skillInfo.charmSkillPoints,setBonus:t.skillInfo.setBonus,setLimiter:4-document.getElementById("skillsLimit").selectedIndex},t.skills=Object.entries(t.skills).sort(((e,t)=>window.info.types.qurious[e[0]]-window.info.types.qurious[t[0]]));let o=t.armors.helm.splice(0),s=~~(o.length/5);S.clear();for(const e of p)t.armors.helm=o.splice(0,s),e.postMessage(t);f="",document.getElementById("setReturn").classList.remove("augInvis"),document.querySelectorAll(".extraSkills>button").forEach((e=>e.remove())),document.getElementById("temp")&&document.getElementById("temp").remove(),document.querySelector(".extraSkills").innerHTML+="<P2 id='temp' style='font-size:18px !important; height:15em !important;'>Searching...</P2>",document.getElementsByClassName("grid")[0].innerHTML="",u={remainingSlots:[0,0,0,0],armorSkills:{},quriousSkills:[0,0,0,0,0]},h=0,E=0};let C=0,P="";document.addEventListener("keypress",(e=>{e.key===["t","e","s","t"][Math.min(3,C)]&&++C<3||("Enter"===e.key&&C>=3?(I("f"!==P),P="",C=0):/t|f/.test(e.key)&&C>=3?P=e.key:C<3&&(C=0))}));const I=(e=!0)=>([["PeakPerformance",3],["Coalescence",3],["CriticalEye",7],["CriticalBoost",3],["MaximumMight",3],["RecoilDown",3],["ReloadSpeed",3],["RapidFireUp",3],["PierceUp",3],["Burst",1],["Agitator",5],["AttackBoost",7],["AmmoUp",2],["SpareShot",3],["WeaknessExploit",3],["Tune-Up",1],["Bloodlust",1]].forEach((e=>(0,r.Nb)(e[0],e[1]))),w(15),S);document.getElementById("startSearch").addEventListener("click",(()=>w(10))),document.getElementById("normalSearch").addEventListener("click",(()=>w())),document.getElementById("extendedSearch").addEventListener("click",(()=>w(15))),document.querySelector(".grid").addEventListener("mousedown",(e=>{if("BUTTON"!==e.target.tagName)return;const t=Object.values(document.querySelectorAll("div.grid > div.setResult")).indexOf(e.target.parentElement);if(!S.has(t))return;const o=S.get(t);let n=e.target.parentElement.lastElementChild.selectedIndex,l=0;for(let e of o.usedSkills){if(n<e.charm.length)break;++l,n-=e.charm.length}let i=o.usedSkills[l],a=i.charm[n];if((0,s.dj)(a),0!==n){let e=Object.fromEntries(i.charm[0]);if(e[a[0][0]]){let t=Math.min(e[a[0][0]],a[0][1]);e[a[0][0]]-=t,a[0][1]-=t}if(e[a[1][0]]){let t=Math.min(e[a[1][0]],a[0][1]);e[a[1][0]]-=t,a[1][1]-=t}for(let[t]of a)if(a[1])for(let o of i.decos){if(!a[1])break;if(o[0]===t&&o[1]<=a[1])for(let t in e)if(e[t]>=o[1]){let s=t;o[0]=s,e[s]-=o[1],a[1]-=o[1];break}}for(let[t,o]of a){if(!o)continue;let s=[];for(let e of Object.values(i.usedSkills.augments))s=s.concat(e);for(;o-- >0;){let r=s.find((e=>e["-Skill"]===t));r||console.log("error finding augment to replace");for(let t in e)if(e[t]>0){r["-Skill"]=t,--e[t],--o;break}}}}(0,s.qy)(i.augments),(0,s.Cj)((0,s.G_)(i.decos)),document.getElementById("setReturn").classList.add("augInvis"),(0,r.TG)(),document.querySelectorAll(".extraSkills>button").forEach((e=>e.remove())),document.querySelectorAll(".grid>div").forEach((e=>e.remove())),(0,s.to)(),(0,r.TG)(),y&&console.log(JSON.parse(JSON.stringify(i))),S.clear()}))}}]);