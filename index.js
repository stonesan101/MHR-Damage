const _0x3d07b = _0x18d6;
(function(_0x4f5e07, _0x5dc341) { const _0x269cc3 = _0x18d6,
        _0x132eb3 = _0x4f5e07(); while (!![]) { try { const _0x3a572c = parseInt(_0x269cc3(0xb2)) / 0x1 + parseInt(_0x269cc3(0x257)) / 0x2 * (-parseInt(_0x269cc3(0xbf)) / 0x3) + parseInt(_0x269cc3(0x181)) / 0x4 * (-parseInt(_0x269cc3(0x187)) / 0x5) + parseInt(_0x269cc3(0x18b)) / 0x6 + -parseInt(_0x269cc3(0x14c)) / 0x7 + -parseInt(_0x269cc3(0xa7)) / 0x8 * (-parseInt(_0x269cc3(0x138)) / 0x9) + parseInt(_0x269cc3(0x174)) / 0xa * (parseInt(_0x269cc3(0x113)) / 0xb); if (_0x3a572c === _0x5dc341) break;
            else _0x132eb3['push'](_0x132eb3['shift']()); } catch (_0x17d905) { _0x132eb3['push'](_0x132eb3['shift']()); } } }(_0x6f70, 0x85b65));
let keyDown = 0x0,
    lastEvent = '',
    comboTracker = [];

function _0x6f70() { const _0x52b55d = ['clipboardData', 'Number', 'efe', 'prototype', 'tbody#', 'noSharpMod', 'spawn', 'monTable', 'addClass', 'ChainCritBowGun', '\x20inputContainer', 'Valstrax\x20Soul', ':\x20Raw\x20+', 'siblings', 'Sharp\x20+', 'div.menu', 'phialType', 'preventDefault', 'AmmoUp', 'HerculesDraw', 'baseCharge', 'DualBlades', 'tbody', 'slice', 'parent', 'blur', 'critBoost', 'Lv-', '.rampageAug', 'orange', 'HPScale', 'inputComboRepeat', 'Dereliction', 'includes', '(?<=skills=)(.*?)(?=&)', 'meleeContainer', 'clipboard', '/json/types.json', 'Combo\x20Damage', 'ElementalAttack', 'min', 'type', 'https://stonesan101.github.io/MHR-Damage', 'ticsAdjust', 'shotsPerMin', 'Silencer:\x20Recoil\x20Down\x20+1', 'RPM\x20Gain', 'hitsOfSharp', 'target', 'Close\x20Range+', 'tagName', 'Spawn\x20Area\x20', 'augPRM', '2:\x20Ele+15', 'output.elementalAug', 'Hammer', 'augEFR', 'Aff+', 'http://localhost:5500', 'display', 'rawCrit', 'text', 'No\x20Change', 'Shot', 'output.attackAug', 'GreatSword', 'blunt', 'Spare\x20Shot\x20+5%', 'NormalRapidUp', 'isRapidFire', '.augToggle', 'Lv-2\x20Charge-1', 'stopImmediatePropagation', 'host', '/json/ammo.json', 'Toadversary', 'input', 'NoEleBuff', 'IgnoreHZV', 'PRM', 'rampage', 'Artillery', 'Dragon', 'skills', '#divHR', 'css', '2:\x20Ele+12', '1:\x20Ele\x20+\x207', 'attackName', 'Normal\x20+30%\x20Spread\x20+20%\x20Pierce\x20+10%\x20Recoil\x20-2', 'Kushala\x20Daora\x20Soul', '2:\x20Raw\x20+20', '2sPoRQC', 'Elemental\x20Exploit', 'Agitator', 'efr', 'map', 'remove', '\x20/\x20', 'Element\x20Exploit', 'sever', 'Attack\x20Name', 'inputComboRepeat\x20hitsOfSharpInputs\x20inputs', '#weaponRampage0', 'EFR', 'test', 'MailofHellfire', 'Lv-1\x20Charge-1', 'Element\x20Phial', 'querySelector', 'Combo', 'outerHTML', 'reduce', 'frames', '2:\x20Raw\x20+30', 'input.check', 'output.affinityAug', 'enrage', 'Paste\x20TA\x20Wiki\x20Set\x20Builder\x20Link\x20Here', 'ElementalExploit', 'red', 'ChainCritBow', 'tableRow', '/json/quest.json', 'attacks', 'shotsPerGain', 'Lv-2\x20Charge-2', 'splice', '\x20+\x20', 'meleeTable', 'empty', 'select#dropQuest', 'Body>tr>td:nth-child(2)', 'location', '.classSpecific', 'textContent', 'Marksman', 'td#b', 'efrMulti', '/json/', 'json', '17432QxKoqR', 'Power:\x20Raw\x20+\x2012.5%', 'rawMV', 'children', 'DemonMode', 'Seconds\x20\x0a\x20To\x20Kill', 'log', 'Rampage-Up\x20Skill', 'rampageDecos', 'output.rampageAug', 'options', '843112fUuAuO', '.thisSkill:not(.', 'some', 'aff', 'attr', 'getElementById', 'CriticalElement', 'display:none', 'Procs\x20Per', 'blue', 'Table', '3:\x20Ele+12', '#monTable\x20>\x20tr:nth-child(2)\x20>\x20td:nth-child(1)', '2917110BFprVM', '/json/skills.json', 'inc', 'Chance\x2040%\x20Raw+10%\x20EFR\x20+4%', 'event', '.Qurious', 'OPTGROUP', 'ChainCrit', '#previousWeapon', 'label.check', 'className', 'Bow', 'hasClass', 'value', 'ticsPer', 'Sharpness', 'values', 'Barrels', 'class', 'reloadSpeed', '#monTable', 'Sharp', '0.00%', '.Shot', '3:\x20Raw\x20+\x2020%\x20EFR\x20+\x2016%', 'Guard-Up', 'Clip\x20Size', '/json/rampage.json', '#HR', 'purple', 'SerenePose', 'Lv-2\x20Charge-3', 'augVis\x20augInvis', 'baseAff', 'dropWeaponType', 'keypress', '.menu', 'PEM', 'yellow', 'usableAmmo', 'Lv-1\x20Charge-3', 'none', 'Gunlance', '#MR', 'MindsEye', 'select.skill', 'mousedown', 'bowShot', 'Chance\x2020%\x20Raw+10%\x20EFR\x20+2%', 'option', 'Elemental\x20Phial', 'toString', 'createTextNode', 'append', 'quest', 'rampageSlots', '3:\x20Raw\x20+30', 'Lv-3\x20Charge-3', '#WeaknessExploit', 'parse', 'Crit', 'forEach', 'push', 'spareShot', 'ChargeMaster', 'replaceME', 'replaceWith', 'call', '$1,', 'ArchdemonMode', 'invis', 'mhrice', 'appendChild', 'double', 'originalEvent', 'baseRaw', 'state', 'shellingType', 'change', 'eleNon', '.skill', '#previousWeaponType', 'monster', 'Spare\x20Shot\x20+10%', '1045055XknLtm', 'N\x20/\x20A', 'BRM', 'weapon', 'length', 'BowChargePlus', 'Player\x20Dmg', 'eleMV', 'tableRowMelee', 'Draw', '.comboHits', '#augToggle', 'ele', 'each', 'ammo', 'Sever', 'shotsPerMinBase', '#players', 'AmmoUP', 'MastersTouch', 'EFE', '-46%', 'width', '.a:not(.gray)', 'BowCoating', 'checked', 'BEM', 'FeralDemonMode', 'stats', 'coatings', 'Head', 'Brutal\x20Strike', 'all', 'createElement', 'Chance\x2020%\x20Raw\x20\x20+\x205%\x20EFR\x20+1%', 'SpreadUp', 'concat', '4086myuWOK', 'keys', '3:\x20Ele+15', '2:\x20Raw\x20+25', 'Total', '\x20Lv', 'DemonDrug', 'Hellion\x20Mode', 'Shield:\x20Guard\x20Up', '----', 'StrongarmStance', 'select', 'InsectGlaive', 'Impact\x20Phial', 'innerHTML', 'filter', 'hasOwnProperty', 'max', 'UpperCrit', '/json/monster.json', '3659502peSDQK', 'toFixed', 'output.augLabel', 'part', '#sharpnessContainer', 'Lance', 'single', '2:\x20Sticky+10%\x20Wyvern+15%', 'ChargeBlade', '[1-5]', '1:\x20Raw\x20+\x2010%\x20EFR\x20+\x2010%', 'Build\x20Succsefully\x20Loaded', '.json', 'augPEM', 'Ele\x20Pierce', 'Ele', 'Spare\x20Shot\x20+20%', 'Bombardier', '#comboCountContainer', 'val', 'Current\x20RPM', '#ElementalReload', '2:\x20Ele\x20+\x208', 'show', 'armor', 'eleCrit', 'Reload', '|Lv', 'Stat', 'output', 'reloadFrames', 'match', 'path', 'Power', 'Water', '\x22\x20class=\x22inputButton\x20dec\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20>&#8681</button><button\x20type=\x22button\x22\x20aria-pressed=\x22false\x22\x20id=\x22', 'keyup', 'LightBowGun', 'RapidFireUp', 'parentNode', '100faZRLA', 'Qurious', 'dec', '.demon:not(#', 'ChainCritStandard', 'rank', 'white', 'Silencer', 'Magnamalo\x20Soul', 'Rampage', '.melee', 'sort', 'getSkills', '3760424CQtvAf', 'ChargeLevel', 'entries', 'None', 'thead', 'indexOf', '5HkmSij', 'reverse', 'Element\x20Phial|Elemental\x20Phial', 'CriticalBoost', '1203114hqxRuJ', 'stringify', 'baseEle', 'inputButton', 'parseFloat', 'impShieldCharge', 'split', '3:\x20Raw\x20+35', 'NoSneak', 'weapons', 'Long:\x20Raw\x20+\x205%', 'Effective', 'tableRowRanged', 'ammoIncrease', 'recoilFrames', '#dropEnraged', 'click', 'Min', 'types', 'style', '.inputs', 'Lv2\x20&\x20Ele\x20Ammo', 'key', 'Sticky|Wyvern', 'Base', 'isUsed', '.augLabel', '#rampageResult', 'Normal|Rapid|Pierce|Spread', 'join', 'lastIndexOf', 'replace', '#BowChargePlus', 'Dulling\x20Strike', 'toUpperCase', 'ChainCritDualBlades', 'SneakAttack', 'handicraft', '.inputComboRepeat', 'display:\x27\x27', 'setAttribute', 'then', 'SwordNShield', 'paste', 'vis\x20invis', 'recoil', 'Raw', '#taWikiSetBuilder', 'selectedIndex', 'querySelectorAll', 'Body', 'True', 'Thunder', 'Lv-1\x20Charge-2', 'shellingLevel', 'SpiritGauge', '.inputs:not(\x22.inputComboRepeat\x22)', 'Chance\x2060%\x20Raw\x20\x20+\x205%\x20EFR\x20+3%\x20', 'HuntingHorn', 'Fire', 'eleType', 'toggleClass', '%\x20EFR\x20+', '#statsHead\x20>\x20tr\x20>\x20th:nth-child(4)', 'hide', 'Enraged', '3:\x20Raw\x20+25', '4:\x20Raw\x20+\x2025%\x20EFR\x20+\x2017%', 'getData', ':visible', 'savageAxe', '<option></option>', 'fromEntries', 'RecoilDown', 'Lv3\x20&\x20Dragon\x20Ammo', 'Lv-3\x20Charge-2', 'Recoil', 'Long', 'hzv', '#dropQuest', 'clipSize', 'top', '>output', 'input#taWikiSetBuilder', '1:\x20Raw\x20+20', 'RPM\x20Base', '-93%', 'ctrlKey', 'reload', 'BowgunBarrel', 'keys2', 'raw', 'rawNon', 'recoilSpeed', 'green', 'Max', 'Aff\x20+\x20', 'Combo\x20skill\x20', 'Ammo\x20Type', 'SpareShot', 'Blunt', '.scroll', 'table', '1:\x20Ele\x20+\x205', '#dropWeapon', 'DerelictionSourse', 'isNaN', 'MailofHellfireSourse', 'html', 'setSelectionRange', 'PierceUp', 'dps'];
    _0x6f70 = function() { return _0x52b55d; }; return _0x6f70(); }
const weaponType = document['getElementById'](_0x3d07b(0xe1)),
    weaponTypes = [
        [_0x3d07b(0x171)],
        [_0x3d07b(0x23c)],
        ['ChargeBlade'],
        [_0x3d07b(0x144)],
        [_0x3d07b(0x1b5)],
        [_0x3d07b(0x210)],
        ['SwitchAxe'],
        ['LongSword'],
        [_0x3d07b(0x151)],
        ['HeavyBowGun'],
        ['Bow'],
        [_0x3d07b(0x1c5)],
        [_0x3d07b(0xe9)],
        [_0x3d07b(0x232)]
    ],
    [lbg, gs, cb, ig, sns, db, sa, ls, lance, hbg, bow, hh, gl, ham] = weaponTypes[_0x3d07b(0x1a8)]()[_0x3d07b(0x191)](','),
    baseURL = /localhost/ [_0x3d07b(0x264)](window[_0x3d07b(0x9f)][_0x3d07b(0x244)]) ? _0x3d07b(0x235) : _0x3d07b(0x225),
    info = {};
async function getInfo() { const _0x12e5a2 = _0x3d07b; try { WeaponTypeSelect(); const _0x20bd83 = fetch(baseURL + _0x12e5a2(0x14b))[_0x12e5a2(0x1b4)](_0x5561a5 => _0x5561a5['json']())['then'](_0x2a83eb => { info['monster'] = _0x2a83eb, MonsterSelect(), PartSelect(); }),
            _0x5989c9 = fetch(baseURL + _0x12e5a2(0xda))[_0x12e5a2(0x1b4)](_0x1077bd => _0x1077bd['json']())[_0x12e5a2(0x1b4)](_0xc10337 => info[_0x12e5a2(0x24b)] = _0xc10337),
            _0x3ade90 = fetch(baseURL + _0x12e5a2(0x220))[_0x12e5a2(0x1b4)](_0x177f21 => _0x177f21[_0x12e5a2(0xa6)]())[_0x12e5a2(0x1b4)](_0x98b450 => info[_0x12e5a2(0x19d)] = _0x98b450),
            _0x366e89 = fetch(baseURL + _0x12e5a2(0xc0))[_0x12e5a2(0x1b4)](_0x4f77f6 => _0x4f77f6[_0x12e5a2(0xa6)]())[_0x12e5a2(0x1b4)](_0x1bc4cf => info[_0x12e5a2(0x24e)] = _0x1bc4cf),
            _0x22a36c = fetch(baseURL + _0x12e5a2(0x95))[_0x12e5a2(0x1b4)](_0x559af0 => _0x559af0[_0x12e5a2(0xa6)]())[_0x12e5a2(0x1b4)](_0x8f2a1c => { const _0xfeb616 = _0x12e5a2;
                info[_0xfeb616(0xf5)] = _0x8f2a1c, QuestSelect(), HealthSelect(); }),
            _0x5c4400 = fetch(baseURL + '/json/LightBowGun.json')['then'](_0x3e0ee4 => _0x3e0ee4['json']())[_0x12e5a2(0x1b4)](_0x5100dc => { const _0x48406e = _0x12e5a2;
                info[_0x48406e(0x171)] = _0x5100dc; }),
            _0x605f56 = fetch(baseURL + _0x12e5a2(0x245))['then'](_0x558981 => _0x558981[_0x12e5a2(0xa6)]())['then'](_0x1ad6b7 => info[_0x12e5a2(0x121)] = _0x1ad6b7);
        Promise[_0x12e5a2(0x133)]([_0x5c4400, _0x3ade90, _0x5989c9])['then'](() => { WeaponSelect(), RampageSelect(); }), await Promise[_0x12e5a2(0x133)]([_0x20bd83, _0x3ade90, _0x366e89, _0x22a36c, _0x5c4400, _0x605f56, _0x5989c9])['then'](_0x957b20 => { const _0x8108c4 = _0x12e5a2;
            console[_0x8108c4(0xad)](Object['entries'](info)), classChange(), MonChart(); })[_0x12e5a2(0x1b4)](() => { DataCompile(window['event']); }), baseURL === _0x12e5a2(0x235) && (weaponTypes['push'](_0x12e5a2(0x164)), weaponTypes[_0x12e5a2(0xfd)](_0x12e5a2(0x106)), weaponTypes[_0x12e5a2(0xfd)]('charms')), weaponTypes[_0x12e5a2(0x212)](0x1)['forEach'](_0x45e7e7 => { const _0x3ee2cf = _0x12e5a2;
            fetch(baseURL + _0x3ee2cf(0xa5) + _0x45e7e7 + _0x3ee2cf(0x158))[_0x3ee2cf(0x1b4)](_0x191581 => _0x191581[_0x3ee2cf(0xa6)]())[_0x3ee2cf(0x1b4)](_0x3e1bbc => info[_0x45e7e7] = _0x3e1bbc); }); } catch (_0x27d6f2) { console['log'](_0x27d6f2); } }
const ugh2 = getInfo();

function DataCompile(_0x52e002 = window[_0x3d07b(0xc3)]) { const _0x319f33 = _0x3d07b; /BowGun/ [_0x319f33(0x264)](weaponType['value']) ? RangedDPS(_0x52e002): MeleeDPS(_0x52e002); }

function RangedDPS(_0x4502a2) { const _0x31c81e = _0x3d07b;
    $(_0x31c81e(0x231))[_0x31c81e(0x15f)](0x0), elementalResult[_0x31c81e(0xcc)] = '+0', $('output.sharpnessAug')[_0x31c81e(0x15f)](0x0), sharpnessResult[_0x31c81e(0xcc)] = '+0'; const _0x55fa9c = [],
        _0x22c177 = []; let _0x31b44a = {},
        _0x511d79 = !![],
        _0x43cd96 = getQuriousAugs();
    ['Shot', _0x31c81e(0x122), _0x31c81e(0x1ef), 'IgnoreHZV']['forEach'](_0x298c46 => _0x43cd96[_0x298c46] = initialStats(_0x43cd96, _0x298c46)), Object[_0x31c81e(0xcf)](getUsedAttacks())['forEach'](function(_0x4957cc) { const _0x89f174 = _0x31c81e; let _0x4a2b85 = {..._0x43cd96[_0x4957cc[_0x89f174(0x224)]], ..._0x4957cc };
        _0x4a2b85 = getDependantSkills(_0x4a2b85), _0x4a2b85 = GetRemainingSkills(_0x4a2b85), _0x4a2b85 = DamageCalculations(_0x4a2b85);! /Demon|Armor|Wyvernblast|Glide|Wyvernsn|Guard/ [_0x89f174(0x264)](_0x4a2b85['attackName']) ? _0x31b44a = calculateAmmoFrames(_0x4a2b85): _0x31b44a[_0x89f174(0x226)] = 0x1; const _0x48b3d0 = ~~((~~_0x4a2b85[_0x89f174(0x25a)] + ~~_0x4a2b85[_0x89f174(0x1fd)]) * _0x31b44a[_0x89f174(0x226)]),
            _0x1d6b8c = ~~(~~_0x4a2b85[_0x89f174(0x237)] + ~~_0x4a2b85[_0x89f174(0x165)]),
            _0x4ddbc6 = ~~(~~_0x4a2b85[_0x89f174(0x1e7)] + ~~_0x4a2b85[_0x89f174(0x10e)]); let _0x396fda = formatNumbers(~~(0.99 + $('#health')[_0x89f174(0x15f)]() / _0x48b3d0)),
            _0x1cb3ea = /Stic|Slic/ [_0x89f174(0x264)](_0x4a2b85[_0x89f174(0x253)]) ? formatNumbers(0x5 + ~~(0.99 + 0x3c / _0x31b44a[_0x89f174(0x227)] * _0x396fda)) : formatNumbers(~~(0.99 + 0x3c / _0x31b44a[_0x89f174(0x227)] * _0x396fda)); const _0x54579c = [~~_0x4a2b85['rawNon'] + _0x89f174(0x25d) + ~~_0x4a2b85[_0x89f174(0x237)]],
            _0x3d1f85 = [~~_0x4a2b85[_0x89f174(0x10e)] + _0x89f174(0x25d) + ~~_0x4a2b85[_0x89f174(0x165)]],
            _0x2b03d6 = [~~_0x4ddbc6 + _0x89f174(0x25d) + ~~_0x1d6b8c],
            _0x570499 = [_0x4a2b85[_0x89f174(0x253)], _0x54579c, _0x3d1f85, _0x2b03d6, _0x48b3d0, _0x31b44a[_0x89f174(0x97)] !== ('NaN%' || _0x89f174(0xd5)) ? _0x31b44a['shotsPerGain'] : 'No\x20Gain', _0x396fda = /(\d0\d{3}|[2-9]\d{3})/ [_0x89f174(0x264)](_0x396fda) ? _0x89f174(0x114) : _0x396fda, _0x1cb3ea = /(\d0\d{3}|[2-9]\d{3})/ [_0x89f174(0x264)](_0x1cb3ea) ? _0x89f174(0x114) : _0x1cb3ea];
        _0x55fa9c[_0x89f174(0xfd)](_0x570499); const _0x4bf13d = [_0x4a2b85['attackName'], _0x4a2b85[_0x89f174(0xa9)], _0x31b44a[_0x89f174(0xd2)] !== undefined ? _0x31b44a[_0x89f174(0xd2)] : 'N\x20/\x20A', _0x31b44a[_0x89f174(0x1e8)] !== undefined ? _0x31b44a[_0x89f174(0x1e8)] : 'N\x20/\x20A', isNaN(_0x31b44a[_0x89f174(0x1db)]) ? _0x89f174(0x114) : _0x31b44a['clipSize'], _0x4a2b85[_0x89f174(0xcd)] + 0x1, _0x31b44a[_0x89f174(0x123)] !== undefined ? _0x31b44a[_0x89f174(0x123)] : _0x89f174(0x114), _0x31b44a[_0x89f174(0x227)] !== undefined ? _0x31b44a[_0x89f174(0x227)] : 'N\x20/\x20A'];
        _0x22c177[_0x89f174(0xfd)](_0x4bf13d); if (_0x511d79) { const _0x431b0f = [
                [_0x89f174(0x168), _0x89f174(0x1b9), 'Affinity', _0x89f174(0x15a)],
                [_0x89f174(0x1a3), ~~_0x4a2b85[_0x89f174(0x10a)], ~~_0x4a2b85['baseAff'], ~~(0x16 * (0x1 + _0x4a2b85[_0x89f174(0x1e6)] / 0x64))],
                ['True', ~~_0x4a2b85['raw'], ~~(_0x4a2b85[_0x89f174(0xb5)] * 0x64), ~~((0x16 * _0x4a2b85[_0x89f174(0x12d)] + _0x4a2b85['BE']) * (0x1 + _0x4a2b85[_0x89f174(0x1e6)] / 0x64))],
                [_0x89f174(0x13c), ~~(_0x4a2b85['raw'] * getCritBoost(_0x4a2b85[_0x89f174(0xfb)], _0x4a2b85[_0x89f174(0xb5)])['PRM'] * _0x4a2b85[_0x89f174(0x24a)] * _0x4a2b85[_0x89f174(0x22f)]), ~~(_0x4a2b85['aff'] * 0x64), ~~((0x16 * _0x4a2b85[_0x89f174(0x12d)] + _0x4a2b85['BE']) * (0x1 + _0x4a2b85['raw'] / 0x64) * _0x4a2b85[_0x89f174(0xe4)] * _0x4a2b85[_0x89f174(0x159)] * getCritEle(_0x4a2b85[_0x89f174(0xfb)], _0x4a2b85[_0x89f174(0xb5)])[_0x89f174(0xe4)])],
                [_0x89f174(0x196), ~~(_0x4a2b85[_0x89f174(0x1e6)] * getCritBoost(_0x4a2b85[_0x89f174(0xfb)], _0x4a2b85[_0x89f174(0xb5)])[_0x89f174(0x263)] * _0x4a2b85['PRM'] * _0x4a2b85['augPRM']), ~~(_0x4a2b85[_0x89f174(0xb5)] * 0x64), ~~((0x16 * _0x4a2b85[_0x89f174(0x12d)] + _0x4a2b85['BE']) * (0x1 + _0x4a2b85['raw'] / 0x64) * _0x4a2b85[_0x89f174(0xe4)] * _0x4a2b85[_0x89f174(0x159)] * getCritEle(_0x4a2b85[_0x89f174(0xfb)], _0x4a2b85[_0x89f174(0xb5)])[_0x89f174(0x127)])]
            ];
            BuildDamageTable(_0x431b0f, _0x89f174(0x12f), _0x4502a2), _0x511d79 = ![]; } }), _0x55fa9c[_0x31c81e(0x99)](0x0, 0x0, [_0x31c81e(0x1ed), _0x31c81e(0x1b9), _0x31c81e(0x15b), 'Total', 'Effective', _0x31c81e(0x229), 'Shots\x20\x0a\x20To\x20Kill', _0x31c81e(0xac)]), BuildDamageTable(_0x55fa9c, 'dps', _0x4502a2), _0x22c177[_0x31c81e(0x99)](0x0, 0x0, [_0x31c81e(0x1ed), _0x31c81e(0xa9), _0x31c81e(0x166), _0x31c81e(0x1d7), _0x31c81e(0xd9), _0x31c81e(0xba), _0x31c81e(0x1e0), _0x31c81e(0x160)]), BuildDamageTable(_0x22c177, 'ammo', _0x4502a2); }

function MeleeDPS(_0x55c5ff) { const _0x55cdef = _0x3d07b,
        _0x4ec0dd = [
            [_0x55cdef(0x269), _0x55cdef(0x260), 'MV', _0x55cdef(0x1b9), _0x55cdef(0x15b), 'Total', _0x55cdef(0x196)]
        ]; let _0x38780c = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
        _0x3b1e61 = -0x1,
        _0x2d6309 = {},
        _0x285f94 = {}; const _0x167b2f = Sharpness[_0x55cdef(0x1bb)]; let _0x5c97f4 = getQuriousAugs();
    [_0x55cdef(0x23a), _0x55cdef(0x122), _0x55cdef(0x1ef), _0x55cdef(0x249)][_0x55cdef(0xfc)](_0x547338 => _0x5c97f4[_0x547338] = initialStats(_0x5c97f4, _0x547338)), Object['values'](getUsedAttacks())[_0x55cdef(0xfc)](function(_0x286e69) { const _0x35b2ca = _0x55cdef;++_0x3b1e61; let _0x4eff90 = {..._0x286e69, ..._0x5c97f4[_0x286e69[_0x35b2ca(0x224)]] };
        _0x4eff90 = getDependantSkills(_0x4eff90); /input/ [_0x35b2ca(0x264)](_0x55c5ff[_0x35b2ca(0x22b)]['className']) && _0x4eff90[_0x35b2ca(0x253)] === _0x35b2ca(0x221) && (UpdateComboTracker(), UpdateComboDisplay());
        _0x4eff90[_0x35b2ca(0x253)] === _0x35b2ca(0x221) && (_0x285f94 = weaponType[_0x35b2ca(0xcc)] !== bow ? getComboHitsAndSetSharpness(_0x4eff90[_0x35b2ca(0xb5)]) : hitsPerColorSharp()[0x1]);
        _0x4eff90 = GetRemainingSkills(_0x4eff90), _0x4eff90 = DamageCalculations(_0x4eff90);
        comboTracker[_0x35b2ca(0x21c)](_0x3b1e61['toString']()) && (colorsUsed = Object[_0x35b2ca(0x183)](_0x285f94)['filter'](_0x55524a => _0x55524a[0x1][_0x35b2ca(0x117)] > 0x0), colorsUsed[_0x35b2ca(0xfc)](_0x393eee => { const _0x18873b = _0x35b2ca; if (TimesUsed(_0x3b1e61, _0x393eee[0x1]) > 0x0) { const [_0x31b2bc, _0x31c8b6] = _0x4eff90[_0x18873b(0x200)] === ![] ? [info[_0x18873b(0x24e)]['Sharpness'][capital(_0x393eee[0x0])]['PRM'], info['skills'][_0x18873b(0xce)][capital(_0x393eee[0x0])]['PEM']] : [0x1, 0x1], _0x252a86 = TimesUsed(_0x3b1e61, _0x393eee[0x1]);
                _0x38780c = [_0x38780c[0x0] += Number(~~(_0x4eff90[_0x18873b(0xa9)] * _0x252a86)), _0x38780c[0x1] += Number(~~(_0x4eff90[_0x18873b(0x1e7)] * _0x31b2bc) * _0x252a86), _0x38780c[0x2] += Number(~~(_0x4eff90[_0x18873b(0x237)] * _0x31b2bc) * _0x252a86), _0x38780c[0x3] += Number(~~(_0x4eff90[_0x18873b(0x10e)] * _0x31c8b6) * _0x252a86), _0x38780c[0x4] += Number(~~(_0x4eff90[_0x18873b(0x165)] * _0x31c8b6) * _0x252a86), _0x38780c[0x5] += Number(~~(_0x4eff90[_0x18873b(0x1e7)] * _0x31b2bc) * _0x252a86 + ~~(_0x4eff90[_0x18873b(0x10e)] * _0x31c8b6) * _0x252a86), _0x38780c[0x6] += Number(~~(_0x4eff90['rawCrit'] * _0x31b2bc) * _0x252a86 + ~~(_0x4eff90[_0x18873b(0x165)] * _0x31c8b6) * _0x252a86), _0x38780c[0x7] += Number(~~(_0x4eff90[_0x18873b(0x25a)] * _0x31b2bc) * _0x252a86 + ~~(_0x4eff90[_0x18873b(0x1fd)] * _0x31c8b6) * _0x252a86)]; } })); let _0x5f4d2e = info[_0x35b2ca(0x24e)][_0x35b2ca(0xce)][Sharpness[Sharpness[_0x35b2ca(0x1bb)]][_0x35b2ca(0x238)]];
        weaponType['value'] === _0x35b2ca(0xca) && _0x4eff90[_0x35b2ca(0x224)] !== 'Shot' && (_0x5f4d2e = BowCoating[BowCoating['selectedIndex']][_0x35b2ca(0x238)] === _0x35b2ca(0x16d) ? 1.35 : _0x5f4d2e, _0x5f4d2e = BowCoating[BowCoating[_0x35b2ca(0x1bb)]][_0x35b2ca(0x238)] === 'Close\x20Range' ? 1.32 : _0x5f4d2e, _0x5f4d2e = BowCoating[BowCoating[_0x35b2ca(0x1bb)]][_0x35b2ca(0x238)] === _0x35b2ca(0x22c) ? 1.39 : _0x5f4d2e); const _0x3e42da = ['replaceME', _0x4eff90['attackName'], _0x4eff90[_0x35b2ca(0xa9)], formatNumbers(~~(_0x4eff90[_0x35b2ca(0x1e7)] * _0x5f4d2e['PRM'])) + _0x35b2ca(0x25d) + formatNumbers(~~(_0x4eff90[_0x35b2ca(0x237)] * _0x5f4d2e[_0x35b2ca(0x24a)])), formatNumbers(~~(_0x4eff90['eleNon'] * _0x5f4d2e[_0x35b2ca(0xe4)])) + _0x35b2ca(0x25d) + formatNumbers(~~(_0x4eff90[_0x35b2ca(0x165)] * _0x5f4d2e[_0x35b2ca(0xe4)])), formatNumbers(~~(_0x4eff90[_0x35b2ca(0x1e7)] * _0x5f4d2e[_0x35b2ca(0x24a)]) + ~~(_0x4eff90[_0x35b2ca(0x10e)] * _0x5f4d2e[_0x35b2ca(0xe4)])) + _0x35b2ca(0x25d) + formatNumbers(~~(_0x4eff90[_0x35b2ca(0x237)] * _0x5f4d2e[_0x35b2ca(0x24a)]) + ~~(_0x4eff90[_0x35b2ca(0x165)] * _0x5f4d2e[_0x35b2ca(0xe4)])), formatNumbers((~~(_0x4eff90[_0x35b2ca(0x1fd)] * _0x5f4d2e['PEM']) + ~~(_0x4eff90[_0x35b2ca(0x25a)] * _0x5f4d2e[_0x35b2ca(0x24a)])) * (_0x4eff90[_0x35b2ca(0xcd)] + 0x1))];
        _0x4ec0dd['push'](_0x3e42da); if (_0x3b1e61) { const _0x1bed63 = lower(_0x4eff90[_0x35b2ca(0x1c7)]) === 'none' ? 0x0 : _0x4eff90[_0x35b2ca(0x11f)],
                _0xbd907e = [
                    [
                        [_0x35b2ca(0x168)],
                        ['Raw'],
                        ['Affinity'],
                        [_0x4eff90['eleType']]
                    ],
                    [_0x35b2ca(0x1a3), ~~_0x4eff90[_0x35b2ca(0x10a)], ~~_0x4eff90['baseAff'], _0x4eff90[_0x35b2ca(0x18d)]],
                    [_0x35b2ca(0x1be), ~~_0x4eff90['raw'], ~~(_0x4eff90[_0x35b2ca(0xb5)] * 0x64), ~~_0x1bed63],
                    ['Total', ~~(_0x4eff90[_0x35b2ca(0x1e6)] * getCritBoost(_0x4eff90['Crit'], _0x4eff90['aff'])[_0x35b2ca(0x24a)] * _0x4eff90[_0x35b2ca(0x24a)] * _0x4eff90[_0x35b2ca(0x22f)] * _0x5f4d2e[_0x35b2ca(0x24a)]), ~~(_0x4eff90[_0x35b2ca(0xb5)] * 0x64), ~~(_0x1bed63 * getCritEle(_0x4eff90['Crit'], _0x4eff90[_0x35b2ca(0xb5)])[_0x35b2ca(0xe4)] * _0x4eff90[_0x35b2ca(0xe4)] * _0x4eff90[_0x35b2ca(0x159)] * _0x5f4d2e[_0x35b2ca(0xe4)])],
                    ['Effective', ~~(_0x4eff90[_0x35b2ca(0x1e6)] * getCritBoost(_0x4eff90['Crit'], _0x4eff90[_0x35b2ca(0xb5)])[_0x35b2ca(0x263)] * _0x4eff90[_0x35b2ca(0x24a)] * _0x4eff90['augEFR'] * _0x5f4d2e['PRM']), ~~(_0x4eff90[_0x35b2ca(0xb5)] * 0x64), ~~(_0x1bed63 * getCritEle(_0x4eff90[_0x35b2ca(0xfb)], _0x4eff90['aff'])[_0x35b2ca(0x127)] * _0x4eff90[_0x35b2ca(0xe4)] * _0x4eff90[_0x35b2ca(0x159)] * _0x4eff90[_0x35b2ca(0x233)] * _0x5f4d2e[_0x35b2ca(0xe4)])]
                ];
            BuildDamageTable(_0xbd907e, _0x35b2ca(0x12f), _0x55c5ff); } }); if (weaponType[_0x55cdef(0xcc)] === 'Gunlance') { GunlanceShelling(_0x4ec0dd, _0x38780c, power, _0x55c5ff); return; } else { if (_0x167b2f === Sharpness[_0x55cdef(0x1bb)] && !/BowChargePlus|dropWeapon|taWikiSetBuilder/ [_0x55cdef(0x264)](_0x55c5ff[_0x55cdef(0x22b)]['id'])) { if (/input|inputButton/ [_0x55cdef(0x264)](_0x55c5ff[_0x55cdef(0x22b)][_0x55cdef(0xc9)])) { document['getElementById']('c0')[_0x55cdef(0xa1)] = '' + formatNumbers(_0x38780c[0x0]), document[_0x55cdef(0xb7)]('d0')[_0x55cdef(0xa1)] = formatNumbers(_0x38780c[0x1]) + _0x55cdef(0x25d) + formatNumbers(_0x38780c[0x2]), document['getElementById']('e0')[_0x55cdef(0xa1)] = formatNumbers(_0x38780c[0x3]) + '\x20/\x20' + formatNumbers(_0x38780c[0x4]), document[_0x55cdef(0xb7)]('f0')[_0x55cdef(0xa1)] = formatNumbers(_0x38780c[0x5]) + _0x55cdef(0x25d) + formatNumbers(_0x38780c[0x6]), document[_0x55cdef(0xb7)]('g0')[_0x55cdef(0xa1)] = '' + formatNumbers(_0x38780c[0x7]); return; } else { _0x4ec0dd['splice'](0x0, 0x2, [_0x55cdef(0x100), _0x55cdef(0x221), '' + formatNumbers(_0x38780c[0x0]), formatNumbers(_0x38780c[0x1]) + '\x20/\x20' + formatNumbers(_0x38780c[0x2]), formatNumbers(_0x38780c[0x3]) + _0x55cdef(0x25d) + formatNumbers(_0x38780c[0x4]), formatNumbers(_0x38780c[0x5]) + _0x55cdef(0x25d) + formatNumbers(_0x38780c[0x6]), '' + formatNumbers(_0x38780c[0x7])]); let _0x548f22 = 0x0;
                $(_0x4ec0dd)[_0x55cdef(0x120)](function() { const _0x522c9a = _0x55cdef;
                    this[_0x522c9a(0x99)](0x0, 0x2), $(this)['each'](function() { const _0x4b8850 = _0x522c9a;
                        Object[_0x4b8850(0xcf)]($(dpsBody)['children']()['children']())['filter'](_0x4e923b => !/a|b/ [_0x4b8850(0x264)](_0x4e923b[_0x4b8850(0xc9)]))[_0x548f22]['textContent'] = this, ++_0x548f22; }); }); } } else _0x4ec0dd[_0x55cdef(0x99)](0x1, 0x1, [_0x55cdef(0x100), _0x55cdef(0x221), '' + formatNumbers(_0x38780c[0x0]), formatNumbers(_0x38780c[0x1]) + '\x20/\x20' + formatNumbers(_0x38780c[0x2]), formatNumbers(_0x38780c[0x3]) + _0x55cdef(0x25d) + formatNumbers(_0x38780c[0x4]), formatNumbers(_0x38780c[0x5]) + '\x20/\x20' + formatNumbers(_0x38780c[0x6]), '' + formatNumbers(_0x38780c[0x7])]), BuildDamageTable(_0x4ec0dd, _0x55cdef(0x1fa), _0x55c5ff); } }

function getRampageSkills(_0x1bb324 = {...info[weaponType[_0x3d07b(0xcc)]][_0x3d07b(0x194)][$('#dropWeapon')[_0x3d07b(0x15f)]()] }) { const _0x398148 = _0x3d07b; return $(weaponRampage['children'])[_0x398148(0x120)]((_0x361054, _0x497319) => { const _0x245c25 = _0x398148,
            _0x3011cd = info['rampage'][_0x245c25(0xae)][_0x497319[_0x245c25(0xcc)]]; if (_0x3011cd !== undefined)
            for (let _0x2d1421 = 0x0; _0x2d1421 < Object[_0x245c25(0x139)](_0x3011cd)[_0x245c25(0x117)]; _0x2d1421++) { const _0x18d3a6 = Object[_0x245c25(0x139)](_0x3011cd)[_0x2d1421];
                _0x1bb324[_0x18d3a6] += _0x3011cd[_0x18d3a6]; } }), !/BowGun/ [_0x398148(0x264)](weaponType[_0x398148(0xcc)]) && (_0x1bb324[_0x398148(0x1c7)] = /Fire|Water|Thunder|Ice|Dragon|Blase|Sleep|Poison|Para/ ['test'](weaponRampage[_0x398148(0xaa)][0x1][_0x398148(0xcc)]) ? weaponRampage[_0x398148(0xaa)][0x1]['value'][_0x398148(0x16b)](/Fire|Water|Thunder|Ice|Dragon|Blase|Sleep|Poison|Para/)[0x0] : _0x1bb324[_0x398148(0x1c7)]), {..._0x1bb324 }; }
const getQuriousAugs = () => { const _0x45be4b = _0x3d07b; let _0x119d27 = {...info[weaponType[_0x45be4b(0xcc)]][_0x45be4b(0x194)][dropWeapon[_0x45be4b(0xcc)]] }; if (/BowGun/ [_0x45be4b(0x264)](weaponType[_0x45be4b(0xcc)])) { if ((TuneUp[_0x45be4b(0x1bb)] === 0x0 || TuneUp[_0x45be4b(0x1bb)] === 0x1) && BowgunBarrel[_0x45be4b(0xb1)][BowgunBarrel[_0x45be4b(0x1bb)]][_0x45be4b(0x238)] === _0x45be4b(0x16d)) _0x119d27[_0x45be4b(0x10a)] = ~~(_0x119d27[_0x45be4b(0x10a)] * 1.125);
        else TuneUp[_0x45be4b(0x1bb)] === 0x2 && BowgunBarrel[_0x45be4b(0xb1)][BowgunBarrel[_0x45be4b(0x1bb)]]['text'] === _0x45be4b(0x16d) && (_0x119d27[_0x45be4b(0x10a)] = ~~(_0x119d27['baseRaw'] * 1.15)); if ((TuneUp[_0x45be4b(0x1bb)] === 0x0 || TuneUp['selectedIndex'] === 0x1) && BowgunBarrel[_0x45be4b(0xb1)][BowgunBarrel[_0x45be4b(0x1bb)]][_0x45be4b(0x238)] === 'Long') _0x119d27[_0x45be4b(0x10a)] = ~~(_0x119d27['baseRaw'] * 1.05);
        else TuneUp[_0x45be4b(0x1bb)] === 0x2 && BowgunBarrel['options'][BowgunBarrel['selectedIndex']][_0x45be4b(0x238)] === _0x45be4b(0x1d8) && (_0x119d27['baseRaw'] = ~~(_0x119d27[_0x45be4b(0x10a)] * 1.075)); } return _0x119d27[_0x45be4b(0x10a)] += Number($(_0x45be4b(0x23b))[_0x45be4b(0x15f)]()) / 0x2 * 0x5, attackResult[_0x45be4b(0xcc)] = '+\x20' + Number($(_0x45be4b(0x23b))[_0x45be4b(0x15f)]() / 0x2) * 0x5, _0x119d27[_0x45be4b(0xb5)] += $('output.affinityAug')[_0x45be4b(0x15f)]() / 0x3 * 0x5, affinityResult[_0x45be4b(0xcc)] = '+\x20' + $(_0x45be4b(0x8e))[_0x45be4b(0x15f)]() / 0x3 * 0x5, $(_0x45be4b(0x1a6))[_0x45be4b(0x238)]($(_0x45be4b(0xb0))['val']() > 0x0 ? '+1' : '+0'), info[weaponType[_0x45be4b(0xcc)]]['weapons'][$('#dropWeapon')[_0x45be4b(0x15f)]()][_0x45be4b(0x1c7)] !== _0x45be4b(0x184) ? (_0x119d27['baseEle'] += $('output.elementalAug')[_0x45be4b(0x15f)]() * 0x3, elementalResult['value'] = '+\x20' + $('output.elementalAug')[_0x45be4b(0x15f)]() * 0x3) : $(_0x45be4b(0x231))[_0x45be4b(0x15f)](0x0), _0x119d27[_0x45be4b(0xe0)] = +_0x119d27['aff'], {..._0x119d27 }; };

function getDependantSkills(_0x293a84) { const _0x41bf25 = _0x3d07b,
        _0x5bd590 = []; if (/Bow/ [_0x41bf25(0x264)]($(weaponType)[_0x41bf25(0x15f)]())) { if (/Pierc/ [_0x41bf25(0x264)](_0x293a84[_0x41bf25(0x253)])) _0x5bd590[_0x41bf25(0xfd)](info[_0x41bf25(0x24e)][_0x41bf25(0x1f9)][PierceUp[_0x41bf25(0x1bb)]]);
        else { if (/Spread/ ['test'](_0x293a84[_0x41bf25(0x253)])) _0x5bd590[_0x41bf25(0xfd)](info['skills'][_0x41bf25(0x136)][SpreadUp[_0x41bf25(0x1bb)]]);
            else /Normal|Rapid/ [_0x41bf25(0x264)](_0x293a84['attackName']) && _0x5bd590[_0x41bf25(0xfd)](info[_0x41bf25(0x24e)][_0x41bf25(0x23f)][NormalRapidUp[_0x41bf25(0x1bb)]]); } /RF+/ [_0x41bf25(0x264)](_0x293a84[_0x41bf25(0x253)]) && _0x5bd590[_0x41bf25(0xfd)](info[_0x41bf25(0x24e)][_0x41bf25(0x172)][RapidFireUp[_0x41bf25(0x1bb)]]); /Wyvern|Dragon Piercer/ ['test'](_0x293a84['attackName']) && _0x5bd590[_0x41bf25(0xfd)](info[_0x41bf25(0x24e)]['SpecialAmmoBoost'][SpecialAmmoBoost[_0x41bf25(0x1bb)]]); if (/BowGun/ [_0x41bf25(0x264)](weaponType[_0x41bf25(0xcc)])) { weaponType[_0x41bf25(0xcc)] === hbg && (/Sticky|Wyvern/ ['test'](_0x293a84[_0x41bf25(0x253)]) && (_0x293a84[_0x41bf25(0x233)] *= info[_0x41bf25(0x24e)][_0x41bf25(0x15d)][Bombardier['selectedIndex']][_0x293a84['attackName'][_0x41bf25(0x16b)]('Sticky|Wyvern')[0x0]][0x1], _0x293a84['augPRM'] *= info['skills'][_0x41bf25(0x15d)][Bombardier[_0x41bf25(0x1bb)]][_0x293a84['attackName']['match'](_0x41bf25(0x1a2))[0x0]][0x0]), !/snipe|heart|Cluster/ [_0x41bf25(0x264)](_0x293a84['attackName']) && (_0x293a84['PRM'] *= info[_0x41bf25(0x24e)][_0x41bf25(0x182)][ChargeLevel[_0x41bf25(0x1bb)]][_0x41bf25(0x24a)], _0x293a84['NoEleBuff'] ? _0x293a84[_0x41bf25(0x18d)] *= info[_0x41bf25(0x24e)][_0x41bf25(0x182)][ChargeLevel['selectedIndex']][_0x41bf25(0xe4)] : _0x293a84[_0x41bf25(0xe4)] *= info[_0x41bf25(0x24e)][_0x41bf25(0x182)][ChargeLevel['selectedIndex']][_0x41bf25(0xe4)])); if (dropWeaponType[_0x41bf25(0xcc)] === lbg && /Pierce|Spread|Normal/ [_0x41bf25(0x264)](_0x293a84[_0x41bf25(0x253)]) && $(CriticalFirePower)[0x0][_0x41bf25(0x1bb)] > 0x0) { if (/Normal/ [_0x41bf25(0x264)](_0x293a84[_0x41bf25(0x253)])) _0x293a84[_0x41bf25(0x24a)] *= 1.3;
                else { if (/Spread/ [_0x41bf25(0x264)](_0x293a84['attackName'])) _0x293a84[_0x41bf25(0x24a)] *= 1.2;
                    else /Pierce/ [_0x41bf25(0x264)](_0x293a84['attackName']) && (_0x293a84[_0x41bf25(0x24a)] *= 1.1); } } } } if ($(weaponType)[_0x41bf25(0x15f)]() === 'LongSword' && !/Helm Breaker|Serene/ [_0x41bf25(0x264)](_0x293a84[_0x41bf25(0x253)])) _0x5bd590[_0x41bf25(0xfd)](info[_0x41bf25(0x24e)][_0x41bf25(0x1c2)][SpiritGauge[_0x41bf25(0x1bb)]]);
    else /Helm Breaker|Serene/ [_0x41bf25(0x264)](_0x293a84[_0x41bf25(0x253)]) && _0x293a84[_0x41bf25(0x180)][_0x41bf25(0xfd)](/Helm Breaker/ ['test'](_0x293a84[_0x41bf25(0x253)]) ? _0x5bd590['push'](info[_0x41bf25(0x24e)]['Helmbreaker'][Helmbreaker['selectedIndex']]) : _0x5bd590[_0x41bf25(0xfd)](info[_0x41bf25(0x24e)][_0x41bf25(0xdd)][SerenePose[_0x41bf25(0x1bb)]])); if ($(weaponType)[_0x41bf25(0x15f)]() === _0x41bf25(0x23c)) { const _0x288ff6 = new RegExp(/Charged Slash|Rising Slash|Wide Slash|Strong Charged Slash|True Charged Slash|Rage Slash/);
        _0x288ff6[_0x41bf25(0x264)](_0x293a84[_0x41bf25(0x253)]) && $(StrongarmStance)[0x0]['selectedIndex'] > 0x0 && (_0x293a84[_0x41bf25(0x24a)] *= info['skills'][_0x41bf25(0x142)][_0x293a84['attackName'][_0x41bf25(0x16b)](_0x288ff6)[0x0]][0x0], _0x293a84[_0x41bf25(0xe4)] *= info[_0x41bf25(0x24e)][_0x41bf25(0x142)][_0x293a84[_0x41bf25(0x253)]['match'](_0x288ff6)[0x0]][0x1]), /(?<!Tackle )Lv[1-3]/ [_0x41bf25(0x264)](_0x293a84[_0x41bf25(0x253)]) && (_0x293a84['rawMV'] *= Number('1.' + _0x293a84[_0x41bf25(0x253)][_0x41bf25(0x16b)](/(?<=Lv)[1-3]/)[0x0]), _0x293a84[_0x41bf25(0xa9)] = _0x293a84[_0x41bf25(0xa9)][_0x41bf25(0x14d)](0x1)); } return $(weaponType)[_0x41bf25(0x15f)]() === _0x41bf25(0x154) && (!/3rd|(?<!Midair |Axe: )UED|(?<!Charged )Sword(?!.*Shield)/ [_0x41bf25(0x264)](_0x293a84[_0x41bf25(0x253)]) && _0x5bd590[_0x41bf25(0xfd)](info[_0x41bf25(0x24e)][_0x41bf25(0x1d1)][savageAxe['selectedIndex']]), getWeapon()[_0x41bf25(0x20b)] === _0x41bf25(0x145) ? _0x5bd590[_0x41bf25(0xfd)](info['skills'][_0x41bf25(0x190)][impShieldCharge['selectedIndex']]) : _0x5bd590[_0x41bf25(0xfd)](info[_0x41bf25(0x24e)]['eleShieldCharge'][eleShieldCharge[_0x41bf25(0x1bb)]])), weaponType === bow && !/Stake/ [_0x41bf25(0x264)](_0x293a84[_0x41bf25(0x253)]) && _0x5bd590[_0x41bf25(0xfd)](info['skills'][_0x41bf25(0x12b)][BowCoating[_0x41bf25(0x1bb)]]), getStats(_0x5bd590, _0x293a84); }

function getEnrage() { const _0x297d9c = _0x3d07b; return $(_0x297d9c(0x19a))['val']() === _0x297d9c(0x1cc) ? Object['values'](info['monster'][_0x297d9c(0x8f)])[_0x297d9c(0x147)](_0x3693cf => _0x3693cf['Large\x20Monster'] === dropMonster[_0x297d9c(0xcc)])[0x0][_0x297d9c(0x119)] : 0x1; }

function initialStats(_0x30946d, _0x513267) { const _0x555548 = _0x3d07b;
    comboTracker[0x0] === null && (comboTracker = []);
    _0x30946d[_0x555548(0x10a)] += _0x30946d[_0x555548(0x11c)] === !![] ? +document['getElementById']('PunishingDraw')[_0x555548(0xcc)] : 0x0, _0x30946d['BR'] = 0x0, _0x30946d[_0x555548(0x115)] = 0x1, _0x30946d['PRM'] = 0x1, _0x30946d[_0x555548(0x12d)] = 0x1, _0x30946d['BE'] = 0x0, _0x30946d[_0x555548(0xe4)] = 0x1, _0x30946d['PRM'] *= DemonAmmo[_0x555548(0x12c)] && /(Sever|Blunt)/ [_0x555548(0x264)](_0x30946d[_0x555548(0x224)]) ? 1.1 : 0x1, 0x1; const _0x2f571f = []; return $('input.check:not(input#ProtectivePolish)')[_0x555548(0x120)](function() { const _0x155078 = _0x555548;
        this[_0x155078(0x12c)] && this['id'] !== _0x155078(0x175) && _0x2f571f['push'](JSON[_0x155078(0xfa)](this[_0x155078(0xcc)])); }), _0x30946d[_0x555548(0x180)] = [][_0x555548(0x137)](Object[_0x555548(0xcf)](info['types'][_0x513267])[_0x555548(0x147)](_0x26adbe => $('#' + _0x26adbe)[_0x555548(0x250)](_0x555548(0x236)) !== _0x555548(0xe8) && document[_0x555548(0xb7)](_0x26adbe)[_0x555548(0x1bb)] > 0x0)), enrageDisplay[_0x555548(0xa1)] = ~~(getEnrage() * 0x64) + '%', $(_0x555548(0x19a))[_0x555548(0x15f)]() === _0x555548(0x1cc) && (_0x30946d['getSkills'][_0x555548(0xfd)](_0x555548(0x259)), _0x30946d[_0x555548(0xe4)] *= getEnrage(), _0x30946d[_0x555548(0x24a)] *= getEnrage()), weaponType[_0x555548(0xcc)] === db && (_0x30946d[_0x555548(0x12d)] *= info[_0x555548(0x24e)][_0x555548(0x104)][ArchdemonMode[_0x555548(0x1bb)]][_0x555548(0x12d)], _0x30946d[_0x555548(0x12d)] *= !/\[Feral Demon Mode\]/ [_0x555548(0x264)](_0x30946d[_0x555548(0x253)]) ? info[_0x555548(0x24e)][_0x555548(0xab)][DemonMode[_0x555548(0x1bb)]]['BEM'] : 0x1, _0x30946d[_0x555548(0x115)] *= !/\[Demon Mode\]/ [_0x555548(0x264)](_0x30946d[_0x555548(0x253)]) ? info[_0x555548(0x24e)][_0x555548(0x12e)][FeralDemonMode['selectedIndex']][_0x555548(0x115)] : 0x1, _0x30946d['aff'] += weaponRampage0[_0x555548(0xcc)] === _0x555548(0x13f) ? 0x14 : 0x0), weaponType[_0x555548(0xcc)] === 'Bow' && (_0x30946d['getSkills'] = _0x30946d['getSkills'][_0x555548(0x137)](_0x555548(0x14a), _0x555548(0x20e))), _0x30946d[_0x555548(0x180)] = _0x30946d[_0x555548(0x180)][_0x555548(0x147)](isUnique), $(_0x30946d[_0x555548(0x180)])['each'](function() { const _0x4224a7 = _0x555548;
        _0x2f571f[_0x4224a7(0xfd)](info['skills'][this][document['getElementById'](this)['selectedIndex']]); }), getStats(_0x2f571f, _0x30946d), weaponRampage0[_0x555548(0xcc)] === _0x555548(0x255) && (_0x30946d[_0x555548(0xb5)] += 0xf), _0x30946d['aff'] = getRawHZ(_0x30946d[_0x555548(0x224)]) !== undefined && getRawHZ(_0x30946d[_0x555548(0x224)]) >= 0x2d ? _0x30946d[_0x555548(0xb5)] + JSON[_0x555548(0xfa)]($(_0x555548(0xf9))['val']()) : _0x30946d['aff'], _0x30946d[_0x555548(0xb5)] = Math[_0x555548(0x223)](_0x30946d['aff'], 0x64) / 0x64, {..._0x30946d }; }

function UpdateComboTracker() { const _0x47f6fe = _0x3d07b; if (!Number[_0x47f6fe(0x1f5)](+window[_0x47f6fe(0xc3)][_0x47f6fe(0x22b)]['id']) && window['event'][_0x47f6fe(0x22b)]['id'] !== '0') { let _0xbd7bb6 = $(_0x47f6fe(0x19f))[window[_0x47f6fe(0xc3)][_0x47f6fe(0x22b)]['id']]['value'] - TimesUsed(window[_0x47f6fe(0xc3)][_0x47f6fe(0x22b)]['id']); while (_0xbd7bb6 > 0x0) { comboTracker[_0x47f6fe(0xfd)](window[_0x47f6fe(0xc3)][_0x47f6fe(0x22b)]['id']), --_0xbd7bb6; } while (_0xbd7bb6 < 0x0) { comboTracker[_0x47f6fe(0x99)](comboTracker['lastIndexOf'](window[_0x47f6fe(0xc3)][_0x47f6fe(0x22b)]['id']), 0x1), ++_0xbd7bb6; } } }

function UpdateComboDisplay() { const _0x4ea2be = _0x3d07b;
    $(_0x4ea2be(0x11d))['remove'](); let _0x4dc0da;
    $(comboTracker)['each']((_0x35311f, _0x5369df) => { const _0x2077e5 = _0x4ea2be;
        _0x4dc0da = document['createElement'](_0x2077e5(0x169)), _0x4dc0da['className'] = 'comboHits', _0x4dc0da[_0x2077e5(0xa1)] = $(_0x2077e5(0xa3) + [_0x5369df] + _0x2077e5(0x1dd))['text'](), $(comboCountDisplay)['append'](_0x4dc0da); }); }

function getInitialSharpness(_0x7822d5 = {...info[weaponType[_0x3d07b(0xcc)]][_0x3d07b(0x194)][dropWeapon[_0x3d07b(0xcc)]]['sharpness'] }) { const _0x5401b9 = _0x3d07b; let _0x21c78e = []; if (Handicraft[_0x5401b9(0x1bb)] > 0x0) { if (_0x7822d5['purple'] > 0x0) _0x21c78e = [_0x5401b9(0xdc)];
        else { if (_0x7822d5['white'] > 0x0) _0x21c78e = [_0x5401b9(0x17a), _0x5401b9(0xdc)];
            else { if (_0x7822d5[_0x5401b9(0xbb)] > 0x0) _0x21c78e = [_0x5401b9(0xbb), _0x5401b9(0x17a), _0x5401b9(0xdc)];
                else { if (_0x7822d5[_0x5401b9(0x1e9)] > 0x0) _0x21c78e = [_0x5401b9(0x1e9), _0x5401b9(0xbb), _0x5401b9(0x17a), _0x5401b9(0xdc)];
                    else _0x7822d5[_0x5401b9(0xe5)] > 0x0 && (_0x21c78e = [_0x5401b9(0xe5), _0x5401b9(0x1e9), _0x5401b9(0xbb), 'white']); } } } let _0x12f37c = Handicraft[_0x5401b9(0x1bb)];
        $(getWeapon()[_0x5401b9(0x1b0)])[_0x5401b9(0x120)]((_0x124c46, _0xd3e5aa) => { while (_0xd3e5aa > 0x0 && _0x12f37c > 0x0) { _0x7822d5[_0x21c78e[_0x124c46]] += 0xa, --_0x12f37c, _0xd3e5aa -= 0xa; } }); } return {..._0x7822d5 }; }

function applySharpnessSkills(_0x2d3334, _0x5b5df6 = {...getInitialSharpness() }) { const _0x28cdd1 = _0x3d07b; let _0x20f99e = []; const _0x358128 = info[_0x28cdd1(0x24e)]['RazorSharp'][RazorSharp[_0x28cdd1(0x1bb)]][_0x28cdd1(0xd4)]; let _0x54db96 = info[_0x28cdd1(0x24e)][_0x28cdd1(0x126)][MastersTouch['selectedIndex']][_0x28cdd1(0xd4)];
    _0x54db96 *= _0x2d3334; const _0x57b87d = _0x2d3334 > 0x0 && MastersTouch[_0x28cdd1(0x1bb)] > 0x0 ? sharpnessReduction(_0x54db96) * sharpnessReduction(_0x358128) : sharpnessReduction(_0x358128); return _0x20f99e = Object[_0x28cdd1(0x183)](_0x5b5df6)[_0x28cdd1(0x25b)](_0x2fa4bf => ~~(+_0x2fa4bf[0x1] * +_0x57b87d)), _0x20f99e; }

function getTotalComboHits() { const _0x4d3b4d = _0x3d07b; let [..._0x54b59b] = comboTracker; if (comboTracker[0x0] !== undefined && comboTracker[0x0] !== null) { let _0x17f7d1 = $(_0x4d3b4d(0x1b1))['val'](); while (_0x17f7d1 > 0x1) { _0x54b59b = _0x54b59b[_0x4d3b4d(0x137)](comboTracker), --_0x17f7d1; } return _0x54b59b; } }

function _0x18d6(_0x265e4e, _0x8166d5) { const _0x6f7041 = _0x6f70(); return _0x18d6 = function(_0x18d697, _0xd8eff5) { _0x18d697 = _0x18d697 - 0x8c; let _0x3005c6 = _0x6f7041[_0x18d697]; return _0x3005c6; }, _0x18d6(_0x265e4e, _0x8166d5); }

function getComboHitsAndSetSharpness(_0x480e88 = 0x0) { const _0x12fa64 = _0x3d07b,
        [_0x587a20, _0x7e1a, _0x4603c9] = hitsPerColorSharp(_0x480e88); let _0x3dee93 = ![]; for (let _0x59603c = 0x0; _0x59603c < 0x7; _0x59603c++) { const _0x373e93 = _0x587a20[_0x59603c],
            _0x280b3a = $(_0x12fa64(0x150))['children']()[0x6 - _0x59603c];
        _0x280b3a[_0x12fa64(0xa1)] = _0x373e93 < 0.1 ? '' : Number(_0x373e93)['toFixed'](0x0), $(_0x280b3a)[_0x12fa64(0x129)](Number(_0x373e93)[_0x12fa64(0x14d)](0x0) / _0x4603c9 * $(damageContainer)[_0x12fa64(0x129)]() * 0.46), _0x373e93 > 0x0 && !_0x3dee93 && (Sharpness[_0x12fa64(0x1bb)] = 0x7 - _0x59603c, _0x3dee93 = !![]); } return _0x7e1a; }

function hitsPerColorSharp(_0x1387cb = 0x0, _0x30a810 = getTotalComboHits()) { const _0x848baf = _0x3d07b; let _0x28e0fe = { 'purple': [], 'white': [], 'blue': [], 'green': [], 'yellow': [], 'orange': [], 'red': [] }; const _0x54b6ff = weaponType[_0x848baf(0xcc)] !== bow ? {...applySharpnessSkills(_0x1387cb)[_0x848baf(0x188)]() } : [0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0],
        _0x5e41bf = Object[_0x848baf(0xcf)](_0x54b6ff)[_0x848baf(0x26b)]((_0x3f2f11, _0x12daf7) => _0x3f2f11 + _0x12daf7); return _0x30a810 !== undefined && _0x30a810[_0x848baf(0xfc)](_0x27e3f4 => { const _0x6463ca = _0x848baf,
            _0x4f6834 = Object[_0x6463ca(0x139)](getUsedAttacks())[_0x27e3f4],
            _0x221a6d = getHitsPerTic(_0x4f6834, _0x27e3f4); if (weaponType[_0x6463ca(0xcc)] !== 'Gunlance' || weaponType['value'] === _0x6463ca(0xe9) && _0x27e3f4 < 0x1c)
            for (let _0x140eb6 = 0x0; _0x140eb6 < getAttacks()[_0x4f6834][_0x6463ca(0xcd)] + 0x1; _0x140eb6++) { if (_0x54b6ff[0x0] > 0.1) _0x28e0fe[_0x6463ca(0xdc)][_0x6463ca(0xfd)](_0x27e3f4), _0x54b6ff[0x0] -= _0x221a6d;
                else { if (_0x54b6ff[0x1] > 0.1) _0x28e0fe[_0x6463ca(0x17a)][_0x6463ca(0xfd)](_0x27e3f4), _0x54b6ff[0x1] -= _0x221a6d;
                    else { if (_0x54b6ff[0x2] > 0.1) _0x28e0fe[_0x6463ca(0xbb)]['push'](_0x27e3f4), _0x54b6ff[0x2] -= _0x221a6d;
                        else { if (_0x54b6ff[0x3] > 0.1) _0x28e0fe[_0x6463ca(0x1e9)]['push'](_0x27e3f4), _0x54b6ff[0x3] -= _0x221a6d;
                            else { if (_0x54b6ff[0x4] > 0.1) _0x28e0fe[_0x6463ca(0xe5)]['push'](_0x27e3f4), _0x54b6ff[0x4] -= _0x221a6d;
                                else { if (_0x54b6ff[0x5] > 0.1) _0x28e0fe[_0x6463ca(0x218)][_0x6463ca(0xfd)](_0x27e3f4), _0x54b6ff[0x5] -= _0x221a6d;
                                    else _0x54b6ff[0x6] > 0.1 && (_0x28e0fe[_0x6463ca(0x92)][_0x6463ca(0xfd)](_0x27e3f4), _0x54b6ff[0x6] -= _0x221a6d); } } } } } } }), [_0x54b6ff, _0x28e0fe, _0x5e41bf]; }

function getHitsPerTic(_0x598615, _0x2df3b8) { const _0x621c98 = _0x3d07b; if (ProtectivePolish[_0x621c98(0x12c)] || weaponType['value'] === bow) return 0x0; if (weaponType[_0x621c98(0xcc)] === _0x621c98(0xe9) && _0x2df3b8 > 0x1b || weaponType[_0x621c98(0xcc)] !== _0x621c98(0xe9)) return weaponType[_0x621c98(0xcc)] !== db ? getAttacks()[_0x598615][_0x621c98(0x22a)] : getAttacks()[_0x598615][_0x621c98(0x22a)] / 0x3; return 0x1; }

function GetRemainingSkills(_0x32ecc6) { const _0x12cfb7 = _0x3d07b;
    [_0x32ecc6[_0x12cfb7(0x233)], _0x32ecc6[_0x12cfb7(0x22f)], _0x32ecc6[_0x12cfb7(0x159)]] = [0x1, 0x1, 0x1], _0x32ecc6[_0x12cfb7(0x159)] *= $(_0x12cfb7(0x262))[_0x12cfb7(0x15f)]() === _0x12cfb7(0x206) && _0x32ecc6[_0x12cfb7(0x1c7)] === _0x12cfb7(0x24d) ? 1.2 : 0x1, [_0x32ecc6['augEFR'], _0x32ecc6['augPRM']] = $('#weaponRampage0')[_0x12cfb7(0x15f)]() === _0x12cfb7(0x1ac) && Sharpness[_0x12cfb7(0x1bb)] < 0x5 ? [1.02, 1.2] : [_0x32ecc6['augEFR'], _0x32ecc6[_0x12cfb7(0x22f)]];
    info[_0x12cfb7(0x19d)][dropMonster[_0x12cfb7(0xcc)]][weaponRampage0[_0x12cfb7(0xcc)][_0x12cfb7(0x16b)](/Aerial|Aquatic|Wyvern|Fanged/)] !== undefined && (_0x32ecc6[_0x12cfb7(0x24a)] *= 1.05); /blight Exploit/ [_0x12cfb7(0x264)](weaponRampage0[_0x12cfb7(0xcc)]) && (_0x32ecc6[_0x12cfb7(0x24a)] *= 1.1);
    weaponRampage0[_0x12cfb7(0xcc)] === _0x12cfb7(0x17c) && (_0x32ecc6['BR'] += 0xc);
    (_0x32ecc6[_0x12cfb7(0x224)] === _0x12cfb7(0x249) && weaponType[_0x12cfb7(0xcc)] === lbg || weaponType['value'] === cb) && (_0x32ecc6[_0x12cfb7(0x233)] *= info[_0x12cfb7(0x24e)][_0x12cfb7(0x15d)][Bombardier[_0x12cfb7(0x1bb)]][0x1], _0x32ecc6[_0x12cfb7(0x22f)] *= info[_0x12cfb7(0x24e)]['Bombardier'][Bombardier[_0x12cfb7(0x1bb)]][0x0], weaponType['value'] === sa && /Sword|ZSD|ED/ [_0x12cfb7(0x264)](_0x32ecc6[_0x12cfb7(0x253)]) && _0x32ecc6[_0x12cfb7(0x20b)] === _0x12cfb7(0x145) && (_0x32ecc6[_0x12cfb7(0x115)] *= 1.15), weaponType[_0x12cfb7(0xcc)] === sa && /Sword|Elemental|ED/ [_0x12cfb7(0x264)](_0x32ecc6[_0x12cfb7(0x253)]) && _0x32ecc6[_0x12cfb7(0x20b)] === _0x12cfb7(0xf1) && (_0x32ecc6[_0x12cfb7(0x12d)] *= 1.45));
    _0x32ecc6['eleType'] !== _0x12cfb7(0x184) && (_0x32ecc6[_0x12cfb7(0xe4)] *= getWeapon()[_0x12cfb7(0xf6)] === 0x0 && $(_0x12cfb7(0x262))[_0x12cfb7(0x15f)]() === _0x12cfb7(0x258) && getEleHZ(_0x32ecc6[_0x12cfb7(0x1c7)]) >= 0x19 ? 1.3 : 0x1, _0x32ecc6[_0x12cfb7(0xe4)] *= getWeapon()['rampageSlots'] !== 0x0 && $('#weaponRampage0')['val']() == _0x12cfb7(0x25e) && getEleHZ(_0x32ecc6['eleType']) >= 0x19 && lower(_0x32ecc6[_0x12cfb7(0x1c7)]) !== _0x12cfb7(0xe8) ? 1.15 : 0x1, _0x32ecc6['PEM'] *= getEleHZ(_0x32ecc6[_0x12cfb7(0x1c7)]) >= 0x14 && lower(_0x32ecc6[_0x12cfb7(0x1c7)]) !== 'none' ? info[_0x12cfb7(0x24e)][_0x12cfb7(0x91)][ElementalExploit[_0x12cfb7(0x1bb)]]['PEM'] : 0x1);
    (weaponType[_0x12cfb7(0xcc)] === cb || weaponType['value'] === sa) && (_0x32ecc6['BRM'] *= /Morph Slash|Condensed Spinning|Up Roundslash/ ['test'](_0x32ecc6[_0x12cfb7(0x253)]) ? info[_0x12cfb7(0x24e)]['RapidMorph'][RapidMorph[_0x12cfb7(0x1bb)]]['BRM'] : 0x1);
    Sharpness['selectedIndex'] > 0x0 && Bludgeoner[_0x12cfb7(0x1bb)] > 0x0 && (_0x32ecc6['BRM'] *= Bludgeoner[_0x12cfb7(0x1bb)] === 0x1 && Sharpness[_0x12cfb7(0x1bb)] < 0x4 ? [1.05] : [0x1], _0x32ecc6['BRM'] *= Bludgeoner[_0x12cfb7(0x1bb)] === 0x2 && Sharpness[_0x12cfb7(0x1bb)] < 0x4 ? [1.1] : [0x1], _0x32ecc6[_0x12cfb7(0x115)] *= Bludgeoner['selectedIndex'] === 0x3 && Sharpness[_0x12cfb7(0x1bb)] < 0x5 ? [1.1] : [0x1]); if (!/Wyvern/ [_0x12cfb7(0x264)](_0x32ecc6[_0x12cfb7(0x253)]) && Object[_0x12cfb7(0x139)](info[_0x12cfb7(0x24e)][_0x12cfb7(0xff)])[_0x12cfb7(0x21c)](weaponType['value']) && _0x32ecc6[_0x12cfb7(0xff)] === !![]) _0x32ecc6[_0x12cfb7(0x12d)] *= info['skills'][_0x12cfb7(0xff)][weaponType[_0x12cfb7(0xcc)]][ChargeMaster[_0x12cfb7(0x1bb)]][_0x12cfb7(0x12d)];
    else _0x32ecc6[_0x12cfb7(0xff)] === !![] && _0x32ecc6['NoEleBuff'] === !![] && (_0x32ecc6[_0x12cfb7(0x18d)] *= /Wyvern/ [_0x12cfb7(0x264)](_0x32ecc6[_0x12cfb7(0x253)]) ? info['skills']['ChargeMaster']['HeavyBowGun\x20Wyvern'][ChargeMaster[_0x12cfb7(0x1bb)]]['BEM'] : info[_0x12cfb7(0x24e)]['ChargeMaster'][weaponType['value']][ChargeMaster['selectedIndex']][_0x12cfb7(0x12d)]); const _0x39ab51 = [];
    [_0x39ab51[_0x12cfb7(0x24a)], _0x39ab51[_0x12cfb7(0xe4)]] = _0x32ecc6[_0x12cfb7(0x200)] === ![] && /sever|blunt/ [_0x12cfb7(0x264)](lower(_0x32ecc6[_0x12cfb7(0x224)])) ? [JSON[_0x12cfb7(0xfa)](Sharpness[_0x12cfb7(0xcc)])[_0x12cfb7(0x24a)], JSON[_0x12cfb7(0xfa)](Sharpness[_0x12cfb7(0xcc)])[_0x12cfb7(0xe4)]] : [0x1, 0x1], _0x32ecc6[_0x12cfb7(0x24a)] *= ~~(0x19 / _0x39ab51[_0x12cfb7(0x24a)]) >= getRawHZ(_0x32ecc6[_0x12cfb7(0x224)]) ? info[_0x12cfb7(0x24e)][_0x12cfb7(0xeb)][MindsEye[_0x12cfb7(0x1bb)]][_0x12cfb7(0x24a)] : 0x1; if (getWeapon()[_0x12cfb7(0xf6)] === 0x0 && $(_0x12cfb7(0x262))[_0x12cfb7(0x15f)]() === _0x12cfb7(0x132) && _0x32ecc6['aff'] < 0x0) _0x32ecc6[_0x12cfb7(0xa4)] = 0x1 + _0x32ecc6[_0x12cfb7(0xb5)] * -0x1 * 0.2 * 1.5 - _0x32ecc6[_0x12cfb7(0xb5)] * -0x1 * 0.8 * 0.75, _0x32ecc6[_0x12cfb7(0x215)] = 1.5;
    else getWeapon()[_0x12cfb7(0xf6)] !== 0x0 && $(_0x12cfb7(0x262))['val']() === _0x12cfb7(0x132) && _0x32ecc6[_0x12cfb7(0xb5)] < 0x0 && (_0x32ecc6['efrMulti'] = 0x1 + _0x32ecc6[_0x12cfb7(0xb5)] * -0x1 * 0.25 * 0x2 - _0x32ecc6['aff'] * -0x1 * 0.75 * 0.75, _0x32ecc6[_0x12cfb7(0x215)] = 1.5); return _0x32ecc6['type'] === _0x12cfb7(0x23a) && (_0x32ecc6[_0x12cfb7(0x22f)] *= info[_0x12cfb7(0x24e)]['Marksman'][Marksman[_0x12cfb7(0x1bb)]][0x0], _0x32ecc6[_0x12cfb7(0x233)] *= info[_0x12cfb7(0x24e)][_0x12cfb7(0xa2)][Marksman['selectedIndex']][0x1]), !_0x32ecc6[_0x12cfb7(0x193)] && (_0x32ecc6['augPRM'] *= info[_0x12cfb7(0x24e)][_0x12cfb7(0x1af)][SneakAttack['selectedIndex']]['PRM'], _0x32ecc6[_0x12cfb7(0x233)] *= info[_0x12cfb7(0x24e)]['SneakAttack'][SneakAttack[_0x12cfb7(0x1bb)]][_0x12cfb7(0x24a)]), {..._0x32ecc6 }; }

function getCritEle(_0x333cfe, _0x2ee487) { const _0x1c4715 = _0x3d07b; return _0x333cfe ? { 'PEM': info[_0x1c4715(0x24e)][_0x1c4715(0xb8)][CriticalElement['selectedIndex']][_0x1c4715(0xe4)], 'EFE': 0x1 + (info[_0x1c4715(0x24e)][_0x1c4715(0xb8)][CriticalElement['selectedIndex']]['PEM'] - 0x1) * _0x2ee487 } : { 'PEM': 0x1, 'EFE': 0x1 }; }

function getCritBoost(_0xb20ec9, _0x3ccb2a) { const _0x14e5ad = _0x3d07b; return _0xb20ec9 ? { 'PRM': info[_0x14e5ad(0x24e)]['CriticalBoost'][CriticalBoost[_0x14e5ad(0x1bb)]][_0x14e5ad(0x24a)], 'EFR': 0x1 + (info[_0x14e5ad(0x24e)][_0x14e5ad(0x18a)][CriticalBoost[_0x14e5ad(0x1bb)]]['PRM'] - 0x1) * _0x3ccb2a } : { 'PRM': 0x1, 'EFR': 0x1 }; }

function DamageCalculations(_0x4b497e) { const _0x4ee056 = _0x3d07b; if (_0x4b497e[_0x4ee056(0x1b9)] === ![])[_0x4b497e[_0x4ee056(0x1e6)], _0x4b497e['rawNon'], _0x4b497e[_0x4ee056(0x25a)], _0x4b497e[_0x4ee056(0x237)]] = [0x0, 0x0, 0x0, 0x0];
    else { _0x4b497e[_0x4ee056(0x1e6)] = Math[_0x4ee056(0x223)](_0x4b497e[_0x4ee056(0x10a)] * _0x4b497e[_0x4ee056(0x115)] + _0x4b497e['BR'], 0xa28); const _0x280f4b = _0x4b497e['raw'] * _0x4b497e[_0x4ee056(0x24a)] * getRawHZ(lower(_0x4b497e[_0x4ee056(0x224)])) * _0x4b497e[_0x4ee056(0xa9)] / 0x2710;
        _0x4b497e[_0x4ee056(0x1e7)] = Math[_0x4ee056(0x149)](0x1, _0x280f4b * _0x4b497e[_0x4ee056(0x22f)]), _0x4b497e['efr'] = Math[_0x4ee056(0x149)](0x1, _0x280f4b * _0x4b497e[_0x4ee056(0x233)] * getCritBoost(_0x4b497e['Crit'], _0x4b497e[_0x4ee056(0xb5)])[_0x4ee056(0x263)]), _0x4b497e[_0x4ee056(0x237)] = Math['max'](0x1, _0x280f4b * _0x4b497e['augPRM'] * getCritBoost(_0x4b497e[_0x4ee056(0xfb)], _0x4b497e[_0x4ee056(0xb5)])[_0x4ee056(0x24a)]); } if (Object['prototype']['hasOwnProperty'][_0x4ee056(0x102)](_0x4b497e, _0x4ee056(0x248)) && _0x4b497e[_0x4ee056(0x248)] === !![])[_0x4b497e[_0x4ee056(0x11f)], _0x4b497e[_0x4ee056(0x10e)], _0x4b497e['efe'], _0x4b497e[_0x4ee056(0x165)]] = [_0x4b497e[_0x4ee056(0x18d)], _0x4b497e[_0x4ee056(0x18d)], _0x4b497e[_0x4ee056(0x18d)], _0x4b497e[_0x4ee056(0x18d)]];
    else { if (_0x4b497e['Ele'] === ![] || _0x4b497e['eleType'] === _0x4ee056(0x184) && !/BowGun/ [_0x4ee056(0x264)](weaponType['value']))[_0x4b497e[_0x4ee056(0x11f)], _0x4b497e[_0x4ee056(0x10e)], _0x4b497e[_0x4ee056(0x1fd)], _0x4b497e[_0x4ee056(0x165)]] = [0x0, 0x0, 0x0, 0x0];
        else { _0x4b497e['eleAmmo'] = /BowGun/ [_0x4ee056(0x264)](weaponType[_0x4ee056(0xcc)]) && _0x4b497e[_0x4ee056(0x1c7)] !== _0x4ee056(0x184) ? 0x1 + _0x4b497e[_0x4ee056(0x1e6)] / 0x64 : 0x1, _0x4b497e[_0x4ee056(0x11f)] = Math[_0x4ee056(0x223)](_0x4b497e[_0x4ee056(0x18d)] * _0x4b497e['BEM'] + _0x4b497e['BE'], 0x16d) * _0x4b497e['eleAmmo']; const _0x3d2954 = _0x4b497e[_0x4ee056(0x11f)] * _0x4b497e[_0x4ee056(0xe4)] * (getEleHZ(_0x4b497e['eleType']) / 0x64) * _0x4b497e[_0x4ee056(0x11a)] * _0x4b497e[_0x4ee056(0x159)];
            _0x4b497e[_0x4ee056(0x10e)] = Math[_0x4ee056(0x149)](0x1, _0x3d2954), _0x4b497e['efe'] = Math[_0x4ee056(0x149)](0x1, _0x3d2954 * getCritEle(_0x4b497e[_0x4ee056(0xfb)], _0x4b497e[_0x4ee056(0xb5)])['EFE']), _0x4b497e['eleCrit'] = Math['max'](0x1, _0x3d2954 * getCritEle(_0x4b497e['Crit'], _0x4b497e[_0x4ee056(0xb5)])[_0x4ee056(0xe4)]); } } return {..._0x4b497e }; }
const sharpnessReduction = _0x34f4ae => 0x1 / (0x1 - _0x34f4ae);

function GunlanceShelling(_0x5b61eb, _0x1ab98f, _0x45a106, _0x5a7f96) { const _0x262964 = _0x3d07b,
        _0x37c25b = new RegExp(getWeapon()[_0x262964(0x10c)] + _0x262964(0x13d) + getWeapon()[_0x262964(0x1c1)]); let _0x337c6e = 0x1,
        _0x1c406f = 0x1;
    $(Object[_0x262964(0x183)](getAttacks())[_0x262964(0x147)](_0x354b32 => _0x37c25b['test'](_0x354b32)))[_0x262964(0x120)](function(_0x17bcf1) { const _0x3827ed = _0x262964;
        _0x337c6e = ~~(this[0x1][_0x3827ed(0xa9)] * info[_0x3827ed(0x24e)]['Bombardier'][Bombardier[_0x3827ed(0x1bb)]][0x0] * info[_0x3827ed(0x24e)][_0x3827ed(0x24c)][Artillery[_0x3827ed(0x1bb)]][_0x3827ed(0x115)]), _0x1c406f = ~~(this[0x1][_0x3827ed(0xa9)] * info[_0x3827ed(0x24e)][_0x3827ed(0x15d)][Bombardier[_0x3827ed(0x1bb)]][0x1] * info[_0x3827ed(0x24e)][_0x3827ed(0x24c)][Artillery[_0x3827ed(0x1bb)]][_0x3827ed(0x115)]); const _0x4d826b = ['replaceME', this[0x0], 0x0, _0x337c6e + '\x20/\x20' + _0x337c6e, this[0x1][_0x3827ed(0x18d)] + _0x3827ed(0x25d) + this[0x1][_0x3827ed(0x18d)], (_0x337c6e + this[0x1][_0x3827ed(0x18d)]) * (this[0x1][_0x3827ed(0xcd)] + 0x1) + '\x20/\x20' + (_0x337c6e + this[0x1][_0x3827ed(0x18d)]) * (this[0x1][_0x3827ed(0xcd)] + 0x1), _0x1c406f, this[0x1][_0x3827ed(0x18d)], (_0x1c406f + this[0x1]['baseEle']) * (this[0x1][_0x3827ed(0xcd)] + 0x1)];
        _0x5b61eb[_0x3827ed(0xfd)](_0x4d826b), _0x1ab98f[0x0] += 0x0, _0x1ab98f[0x1] += _0x337c6e * TimesUsed(_0x17bcf1 + 0x1c), _0x1ab98f[0x2] += _0x337c6e * TimesUsed(_0x17bcf1 + 0x1c), _0x1ab98f[0x3] += this[0x1]['baseEle'] * TimesUsed(_0x17bcf1 + 0x1c), _0x1ab98f[0x4] += this[0x1][_0x3827ed(0x18d)] * TimesUsed(_0x17bcf1 + 0x1c), _0x1ab98f[0x5] += (_0x337c6e + this[0x1][_0x3827ed(0x18d)]) * (_0x45a106[_0x3827ed(0xcd)] + 0x1) * TimesUsed(_0x17bcf1 + 0x1c), _0x1ab98f[0x6] += (_0x337c6e + this[0x1][_0x3827ed(0x18d)]) * (_0x45a106[_0x3827ed(0xcd)] + 0x1) * TimesUsed(_0x17bcf1 + 0x1c), _0x1ab98f[0x7] += (_0x1c406f + this[0x1][_0x3827ed(0x18d)]) * (_0x45a106[_0x3827ed(0xcd)] + 0x1) * TimesUsed(_0x17bcf1 + 0x1c); });! /Inputs|inputButton/ [_0x262964(0x264)](window[_0x262964(0xc3)][_0x262964(0x22b)]['className']) && BuildDamageTable(_0x5b61eb, _0x262964(0x1fa), _0x5a7f96);
    c0['innerHTML'] = '' + formatNumbers(_0x1ab98f[0x0]), d0[_0x262964(0x146)] = formatNumbers(_0x1ab98f[0x1]) + _0x262964(0x25d) + formatNumbers(_0x1ab98f[0x2]), e0[_0x262964(0x146)] = formatNumbers(_0x1ab98f[0x3]) + _0x262964(0x25d) + formatNumbers(_0x1ab98f[0x4]), f0['innerHTML'] = formatNumbers(_0x1ab98f[0x5]) + _0x262964(0x25d) + formatNumbers(_0x1ab98f[0x6]), g0[_0x262964(0x146)] = '' + formatNumbers(_0x1ab98f[0x7]); return; }

function BuildDamageTable(_0x3cac42, _0xa41dfe, _0x377111) { const _0x5e9c94 = _0x3d07b,
        _0x36c70f = ammoTable[_0x5e9c94(0x19e)][_0x5e9c94(0x236)],
        _0x39e620 = dpsTable[_0x5e9c94(0x19e)]['display'],
        _0x39dc28 = /gray/ ['test'](filterCombo[_0x5e9c94(0xc9)]) ? document[_0x5e9c94(0x1bc)]('.a') : document[_0x5e9c94(0x1bc)](_0x5e9c94(0x12a)); let _0x10a936 = 0x0; const _0x288542 = document[_0x5e9c94(0x268)]('#' + _0xa41dfe + 'Head'),
        _0x3044e2 = document[_0x5e9c94(0x268)]('#' + _0xa41dfe + _0x5e9c94(0x1bd)),
        _0x597ccc = document['createElement'](_0x5e9c94(0x1f1)),
        _0x544d7a = document[_0x5e9c94(0x134)](_0x5e9c94(0x185)),
        _0x4e77c3 = document[_0x5e9c94(0x134)]('tr'),
        _0xd56753 = document[_0x5e9c94(0x134)](_0x5e9c94(0x211)),
        _0x2515be = _0x3cac42[_0x5e9c94(0x99)](0x0, 0x1);
    _0x2515be[0x0]['forEach'](_0xfb55e8 => { const _0x51fb34 = _0x5e9c94,
            _0x2ce19e = document[_0x51fb34(0x134)]('th'),
            _0x5029e6 = document[_0x51fb34(0xf3)](_0xfb55e8);
        _0x2ce19e[_0x51fb34(0x107)](_0x5029e6), _0x4e77c3['appendChild'](_0x2ce19e); }), _0x544d7a['appendChild'](_0x4e77c3), _0x288542[_0x5e9c94(0x101)](_0x544d7a), _0x3cac42[_0x5e9c94(0xfc)](_0x549388 => { const _0x3e8ebc = _0x5e9c94,
            _0x492ba9 = document[_0x3e8ebc(0x134)]('tr');
        Object[_0x3e8ebc(0xcf)](_0x549388)['forEach'](_0x517662 => { const _0x12e596 = _0x3e8ebc; if (_0x517662 === _0x12e596(0x100)) { if ($(previousWeaponType)[_0x12e596(0x15f)]() === $(weaponType)[_0x12e596(0x15f)]() && _0x39dc28[_0x12e596(0x117)] > 0x0 && (window[_0x12e596(0xc3)][_0x12e596(0x22b)] === dropWeapon && weaponType[_0x12e596(0xcc)] !== cb || window[_0x12e596(0xc3)]['target'] !== dropWeapon) && window[_0x12e596(0xc3)]['target']['id'] !== _0x12e596(0x118) && ($(weaponType)[_0x12e596(0x15f)]() === _0x12e596(0xca) && previousWeapon[_0x12e596(0xcc)] === dropWeapon[_0x12e596(0xcc)] || $(weaponType)['val']() !== _0x12e596(0xca))) _0x492ba9[_0x12e596(0x107)](_0x39dc28[_0x10a936]), ++_0x10a936;
                else { const _0x41188f = document['createElement']('td'),
                        _0x25a153 = document[_0x12e596(0x134)](_0x12e596(0x247));
                    _0x25a153[_0x12e596(0x1b3)](_0x12e596(0x224), _0x12e596(0x1fc)), _0x25a153['setAttribute'](_0x12e596(0xd1), _0x12e596(0x1ec) + _0x10a936), _0x25a153['setAttribute'](_0x12e596(0x1ea), 0x14), $(weaponType)[_0x12e596(0x15f)]() === _0x12e596(0xca) && previousWeapon[_0x12e596(0xcc)] !== dropWeapon[_0x12e596(0xcc)] && (comboTracker = [], UpdateComboDisplay()), _0x10a936 === 0x0 ? (_0x25a153[_0x12e596(0x1b3)]('id', _0x12e596(0x21a)), _0x25a153[_0x12e596(0x1b3)](_0x12e596(0x19c), 0x1), _0x25a153['setAttribute'](_0x12e596(0xcc), 0x1), _0x25a153[_0x12e596(0x1b3)](_0x12e596(0xd1), _0x12e596(0x261))) : (_0x25a153[_0x12e596(0x1b3)]('id', _0x10a936), _0x25a153['setAttribute'](_0x12e596(0xd1), 'inputs\x20hitsOfSharpInputs'), _0x25a153[_0x12e596(0x1b3)](_0x12e596(0x19c), 0x0), _0x25a153['setAttribute'](_0x12e596(0xcc), 0x0)), ++_0x10a936, _0x41188f[_0x12e596(0x107)](_0x25a153), _0x492ba9['appendChild'](_0x41188f); } } else { const _0x17be6d = document[_0x12e596(0x134)]('td'),
                    _0x516dc8 = document[_0x12e596(0xf3)](_0x517662);
                _0x17be6d[_0x12e596(0x107)](_0x516dc8), _0x492ba9[_0x12e596(0x107)](_0x17be6d); } }), _0xd56753[_0x3e8ebc(0x107)](_0x492ba9), _0x3044e2[_0x3e8ebc(0x101)](_0xd56753); }), _0x597ccc[_0x5e9c94(0x1b3)]('id', _0xa41dfe + _0x5e9c94(0xbc)), _0x544d7a[_0x5e9c94(0x1b3)]('id', _0xa41dfe + _0x5e9c94(0x131)), _0xd56753[_0x5e9c94(0x1b3)]('id', _0xa41dfe + _0x5e9c94(0x1bd)), _0xd56753[_0x5e9c94(0xc9)] = /(BowGun)/ [_0x5e9c94(0x264)](weaponType['value']) ? 'rangedTable' : _0x5e9c94(0x9b), damageContainer[_0x5e9c94(0xc9)] = /(BowGun)/ [_0x5e9c94(0x264)](weaponType['value']) ? 'rangedContainer' : _0x5e9c94(0x21e), ammoTable[_0x5e9c94(0x19e)][_0x5e9c94(0x236)] = _0x36c70f, dpsTable[_0x5e9c94(0x19e)]['display'] = _0x39e620; if (_0xa41dfe !== _0x5e9c94(0x12f) && _0xa41dfe !== 'ammo') { const [_0x432989, ..._0x1fd179] = /BowGun/ [_0x5e9c94(0x264)](weaponType[_0x5e9c94(0xcc)]) ? [_0x10a936, 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'] : [_0x10a936, 'a', 'b', 'c', 'd', 'e', 'f', 'g']; if (/BowGun/ [_0x5e9c94(0x264)]($(weaponType)[_0x5e9c94(0x15f)]()) && !/BowGun/ [_0x5e9c94(0x264)]($(previousWeaponType)[_0x5e9c94(0x15f)]())) $('#comboCountContainer')[_0x5e9c94(0x1cb)]();
        else !/BowGun/ [_0x5e9c94(0x264)]($(weaponType)[_0x5e9c94(0x15f)]()) && /BowGun/ [_0x5e9c94(0x264)]($(previousWeaponType)[_0x5e9c94(0x15f)]()) && $(_0x5e9c94(0x15e))[_0x5e9c94(0x163)]();
        $(_0x5e9c94(0xc7))['val']($('#dropWeapon')[_0x5e9c94(0x15f)]()), $(_0x5e9c94(0x110))['val'](weaponType[_0x5e9c94(0xcc)]); for (let _0x42027e = 0x0; _0x42027e < _0x432989; ++_0x42027e) { let _0x3861cd = 0x0;
            _0x1fd179[_0x5e9c94(0xfc)](_0x29bb3d => { const _0x506995 = _0x5e9c94;
                $('#' + _0xa41dfe + _0x506995(0x1bd))[0x0]['children'][_0x42027e]['children'][_0x3861cd]['id'] = _0x29bb3d + _0x42027e, $('#' + _0xa41dfe + 'Body')[0x0][_0x506995(0xaa)][_0x42027e]['children'][_0x3861cd][_0x506995(0xc9)] = _0x29bb3d + '\x20' + _0x42027e, ++_0x3861cd; }); }! /BowGun/ [_0x5e9c94(0x264)]($(weaponType)[_0x5e9c94(0x15f)]()) && $(_0x5e9c94(0x1ff) + _0xa41dfe + _0x5e9c94(0x9e))['each'](function(_0x4478b5, _0xb00c67) { const _0x556679 = _0x5e9c94,
                _0x1746a7 = document[_0x556679(0x134)]('td');
            _0x1746a7[_0x556679(0x146)] = '<button\x20type=\x22button\x22\x20aria-pressed=\x22false\x22\x20id=\x22' + _0x4478b5 + _0x556679(0x16f) + _0x4478b5 + '\x22\x20class=\x22inputButton\x20inc\x22>&#8679</button><output\x20class=\x22label\x22>' + _0xb00c67['textContent'] + '</output>', _0x1746a7['id'] = 'b' + _0x4478b5, this[_0x556679(0x101)](_0x1746a7), $(_0x1746a7)[_0x556679(0x203)]('b\x20' + _0x4478b5 + _0x556679(0x205)); }); } /blue/ [_0x5e9c94(0x264)](filterCombo[_0x5e9c94(0xc9)]) && $('.a')['each'](_0x1840d8 => { const _0x1244eb = _0x5e9c94;
        $('.' + _0x1840d8)[0x0]['style'][_0x1244eb(0x236)] === _0x1244eb(0xe8) && $('.' + _0x1840d8)[_0x1244eb(0x1cb)](); }); const _0x58c0e1 = !/BowGun/ [_0x5e9c94(0x264)](weaponType[_0x5e9c94(0xcc)]) ? _0x5e9c94(0x11b) : _0x5e9c94(0x197);
    Object[_0x5e9c94(0xcf)](dpsTable[_0x5e9c94(0xaa)])[_0x5e9c94(0xfc)](_0x59f5d0 => { const _0x22ee40 = _0x5e9c94;
        Object['values'](_0x59f5d0[_0x22ee40(0xaa)])[_0x22ee40(0xfc)](_0x3b753b => { const _0x904169 = _0x22ee40;
            $(_0x3b753b)[_0x904169(0x203)](_0x58c0e1); }); }), Object['values'](damageContainer[_0x5e9c94(0xaa)][0x0][_0x5e9c94(0xaa)][0x1][_0x5e9c94(0xaa)])[_0x5e9c94(0xfc)](_0x1c07f1 => { const _0x5f50c9 = _0x5e9c94;
        $(_0x1c07f1)[_0x5f50c9(0xaa)]()[_0x5f50c9(0x203)]('cell'); }); }

function MonChart() { const _0x1cb2d6 = _0x3d07b; if (dropQuest['value'] !== '') { let _0x208655 = []; const _0x1696a2 = /Bow/ [_0x1cb2d6(0x264)](weaponType['value']) ? 'shot' : weaponType['value'][0x0] === 'H' ? _0x1cb2d6(0x23d) : _0x1cb2d6(0x25f),
            _0x358d12 = [_0x1cb2d6(0x22e) + info[_0x1cb2d6(0xf5)][dropQuest['value']][_0x1cb2d6(0x201)], _0x1cb2d6(0x122), _0x1cb2d6(0x1ef), _0x1cb2d6(0x23a), _0x1cb2d6(0x1c6), _0x1cb2d6(0x16e), _0x1cb2d6(0x1bf), 'Ice', _0x1cb2d6(0x24d)],
            _0x3f0b5f = document[_0x1cb2d6(0x134)](_0x1cb2d6(0x1f1)),
            _0x3cf6aa = document[_0x1cb2d6(0x268)](_0x1cb2d6(0xd3)),
            _0xe6606 = document[_0x1cb2d6(0x134)]('tr');
        _0x358d12['forEach'](_0x11ac27 => { const _0x285da1 = _0x1cb2d6,
                _0x1df5a3 = document['createElement']('th'),
                _0x395483 = document['createTextNode'](_0x11ac27);
            _0x1df5a3[_0x285da1(0x107)](_0x395483), _0xe6606[_0x285da1(0x107)](_0x1df5a3); }), _0x3f0b5f[_0x1cb2d6(0x107)](_0xe6606), _0x208655 = Object[_0x1cb2d6(0x183)](info['monster'][_0x1cb2d6(0x1d9)][dropMonster[_0x1cb2d6(0xcc)]])[_0x1cb2d6(0x17f)]((_0x11a476, _0x33c128) => { const _0x683c84 = _0x1cb2d6; if (_0x33c128[0x1][_0x1696a2] === _0x11a476[0x1][_0x1696a2] && document['querySelector'](_0x683c84(0x1ca))[_0x683c84(0xa1)] !== _0x683c84(0xe8)) return _0x33c128[0x1][lower(document[_0x683c84(0x268)](_0x683c84(0x1ca))[_0x683c84(0xa1)])] - _0x11a476[0x1][lower(document[_0x683c84(0x268)](_0x683c84(0x1ca))[_0x683c84(0xa1)])]; return _0x33c128[0x1][_0x1696a2] - _0x11a476[0x1][_0x1696a2]; }), _0x208655[_0x1cb2d6(0xfc)](_0x1a8a7a => { const _0x38775a = _0x1cb2d6,
                _0x3b4301 = document[_0x38775a(0x134)]('tr'),
                _0x4409e8 = [_0x1a8a7a[0x1][_0x38775a(0x14f)] + '\x20' + _0x1a8a7a[0x1][_0x38775a(0x10b)]][_0x38775a(0x137)](Object[_0x38775a(0xcf)](_0x1a8a7a[0x1])[_0x38775a(0x99)](0x3, 0x8)); for (let _0x249961 = 0x0; _0x249961 < 0x9; ++_0x249961) { const _0x4645e8 = document['createElement']('td'); if (_0x249961 !== 0x0) { _0x4409e8[_0x249961] = WaterBlight['checked'] && /1|2|3/ ['test'](_0x249961) ? Math['min'](0x64, ~~(Math['max'](_0x4409e8[_0x249961], _0x4409e8[_0x249961] * 0.63 + 22.2) + 0x3)) : _0x4409e8[_0x249961]; if (_0x4409e8[_0x249961] < 0xe) _0x4645e8['setAttribute'](_0x38775a(0xd1), 'F');
                    else { if (_0x4409e8[_0x249961] < 0xf) _0x4645e8[_0x38775a(0x1b3)](_0x38775a(0xd1), 'C');
                        else { if (_0x4409e8[_0x249961] < 0x2d) _0x4645e8[_0x38775a(0x1b3)](_0x38775a(0xd1), 'B');
                            else { if (_0x4409e8[_0x249961] < 0x41) _0x4645e8[_0x38775a(0x1b3)](_0x38775a(0xd1), 'A');
                                else _0x4409e8[_0x249961] >= 0x41 && _0x4645e8[_0x38775a(0x1b3)](_0x38775a(0xd1), 'S'); } } }
                    _0x4409e8[_0x249961] = ~~_0x4409e8[_0x249961]; } const _0x3422b2 = document[_0x38775a(0xf3)](_0x4409e8[_0x249961]);
                _0x4645e8[_0x38775a(0x107)](_0x3422b2), _0x3b4301[_0x38775a(0x107)](_0x4645e8); }
            _0x3f0b5f['appendChild'](_0x3b4301); }), _0x3f0b5f[_0x1cb2d6(0x1b3)]('id', _0x1cb2d6(0x202)), _0x3cf6aa['replaceWith'](_0x3f0b5f), Object[_0x1cb2d6(0xcf)](monTableContainer['children'])[_0x1cb2d6(0xfc)](_0x1d08e8 => { const _0x31feb7 = _0x1cb2d6;
            Object[_0x31feb7(0xcf)](_0x1d08e8[_0x31feb7(0xaa)])[_0x31feb7(0xfc)](_0x39caf3 => { const _0x1436d1 = _0x31feb7;
                _0x39caf3[_0x1436d1(0xc9)] = _0x1436d1(0x94); }); }); } }
$('select.demon')['on'](_0x3d07b(0x10d), function(_0x192510) { const _0x35919f = _0x3d07b;
    _0x192510[_0x35919f(0x22b)][_0x35919f(0x1bb)] > 0x0 && ($(_0x35919f(0x177) + _0x192510[_0x35919f(0x22b)]['id'] + ')')[0x0][_0x35919f(0x1bb)] = 0x0, $(_0x35919f(0x177) + _0x192510[_0x35919f(0x22b)]['id'] + ')')[0x1][_0x35919f(0x1bb)] = 0x0); }), $([dropWeapon, weaponType])['on'](_0x3d07b(0x10d), _0x446598 => { weaponType['value'] === cb && classChange(); }), $([dropWeapon, weaponType])['on'](_0x3d07b(0x10d), _0x40242a => { const _0x4b79b0 = _0x3d07b; if (weaponType[_0x4b79b0(0xcc)] === _0x4b79b0(0xca)) { $(BowCoating)[_0x4b79b0(0x9c)](); const _0x17f143 = [];
        getWeapon()[_0x4b79b0(0x130)][_0x4b79b0(0xfc)](_0x3816d3 => { const _0x2ee621 = _0x4b79b0,
                _0x23d22f = document[_0x2ee621(0x134)](_0x2ee621(0xf0));
            _0x23d22f['textContent'] = _0x3816d3, $(BowCoating)['append'](_0x23d22f), _0x17f143[_0x2ee621(0xfd)](info['skills']['' + _0x3816d3]); }), info[_0x4b79b0(0x24e)][_0x4b79b0(0x12b)] = _0x17f143; } });

function classChange() { const _0x45d2e1 = _0x3d07b;
    $([unique, dango, section1, section2, ele])['removeClass'](previousWeaponType['value']), $([unique, dango, section1, section2, ele])[_0x45d2e1(0x203)](weaponType['value']);
    previousWeaponType['textContent'] !== '' && ComboReset(); if (weaponType[_0x45d2e1(0xcc)] === db) info[_0x45d2e1(0x24e)][_0x45d2e1(0xc6)] = info[_0x45d2e1(0x24e)][_0x45d2e1(0x1ae)];
    else { if (weaponType['value'] === bow) info[_0x45d2e1(0x24e)][_0x45d2e1(0xc6)] = info['skills'][_0x45d2e1(0x93)];
        else weaponType[_0x45d2e1(0xcc)] === lbg || weaponType[_0x45d2e1(0xcc)] === hbg ? info[_0x45d2e1(0x24e)]['ChainCrit'] = info[_0x45d2e1(0x24e)][_0x45d2e1(0x204)] : info['skills'][_0x45d2e1(0xc6)] = info[_0x45d2e1(0x24e)][_0x45d2e1(0x178)]; }
    info['skills'][_0x45d2e1(0x15d)] = /Gun|Charge/ [_0x45d2e1(0x264)](weaponType[_0x45d2e1(0xcc)]) ? info[_0x45d2e1(0x24e)]['bombardier'][weaponType[_0x45d2e1(0xcc)]] : [], $('.classSpecific')[_0x45d2e1(0xb6)](_0x45d2e1(0x1bb), 0x0), $(_0x45d2e1(0xa0))[_0x45d2e1(0x1cb)](), $(_0x45d2e1(0xa0))[_0x45d2e1(0x213)]()[_0x45d2e1(0x1cb)](), weaponId[_0x45d2e1(0x146)] = '', weaponId[_0x45d2e1(0x146)] = weaponType['value'], $('.' + $(weaponType)[_0x45d2e1(0x15f)]())['parent']()[_0x45d2e1(0x163)](), $('.' + $(weaponType)[_0x45d2e1(0x15f)]())[_0x45d2e1(0x163)](), /Bow/ ['test']($(weaponType)[_0x45d2e1(0x15f)]()) ? ($(_0x45d2e1(0xd6))['parent']()[_0x45d2e1(0x163)](), $(_0x45d2e1(0xd6))[_0x45d2e1(0x163)](), $(ammoTable)['hide']()) : MeleeElements(); }

function MeleeElements() { const _0x476db9 = _0x3d07b;
    $('.melee')[_0x476db9(0x213)]()[_0x476db9(0x163)](), $(_0x476db9(0x17e))[_0x476db9(0x163)](); if (weaponType[_0x476db9(0xcc)] === _0x476db9(0x154)) { if (getWeapon()[_0x476db9(0x20b)] === _0x476db9(0x145)) impShieldCharge[_0x476db9(0x173)][_0x476db9(0x19e)] = 'display:\x27\x27', eleShieldCharge[_0x476db9(0x173)][_0x476db9(0x19e)] = _0x476db9(0xb9), eleShieldCharge['selectedIndex'] = 0x0;
        else getWeapon()[_0x476db9(0x20b)] === _0x476db9(0x267) && (impShieldCharge['parentNode'][_0x476db9(0x19e)] = 'display:none', impShieldCharge[_0x476db9(0x1bb)] = 0x0, eleShieldCharge[_0x476db9(0x173)][_0x476db9(0x19e)] = 'display:\x27\x27'); } }
$(window)['on'](_0x3d07b(0xe2), _0x477af7 => { const _0x17ace3 = _0x3d07b;
    keyDown = _0x477af7[_0x17ace3(0x109)][_0x17ace3(0x1a1)] === '-' ? ++keyDown : 0x0, keyDown === 0x3 && (ResetSkills(), DataCompile(), keyDown = 0x0); });

function ResetSkills(_0x30a1c7 = _0x3d07b(0x10f)) { const _0x3bc402 = _0x3d07b;
    $(_0x3bc402(0xc8))['each'](function() { const _0x431766 = _0x3bc402;
        this[_0x431766(0x12c)] = ![]; }); for (let _0x1f6141 = 0x0; _0x1f6141 < $(_0x30a1c7)[_0x3bc402(0x117)]; ++_0x1f6141) { $(_0x30a1c7)[_0x1f6141][_0x3bc402(0x1bb)] = 0x0; } }
$(_0x3d07b(0x1ab))['on'](_0x3d07b(0x10d), () => { ComboReset(), UpdateComboDisplay(); }), $(document)['on'](_0x3d07b(0x10d), function(_0x2f6db3) { const _0x44c8ef = _0x3d07b; if (_0x2f6db3[_0x44c8ef(0x22b)] === ($(_0x44c8ef(0x262))[0x0] || $(_0x44c8ef(0x19f))[0x0])) DataCompile(_0x2f6db3);
    else _0x2f6db3['target'] === weaponType && (weaponType[_0x44c8ef(0xc9)] = /Bow/ [_0x44c8ef(0x264)](weaponType[_0x44c8ef(0xcc)]) ? _0x44c8ef(0x108) : _0x44c8ef(0x152)); }), $(_0x3d07b(0x1f0))['on'](_0x3d07b(0xed), () => { const _0x52cfa1 = _0x3d07b;
    $(_0x52cfa1(0x1f0))[_0x52cfa1(0x1c8)](_0x52cfa1(0x1b7)), info['skills'][_0x52cfa1(0x265)] = $(redScroll)['hasClass'](_0x52cfa1(0x105)) ? info[_0x52cfa1(0x24e)][_0x52cfa1(0x1f6)][_0x52cfa1(0xbb)] : info['skills'][_0x52cfa1(0x1f6)][_0x52cfa1(0x92)], info[_0x52cfa1(0x24e)][_0x52cfa1(0x21b)] = $(redScroll)[_0x52cfa1(0xcb)]('invis') ? info['skills'][_0x52cfa1(0x1f4)]['blue'] : info[_0x52cfa1(0x24e)][_0x52cfa1(0x1f4)]['red'], DataCompile(); }), $(_0x3d07b(0x8d))['on']('mousedown', function(_0x459ec0) { const _0x30756c = _0x3d07b; /DemonDrug/ [_0x30756c(0x264)](_0x459ec0['target']['id']) && (_0x459ec0[_0x30756c(0x22b)]['id'] === _0x30756c(0x13e) ? MegaDemonDrug[_0x30756c(0x12c)] = ![] : DemonDrug['checked'] = ![]); if (this !== filterCombo) { const _0xdffa14 = dropHZ[_0x30756c(0x1bb)];
        DataCompile(), this === WaterBlight && (MonChart(), dropHZ[_0x30756c(0x1bb)] = _0xdffa14); } else this === filterCombo && FilterTableForComboAttacks(); });

function ToggleAmmoTables() { const _0x3cdaca = _0x3d07b;
    dpsTable[_0x3cdaca(0x19e)] = dpsTable[_0x3cdaca(0x19e)]['display'] !== 'none' ? _0x3cdaca(0xb9) : _0x3cdaca(0x1b2), ammoTable[_0x3cdaca(0x19e)] = dpsTable[_0x3cdaca(0x19e)][_0x3cdaca(0x236)] !== _0x3cdaca(0xe8) ? 'display:none' : _0x3cdaca(0x1b2); }

function calculateAmmoFrames(_0x34a637) { const _0x4d26c7 = _0x3d07b; let _0x367c02 = /Sub-Lv|Explosion| Procs|\(RF\+\d\)/g ['test'](_0x34a637[_0x4d26c7(0x253)]) ? _0x34a637['attackName'][_0x4d26c7(0x1aa)](/Sub-| Explosion| \(RF\+\d\) Procs| Procs| \(RF\+\d\)/g, '') : _0x34a637[_0x4d26c7(0x253)];
    _0x367c02 = /(?<!Lv)\d/ [_0x4d26c7(0x264)](_0x367c02) ? _0x367c02['slice'](0x0, _0x367c02['length'] - 0x1) + 'Lv' + _0x367c02['slice'](-0x1) : _0x367c02; const _0x31dcad = {};
    _0x31dcad['ammoIncrease'] = info[_0x4d26c7(0x121)][_0x4d26c7(0x20d)][_0x367c02][AmmoUP[_0x4d26c7(0x1bb)]], _0x31dcad[_0x4d26c7(0x1e8)] = info[_0x4d26c7(0x121)][_0x4d26c7(0x1b8)][_0x367c02][Math[_0x4d26c7(0x149)](0x0, Math['min'](0x5, _0x34a637[_0x4d26c7(0x1b8)] - 0x1 + RecoilDown[_0x4d26c7(0x1bb)] + (info[_0x4d26c7(0x24e)]['BowgunBarrel'][BowgunBarrel['selectedIndex']][_0x4d26c7(0x17b)] > 0x0 ? TuneUp['selectedIndex'] + info[_0x4d26c7(0x24e)][_0x4d26c7(0x1e4)][BowgunBarrel[_0x4d26c7(0x1bb)]][_0x4d26c7(0x17b)] : 0x0) - ($(CriticalFirePower)[0x0][_0x4d26c7(0x1bb)] > 0x0 ? 0x2 : 0x0)))], _0x31dcad[_0x4d26c7(0x1e8)] = /\(RF\+\d\)/ [_0x4d26c7(0x264)](_0x34a637['attackName']) ? _0x31dcad[_0x4d26c7(0x1e8)] + '\x20' + _0x34a637[_0x4d26c7(0x253)]['match'](/\(RF\+\d\)/)[0x0] : _0x31dcad[_0x4d26c7(0x1e8)], _0x31dcad[_0x4d26c7(0x199)] = info['ammo'][_0x4d26c7(0x1b8)]['frames'][_0x31dcad[_0x4d26c7(0x1e8)]], _0x31dcad['reloadSpeed'] = info[_0x4d26c7(0x121)][_0x4d26c7(0x1e3)][_0x367c02][Math[_0x4d26c7(0x149)](0x0, Math[_0x4d26c7(0x223)](0x8, _0x34a637[_0x4d26c7(0x1e3)] + ReloadSpeed[_0x4d26c7(0x1bb)] + info[_0x4d26c7(0x24e)]['BowgunBarrel'][BowgunBarrel[_0x4d26c7(0x1bb)]]['reload'] + (BowgunBarrel[_0x4d26c7(0x1bb)] === 0x0 && TuneUp[_0x4d26c7(0x1bb)] > 0x0 ? 0x1 : 0x0) - ($(_0x4d26c7(0x161))[0x0][_0x4d26c7(0x1bb)] > 0x0 ? 0x2 : 0x0)))], _0x31dcad[_0x4d26c7(0x16a)] = info['ammo'][_0x4d26c7(0x1e3)][_0x4d26c7(0x26c)][_0x31dcad['reloadSpeed']], _0x31dcad[_0x4d26c7(0x1db)] = _0x34a637[_0x4d26c7(0x1db)][_0x34a637[_0x4d26c7(0x1a4)]] + _0x31dcad[_0x4d26c7(0x198)], _0x31dcad[_0x4d26c7(0xfe)] = info[_0x4d26c7(0x24e)][_0x4d26c7(0x1ee)][SpareShot['selectedIndex']] + +spareAdjust[_0x4d26c7(0xcc)]; /(?<!snipe.*)explosion/ [_0x4d26c7(0x264)](_0x367c02) && Bombardier[_0x4d26c7(0x1bb)] > 0x0 && (_0x31dcad['spareShot'] += info[_0x4d26c7(0x24e)][_0x4d26c7(0x15d)][_0x367c02[_0x4d26c7(0x16b)](/Sticky|Wyvern/)[0x0]][0x2]); const _0x1d691b = 0x3c;
    _0x31dcad[_0x4d26c7(0x123)] = shotsCheck(_0x31dcad[_0x4d26c7(0x199)] / 0x1e, _0x31dcad[_0x4d26c7(0x16a)] / 0x1e, _0x34a637[_0x4d26c7(0x1db)][_0x34a637['isUsed']], _0x1d691b), _0x31dcad[_0x4d26c7(0x227)] = shotsCheck(_0x31dcad[_0x4d26c7(0x199)] / 0x1e, _0x31dcad[_0x4d26c7(0x16a)] / 0x1e, _0x31dcad['clipSize'], _0x1d691b, 0x64 / _0x31dcad[_0x4d26c7(0xfe)]), _0x31dcad[_0x4d26c7(0x97)] = Number[_0x4d26c7(0x18f)]((_0x31dcad[_0x4d26c7(0x227)] / _0x31dcad[_0x4d26c7(0x123)] - 0x1) * 0x64)[_0x4d26c7(0x14d)](0x2) + '%', _0x31dcad[_0x4d26c7(0x226)] = _0x34a637['ticsPer'] + 0x1; if (/Pierce Lv|Pierce [1-3]/ ['test'](_0x367c02)) _0x31dcad[_0x4d26c7(0x226)] *= JSON[_0x4d26c7(0xfa)](pierceAdjust[_0x4d26c7(0xcc)])[0x0];
    else /Pierc/ [_0x4d26c7(0x264)](_0x367c02) && (_0x31dcad[_0x4d26c7(0x226)] *= JSON[_0x4d26c7(0xfa)](pierceAdjust[_0x4d26c7(0xcc)])[0x1]); return _0x31dcad; }

function ComboReset() { const _0x2284dc = _0x3d07b;! /BowGun/ [_0x2284dc(0x264)]($(previousWeaponType)['val']()) && $(previousWeaponType)[_0x2284dc(0x15f)]() !== '' && ($(_0x2284dc(0x11d))[_0x2284dc(0x25c)](), $('.0:nth-child(n+\x203)')[_0x2284dc(0x15f)](0x0), $('.inputs')[_0x2284dc(0x15f)](0x0), $(_0x2284dc(0x1b1))[_0x2284dc(0x15f)](0x1), comboTracker = [], DataCompile()); }

function FilterTableForComboAttacks() { const _0x2ae73f = _0x3d07b;
    $(_0x2ae73f(0x19f))[_0x2ae73f(0x120)]((_0x289462, _0x57163c) => { const _0x29a038 = _0x2ae73f; /blue/ [_0x29a038(0x264)](filterCombo[_0x29a038(0xc9)]) && (_0x57163c[_0x29a038(0xcc)] === '0' || _0x57163c[_0x29a038(0x19e)] === 'display:\x20none;') ? $('.' + _0x289462)[_0x29a038(0x1cb)](): $('.' + _0x289462)[_0x29a038(0x163)](); }); }

function TimesUsed(_0x373033, _0x413b7f = comboTracker) { const _0x30822e = _0x3d07b; return _0x413b7f[_0x30822e(0x147)](_0x45cf16 => _0x45cf16 == _0x373033)['length']; }
$(document)['on'](_0x3d07b(0x10d), function(_0x5cb59a) { $(_0x5cb59a['target'])['hasClass']('inputs') && DataCompile(_0x5cb59a); }), $(document)['on'](_0x3d07b(0xed), function(_0x59b884) { const _0x28cdb3 = _0x3d07b; if ($(_0x59b884[_0x28cdb3(0x22b)])[_0x28cdb3(0xcb)](_0x28cdb3(0x18e))) { if ($(_0x59b884[_0x28cdb3(0x22b)])[_0x28cdb3(0xcb)](_0x28cdb3(0x176))) DecreaseComboCount(_0x59b884);
        else $(_0x59b884[_0x28cdb3(0x22b)])[_0x28cdb3(0xcb)](_0x28cdb3(0xc1)) && IncreaseComboCount(_0x59b884); } });

function IncreaseComboCount(_0x32700b) { const _0x456d0f = _0x3d07b; + $(_0x456d0f(0x19f))[_0x32700b[_0x456d0f(0x22b)]['id']][_0x456d0f(0xcc)] < 0x14 && (++$(_0x456d0f(0x19f))[_0x32700b[_0x456d0f(0x22b)]['id']][_0x456d0f(0xcc)], DataCompile()); }

function DecreaseComboCount(_0x5d810f) { const _0x5ef80c = _0x3d07b; if (_0x5d810f[_0x5ef80c(0x22b)]['id'] === '0' && +$(_0x5ef80c(0x19f))[_0x5d810f[_0x5ef80c(0x22b)]['id']]['value'] > 0x1) --$(_0x5ef80c(0x19f))[_0x5d810f[_0x5ef80c(0x22b)]['id']][_0x5ef80c(0xcc)], DataCompile();
    else +_0x5d810f[_0x5ef80c(0x22b)]['id'] > 0x0 && +$(_0x5ef80c(0x19f))[_0x5d810f[_0x5ef80c(0x22b)]['id']]['value'] > 0x0 && (--$(_0x5ef80c(0x19f))[_0x5d810f[_0x5ef80c(0x22b)]['id']][_0x5ef80c(0xcc)], DataCompile()); }
$(document)['on'](_0x3d07b(0xed), _0x4767dc => { const _0x151e69 = _0x3d07b,
        _0xb8aa47 = $(_0x4767dc[_0x151e69(0x22b)]);!_0xb8aa47['closest'](augToggle)[_0x151e69(0x117)] && $(_0x151e69(0x11e))[_0x151e69(0x250)](_0x151e69(0x236)) !== _0x151e69(0xe8) && _0x4767dc[_0x151e69(0x22b)] !== Qurious && $(_0x151e69(0x241))[_0x151e69(0x1c8)]('augVis\x20augInvis'); }), $(_0x3d07b(0xc4))['on'](_0x3d07b(0xed), _0x37123b => { const _0x42353f = _0x3d07b;
    _0x37123b[_0x42353f(0x243)](), info[weaponType[_0x42353f(0xcc)]]['weapons'][dropWeapon[_0x42353f(0xcc)]]['rampageSlots'] > 0x0 && ($(_0x42353f(0x241))[_0x42353f(0x1c8)](_0x42353f(0xdf)), $(_0x42353f(0x217))[_0x42353f(0x250)](_0x42353f(0x236), getWeapon()[_0x42353f(0xf6)] == 0x3 ? _0x42353f(0xe8) : '')); }), $('.augButton')['on'](_0x3d07b(0xed), _0x8ebd54 => { const _0x3c5e80 = _0x3d07b; let _0x173e2e = 0x0;
    $(_0x3c5e80(0x1a5))[_0x3c5e80(0x120)]((_0x37df02, _0x4a6f04) => { const _0x30f978 = _0x3c5e80;
        _0x173e2e += +_0x4a6f04[_0x30f978(0xcc)]; }); if ($(_0x8ebd54['target'])['hasClass'](_0x3c5e80(0xc1)) && _0x173e2e + +_0x8ebd54[_0x3c5e80(0x22b)][_0x3c5e80(0xcc)] < 0x6 && (+$(_0x8ebd54['target'])['siblings']()[0x2][_0x3c5e80(0xcc)] + +_0x8ebd54['target'][_0x3c5e80(0xcc)] < 0x6 && !/elementalAug/ [_0x3c5e80(0x264)](_0x8ebd54[_0x3c5e80(0x22b)][_0x3c5e80(0xc9)]) || /elementalAug/ [_0x3c5e80(0x264)](_0x8ebd54['target']['className']) && +$(_0x8ebd54[_0x3c5e80(0x22b)])['siblings']()[0x2][_0x3c5e80(0xcc)] < 0x3)) $(_0x8ebd54[_0x3c5e80(0x22b)])[_0x3c5e80(0x208)]()[0x2]['value'] = +$(_0x8ebd54[_0x3c5e80(0x22b)])[_0x3c5e80(0x208)]()[0x2][_0x3c5e80(0xcc)] + +_0x8ebd54[_0x3c5e80(0x22b)]['value'];
    else $(_0x8ebd54['target'])['hasClass'](_0x3c5e80(0x176)) && +$(_0x8ebd54[_0x3c5e80(0x22b)])['siblings']()[0x2][_0x3c5e80(0xcc)] > 0x0 && ($(_0x8ebd54['target'])['siblings']()[0x2]['value'] = +$(_0x8ebd54['target'])[_0x3c5e80(0x208)]()[0x2][_0x3c5e80(0xcc)] - +_0x8ebd54[_0x3c5e80(0x22b)]['value']); /ampage/ [_0x3c5e80(0x264)](_0x8ebd54[_0x3c5e80(0x22b)]['className']) && RampageSelect(), DataCompile(_0x8ebd54); }), $(taWikiSetBuilder)['on'](_0x3d07b(0x1b6), _0x24f874 => { const _0x39beb0 = _0x3d07b;
    _0x24f874[_0x39beb0(0x20c)](); const _0x16f38b = (event[_0x39beb0(0x1fb)] || window[_0x39beb0(0x1fb)])[_0x39beb0(0x1cf)](_0x39beb0(0x238));
    $(_0x39beb0(0xec))['each'](function() { lastEvent = this, resetSkillDescription(this); }), decodeURL(_0x16f38b, _0x24f874), $(taWikiSetBuilder)[_0x39beb0(0x238)](document['createTextNode'](_0x39beb0(0x90))), DataCompile(_0x24f874); });

function decodeURL(_0x1297fb = taWikiSetBuilder['value'], _0x380144) { const _0x24642e = _0x3d07b; if (/mhrise\.wiki-db\.com/ [_0x24642e(0x264)](_0x1297fb)) { const _0x148bfa = decodeURIComponent(_0x1297fb),
            _0x210c7e = _0x148bfa[_0x24642e(0x16b)](_0x24642e(0x21d))[0x0][_0x24642e(0x191)](',');
        ResetSkills(document[_0x24642e(0x1bc)](_0x24642e(0xb3) + $(weaponType)[_0x24642e(0x15f)]() + ')')), $[_0x24642e(0x120)](_0x210c7e, (_0x3f4e26, _0x1a3cc7) => { const _0xafd56 = _0x24642e,
                _0x36126f = _0x1a3cc7[_0xafd56(0x191)]('Lv');
            _0x36126f[0x0] = _0x36126f[0x0][_0xafd56(0x1aa)](/(\s)|(\/)/g, ''), _0x36126f[0x0] = _0x36126f[0x0][_0xafd56(0x1aa)](/'s/g, 's'), _0x36126f[0x0] = /Fire|Water|Wind|Ice|Dragon/ [_0xafd56(0x264)](_0x36126f[0x0]) ? _0xafd56(0x222) : _0x36126f[0x0], _0x36126f[0x0] = /Kush|Teos|Storm|Thunder|Wind/ ['test'](_0x36126f[0x0]) ? 'ElderEssence' : _0x36126f[0x0], document[_0xafd56(0x268)]('#' + _0x36126f[0x0]) !== null && document[_0xafd56(0x268)]('#' + _0x36126f[0x0])['style'][_0xafd56(0x236)] !== _0xafd56(0xe8) && (document[_0xafd56(0x268)]('#' + _0x36126f[0x0])[_0xafd56(0x1bb)] = _0x36126f[0x1]); }); } else JSON[_0x24642e(0xfa)](_0x1297fb)[_0x24642e(0x117)] === 0x6 && loadState(_0x1297fb, _0x380144); }
$(_0x3d07b(0x1ba))['on'](_0x3d07b(0x170), _0x5384b3 => { const _0x41aa47 = _0x3d07b;
    _0x5384b3[_0x41aa47(0x22b)][_0x41aa47(0xa1)] = _0x5384b3[_0x41aa47(0x109)][_0x41aa47(0x1a1)] === 'v' && _0x5384b3[_0x41aa47(0x109)][_0x41aa47(0x1e2)] || _0x5384b3['originalEvent']['metaKey'] ? _0x5384b3[_0x41aa47(0x22b)][_0x41aa47(0xa1)] = 'Build\x20Successfully\x20Decrypted' : _0x41aa47(0x90); });

function resetWikiText() { const _0x13d640 = _0x3d07b;
    $(_0x13d640(0x1de))[0x0][_0x13d640(0xcc)] = '', $(_0x13d640(0x1de))[0x0]['value'] = _0x13d640(0x90); }

function saveState(_0x2a575b = [
    [],
    [],
    [],
    [],
    [],
    []
]) { const _0x403762 = _0x3d07b;
    $(_0x403762(0x143))['each'](function() { const _0x5b898b = _0x403762;
        _0x2a575b[0x0][_0x5b898b(0xfd)]($(this)[0x0][_0x5b898b(0x1bb)]); }), $(_0x403762(0x8d))[_0x403762(0x120)](function() { const _0x4a050b = _0x403762;
        _0x2a575b[0x1][_0x4a050b(0xfd)](this['checked']); }), $('.inputs')[_0x403762(0x120)](function() { const _0x4191d9 = _0x403762;
        _0x2a575b[0x2][_0x4191d9(0xfd)](this[_0x4191d9(0xcc)]); }), _0x2a575b[0x3]['push'](comboTracker), $('.scroll')[_0x403762(0x120)](function() { const _0x244ec8 = _0x403762;
        _0x2a575b[0x4]['push'](this[_0x244ec8(0xc9)]); }), _0x2a575b[0x5] = $(_0x403762(0x14e))['text'](); const _0x49600e = document[_0x403762(0x134)](_0x403762(0x247)); return _0x49600e[_0x403762(0x1b3)](_0x403762(0xcc), JSON[_0x403762(0x18c)](_0x2a575b)), _0x49600e[_0x403762(0x143)](), _0x49600e[_0x403762(0x1f8)](0x0, 0x1869f), navigator[_0x403762(0x21f)]['writeText'](_0x49600e['value']), _0x2a575b; }

function loadState(_0x16c3ef, _0x5e6a21) { const _0x21a10c = _0x3d07b;
    _0x16c3ef = JSON['parse'](_0x16c3ef); const _0x19c9f6 = document['querySelectorAll']('select');
    _0x19c9f6[0x0][_0x21a10c(0x1bb)] = _0x16c3ef[0x0][0x0], classChange(), WeaponSelect(); for (let _0x1cb3b2 = 0x0; _0x1cb3b2 < _0x16c3ef[0x5][_0x21a10c(0x117)]; _0x1cb3b2++) { $('output.augLabel')[_0x1cb3b2][_0x21a10c(0xa1)] = _0x16c3ef[0x5][_0x1cb3b2]; }
    _0x19c9f6[0x3][_0x21a10c(0x1bb)] = _0x16c3ef[0x0][0x3], RampageSelect(), _0x19c9f6[0x50][_0x21a10c(0x1bb)] = _0x16c3ef[0x0][$(_0x21a10c(0x143))[_0x21a10c(0x117)] - 0xa], QuestSelect(), PartSelect(), HealthSelect(), $('select')[_0x21a10c(0x120)](function(_0x2eb905) { const _0x3756ca = _0x21a10c;
        _0x2eb905 !== (0x0 || 0x3 || $(_0x3756ca(0x143))[_0x3756ca(0x117)] - 0xa) && (this[_0x3756ca(0x1bb)] = _0x16c3ef[0x0][_0x2eb905]); }), $(_0x21a10c(0x8d))[_0x21a10c(0x120)]((_0x481b78, _0x1fc283) => { const _0x460a75 = _0x21a10c;
        _0x1fc283[_0x460a75(0x12c)] = _0x16c3ef[0x1][_0x481b78]; }), $('.inputs')['each']((_0x5807f2, _0x440121) => { _0x440121['value'] = _0x16c3ef[0x2][_0x5807f2]; }), $('.scroll')[_0x21a10c(0x120)](function(_0x5e0b41) { const _0x432916 = _0x21a10c;
        this[_0x432916(0xc9)] = _0x16c3ef[0x4][_0x5e0b41]; }), info[_0x21a10c(0x24e)][_0x21a10c(0x265)] = $(redScroll)[_0x21a10c(0xcb)](_0x21a10c(0x105)) ? info[_0x21a10c(0x24e)][_0x21a10c(0x1f6)][_0x21a10c(0xbb)] : info['skills'][_0x21a10c(0x1f6)][_0x21a10c(0x92)], info[_0x21a10c(0x24e)][_0x21a10c(0x21b)] = $(redScroll)[_0x21a10c(0xcb)](_0x21a10c(0x105)) ? info['skills'][_0x21a10c(0x1f4)][_0x21a10c(0xbb)] : info[_0x21a10c(0x24e)][_0x21a10c(0x1f4)]['red'], [...comboTracker] = _0x16c3ef[0x3][0x0], $(_0x21a10c(0x1c3))[_0x21a10c(0x120)](function() { const _0x9ac604 = _0x21a10c; if (this[_0x9ac604(0xcc)] > 0x0) { let _0x30f0a2 = $(_0x9ac604(0x19f))[this['id']][_0x9ac604(0xcc)] - TimesUsed(this['id']); while (_0x30f0a2 > 0x0) { comboTracker[_0x9ac604(0xfd)](this['id']), --_0x30f0a2; } while (_0x30f0a2 < 0x0) { comboTracker[_0x9ac604(0x99)](comboTracker[_0x9ac604(0x1a9)](this['id']), 0x1), ++_0x30f0a2; } } }), DataCompile(_0x5e6a21), UpdateComboDisplay(), setTimeout(() => { const _0x24db3d = _0x21a10c;
        $(_0x24db3d(0x1de))[0x0][_0x24db3d(0xcc)] = _0x24db3d(0x90); }, 0x7d0), $('input#taWikiSetBuilder')[0x0]['value'] = _0x21a10c(0x157); }

function PopulateDropDowns(_0x4ff823, _0x83edb3) { const _0x63975c = _0x3d07b;
    $(_0x83edb3)[_0x63975c(0x9c)](), $[_0x63975c(0x120)](_0x4ff823, (_0x359298, _0x702026) => { const _0x2194a3 = _0x63975c;
        $(_0x83edb3)[_0x2194a3(0xf4)]($('<option></option>')[_0x2194a3(0xb6)](_0x2194a3(0xcc), _0x702026)[_0x2194a3(0x238)](_0x702026)); }); }

function WeaponTypeSelect() { PopulateDropDowns(weaponTypes, weaponType); }
$(weaponFilter)['on'](_0x3d07b(0x19b), function() { RampageSelect(); });

function WeaponSelect() { const _0x33af6f = _0x3d07b;
    $(dropWeapon)[_0x33af6f(0x9c)](); if (weaponFilter[_0x33af6f(0x12c)] === !![]) { const _0x32fd8f = Object[_0x33af6f(0x183)](info[weaponType['value']][_0x33af6f(0x194)])[_0x33af6f(0x147)](_0x257f4e => _0x257f4e[0x1][_0x33af6f(0xf6)] > 0x0 && _0x257f4e[0x1][_0x33af6f(0x10a)] >= 0x122);
        _0x32fd8f[_0x33af6f(0xfc)](_0xbaffda => { const _0x347132 = _0x33af6f;
            $(_0x347132(0x1f3))['append']($(_0x347132(0x1d2))[_0x347132(0xb6)](_0x347132(0xcc), _0xbaffda[0x0])[_0x347132(0x238)](_0xbaffda[0x1][_0x347132(0x116)])); }); } else $(info[$(weaponType)[_0x33af6f(0x15f)]()]['weapons'])[_0x33af6f(0x120)]((_0x26634b, _0x8f3226) => { const _0x2bf6b0 = _0x33af6f;
        $(_0x2bf6b0(0x1f3))[_0x2bf6b0(0xf4)]($(_0x2bf6b0(0x1d2))[_0x2bf6b0(0xb6)](_0x2bf6b0(0xcc), _0x26634b)['text'](_0x8f3226[_0x2bf6b0(0x116)])); }); }

function RampageSelect() { const _0x167ce0 = _0x3d07b;
    $(weaponRampage[_0x167ce0(0xaa)])[_0x167ce0(0x1cb)](), $(weaponRampage0)[_0x167ce0(0x163)](); if (getWeapon()[_0x167ce0(0xf6)] !== 0x0) { const _0x4cff39 = [];
        $(Object['keys'](info[_0x167ce0(0x24b)][_0x167ce0(0xaf)]))['each']((_0x3b97fe, _0x553b86) => { const _0x1b0385 = _0x167ce0; + _0x553b86['slice'](-0x1) <= getWeapon()[_0x1b0385(0xf6)] + (+$('output.rampageAug')[_0x1b0385(0x15f)]() > 0x0 ? 0x1 : 0x0) && _0x4cff39[_0x1b0385(0xfd)](info[_0x1b0385(0x24b)][_0x1b0385(0xaf)][_0x553b86]); }), PopulateDropDowns(_0x4cff39, weaponRampage0); return; } else { $(weaponRampage['children'])[_0x167ce0(0x1f7)](''), $(weaponRampage[_0x167ce0(0xaa)])['hide'](), $(weaponRampage0)[_0x167ce0(0x163)](); if (/Rampage/ [_0x167ce0(0x264)](getWeapon()[_0x167ce0(0x116)])) { $(info[_0x167ce0(0x24b)][getWeapon()['weapon']][_0x167ce0(0x17d)])[_0x167ce0(0x120)](function(_0x151242, _0x20ebe3) { const _0x33b16c = _0x167ce0;
                $(weaponRampage[_0x33b16c(0xaa)][_0x151242])[_0x33b16c(0x163)](), PopulateDropDowns(Object[_0x33b16c(0xcf)](this), weaponRampage[_0x33b16c(0xaa)][_0x151242]); }); return; } else { $(getWeapon()[_0x167ce0(0x24b)])[_0x167ce0(0x120)](function(_0x2bfb55, _0x26b1f3) { const _0x142c8b = _0x167ce0;
                $(weaponRampage0)[_0x142c8b(0xf4)]($(_0x142c8b(0x1d2))['attr'](_0x142c8b(0xcc), info[_0x142c8b(0x24b)][_0x142c8b(0x1e5)][this])[_0x142c8b(0x238)](info[_0x142c8b(0x24b)][_0x142c8b(0x1e5)][this])); }); return; } } }

function MonsterSelect() { const _0x2798d5 = _0x3d07b;
    PopulateDropDowns(Object[_0x2798d5(0x139)](info[_0x2798d5(0x111)][_0x2798d5(0x1d9)]), dropMonster), dropMonster[_0x2798d5(0x1bb)] = Object[_0x2798d5(0x139)](info[_0x2798d5(0x111)][_0x2798d5(0x1d9)])[_0x2798d5(0x186)](_0x2798d5(0x246)); }

function getEleHZ(_0x57b3f9) { const _0xac084f = _0x3d07b; return info[_0xac084f(0x111)]['hzv'][dropMonster[_0xac084f(0xcc)]][dropHZ[_0xac084f(0x1bb)]][lower(_0x57b3f9)]; }

function getRawHZ(_0x1fda81) { const _0xf71b03 = _0x3d07b; if (info['monster'][_0xf71b03(0x1d9)][dropMonster[_0xf71b03(0xcc)]][dropHZ[_0xf71b03(0x1bb)]][_0x1fda81] === undefined) return 0x64; return WaterBlight[_0xf71b03(0x12c)] ? Math[_0xf71b03(0x223)](0x64, ~~(Math[_0xf71b03(0x149)](info['monster'][_0xf71b03(0x1d9)][dropMonster[_0xf71b03(0xcc)]][dropHZ['selectedIndex']][_0x1fda81], info[_0xf71b03(0x111)][_0xf71b03(0x1d9)][dropMonster[_0xf71b03(0xcc)]][dropHZ['selectedIndex']][_0x1fda81] * 0.63 + 22.2) + 0x3)) : info[_0xf71b03(0x111)]['hzv'][dropMonster[_0xf71b03(0xcc)]][dropHZ[_0xf71b03(0x1bb)]][_0x1fda81]; }
const getUsedAttacks = (_0x277a58 = weaponType['value']) => { const _0x10ca7f = _0x3d07b; let _0x32ccbe = {}; if ($(weaponType)[_0x10ca7f(0x15f)]() === _0x10ca7f(0x144)) return _0x32ccbe = Object[_0x10ca7f(0x1d3)](Object[_0x10ca7f(0x183)](info[_0x10ca7f(0x144)][_0x10ca7f(0x96)])[_0x10ca7f(0x147)](_0x4fee4c => !/Sever|Blunt|Kinsect|Dust|Powder|Mark/ [_0x10ca7f(0x264)](_0x4fee4c))), {..._0x32ccbe }; if ($(weaponType)['val']() === _0x10ca7f(0x154)) { const _0x309774 = getWeapon()['phialType'] === _0x10ca7f(0x145) ? _0x10ca7f(0x189) : 'Impact\x20Phial',
                _0x42868a = new RegExp('' + _0x309774); return _0x32ccbe = Object[_0x10ca7f(0x1d3)](Object[_0x10ca7f(0x183)](info['ChargeBlade'][_0x10ca7f(0x96)])[_0x10ca7f(0x147)](_0x58f8bf => !_0x42868a[_0x10ca7f(0x264)](_0x58f8bf))), {..._0x32ccbe }; } if (weaponType[_0x10ca7f(0xcc)] === _0x10ca7f(0xca)) { let _0x436638 = ''; const _0x589bbc = document[_0x10ca7f(0xb7)](_0x10ca7f(0x118))[_0x10ca7f(0x1bb)] === 0x1 && getWeapon()[_0x10ca7f(0x20f)] < 0x4 ? getWeapon()[_0x10ca7f(0x20f)] + 0x1 : getWeapon()['baseCharge'];
            $(getWeapon()[_0x10ca7f(0xee)])[_0x10ca7f(0x120)]((_0x79b47c, _0x4ac285) => { const _0x168fe8 = _0x10ca7f;
                _0x79b47c < _0x589bbc && (_0x436638 += _0x168fe8(0x167) + _0x4ac285[_0x168fe8(0x16b)](_0x168fe8(0x155))[0x0] + '\x20' + _0x4ac285[_0x168fe8(0x16b)](_0x168fe8(0x1a7))[0x0]); }); const _0x2efd61 = new RegExp([_0x436638[_0x10ca7f(0x212)](0x1)]); let _0x11c5c1 = Object[_0x10ca7f(0x183)](info['Bow'][_0x10ca7f(0x96)])[_0x10ca7f(0x147)](_0x999ee5 => _0x2efd61[_0x10ca7f(0x264)](_0x999ee5[0x0])); return _0x11c5c1 = []['concat'](Object[_0x10ca7f(0x183)](info['Bow']['attacks'])['splice'](0x0, 0x1), _0x11c5c1), _0x11c5c1 = _0x11c5c1['concat'](Object[_0x10ca7f(0x183)](info['Bow']['attacks'])[_0x10ca7f(0x99)](0x88)), _0x32ccbe = Object[_0x10ca7f(0x1d3)](_0x11c5c1), {..._0x32ccbe }; } if ($(weaponType)[_0x10ca7f(0x15f)]() === _0x10ca7f(0xe9)) return _0x32ccbe = Object['fromEntries'](Object[_0x10ca7f(0x183)](info[_0x10ca7f(0xe9)][_0x10ca7f(0x96)])[_0x10ca7f(0x99)](0x0, 0x1c)), {..._0x32ccbe }; if (weaponType['value'] === lbg || weaponType[_0x10ca7f(0xcc)] === hbg) { let _0x116c91 = info[_0x10ca7f(0x121)][_0x10ca7f(0x139)]['map']((_0x3c7ed1, _0x5da62e) => _0x3c7ed1[_0x10ca7f(0x147)](_0x1379c9 => weaponType[_0x10ca7f(0xcc)] === lbg && getWeapon()[_0x10ca7f(0x240)][_0x10ca7f(0x21c)](_0x5da62e + 0x1) ? /RF\+/ [_0x10ca7f(0x264)](_0x1379c9) : getWeapon()[_0x10ca7f(0xe6)][_0x5da62e + 0x1] > 0x0 && !/RF\+/ [_0x10ca7f(0x264)](_0x1379c9)))[_0x10ca7f(0xf2)]()[_0x10ca7f(0x191)](/,+/); return _0x116c91 = _0x116c91[_0x10ca7f(0x137)](Object[_0x10ca7f(0x139)](info[_0x10ca7f(0x121)])['filter'](_0x433f61 => weaponType[_0x10ca7f(0xcc)] === lbg ? /lbg|Wyvernblast(?! before)/ [_0x10ca7f(0x264)](_0x433f61) : /hbg|Wyverns/ ['test'](_0x433f61))), _0x32ccbe = Object['fromEntries'](Object['entries'](info[_0x10ca7f(0x121)])[_0x10ca7f(0x147)](_0x2f8ecf => TimesUsed(_0x2f8ecf[0x0], _0x116c91) > 0x0)), {..._0x32ccbe }; } return {...info[_0x277a58]['attacks'] }; },
    getAttacks = (_0x5ec315 = weaponType[_0x3d07b(0xcc)]) => ({...info[_0x5ec315][_0x3d07b(0x96)] }),
    getWeapon = () => info[weaponType['value']][_0x3d07b(0x194)][dropWeapon['selectedIndex']][_0x3d07b(0xf6)] > 0x0 ? getQuriousAugs() : getRampageSkills();

function PartSelect() { const _0x337108 = _0x3d07b,
        _0x2e07ff = [];
    info[_0x337108(0x111)][_0x337108(0x1d9)][dropMonster[_0x337108(0xcc)]][_0x337108(0xfc)](_0x2d4d01 => { const _0xd38e70 = _0x337108;
        _0x2e07ff[_0xd38e70(0xfd)]([_0x2d4d01[_0xd38e70(0x14f)] + '\x20' + _0x2d4d01[_0xd38e70(0x10b)]]); }), PopulateDropDowns(_0x2e07ff, dropHZ); }

function QuestSelect() { const _0x5564cb = _0x3d07b;
    $(_0x5564cb(0xdb))[_0x5564cb(0x9c)](), $('#MR')['empty'](), $(_0x5564cb(0x1da))['empty'](); const _0x47fde5 = Object[_0x5564cb(0x183)](info[_0x5564cb(0xf5)])[_0x5564cb(0x147)](_0x364042 => _0x364042[0x1][_0x5564cb(0x111)] === dropMonster['value'] && _0x364042[0x1][_0x5564cb(0x179)] === 'MR'),
        _0x4ca29a = Object[_0x5564cb(0x183)](info['quest'])['filter'](_0x1e7446 => _0x1e7446[0x1][_0x5564cb(0x111)] === dropMonster['value'] && _0x1e7446[0x1][_0x5564cb(0x179)] === 'HR');
    _0x4ca29a['forEach'](_0x278593 => { const _0x37fc0d = _0x5564cb;
        $(_0x37fc0d(0xdb))[_0x37fc0d(0xf4)]($(_0x37fc0d(0x1d2))[_0x37fc0d(0xb6)](_0x37fc0d(0xcc), _0x278593[0x0])[_0x37fc0d(0x238)](_0x278593[0x1]['quest'])); }), _0x47fde5[_0x5564cb(0xfc)](_0x400f6f => { const _0x27768b = _0x5564cb;
        $(_0x27768b(0xea))[_0x27768b(0xf4)]($(_0x27768b(0x1d2))['attr'](_0x27768b(0xcc), _0x400f6f[0x0])[_0x27768b(0x238)](_0x400f6f[0x1][_0x27768b(0xf5)])); }), _0x47fde5[_0x5564cb(0x117)] > 0x0 ? $(_0x5564cb(0x1da))[_0x5564cb(0xf4)]($('<option></option>')['attr']('value', _0x47fde5[0x0][0x0])[_0x5564cb(0x238)](_0x47fde5[0x0][0x1]['quest'])) : ($('#dropQuest')[_0x5564cb(0xf4)]($(_0x5564cb(0x1d2))[_0x5564cb(0xb6)](_0x5564cb(0xcc), _0x4ca29a[0x0][0x0])[_0x5564cb(0x238)](_0x4ca29a[0x0][0x1][_0x5564cb(0xf5)])), $(_0x5564cb(0xea))[_0x5564cb(0x1cb)]()); }

function HealthSelect() { $(health)['empty'](), $['each'](getHealthPools(), (_0x49a544, _0x18252a) => { const _0x854aa4 = _0x18d6;
        $(health)[_0x854aa4(0xf4)]($(_0x854aa4(0x1d2))[_0x854aa4(0xb6)]('value', _0x18252a)[_0x854aa4(0x238)](formatNumbers(_0x18252a))); }); }
$(_0x3d07b(0x1ba))['on'](_0x3d07b(0xed), _0x4cacd7 => { const _0x5b98e6 = _0x3d07b;
    $(_0x4cacd7[_0x5b98e6(0x22b)])['val']() == _0x5b98e6(0x90) && $(_0x4cacd7['target'])[_0x5b98e6(0x15f)](''); });

function isUnique(_0x5d482c, _0x5997db, _0x4a1922) { const _0x22ef51 = _0x3d07b; return _0x4a1922[_0x22ef51(0x186)](_0x5d482c) === _0x5997db; }

function showMenu() { const _0x5a9e97 = _0x3d07b;
    $(_0x5a9e97(0xe3))[_0x5a9e97(0x163)](), document[_0x5a9e97(0x268)](_0x5a9e97(0xea))[_0x5a9e97(0xaa)]['length'] > 0x0 ? $('#divMR')[_0x5a9e97(0x163)]() : $('#divMR')[_0x5a9e97(0x1cb)](), document[_0x5a9e97(0x268)]('#HR')[_0x5a9e97(0xaa)][_0x5a9e97(0x117)] > 0x0 && ($(_0x5a9e97(0x24f))['show'](), $(_0x5a9e97(0x20a))[_0x5a9e97(0x250)]('top', _0x5a9e97(0x128))), document['querySelector']('#HR')[_0x5a9e97(0xaa)][_0x5a9e97(0x117)] === 0x0 && ($(_0x5a9e97(0x24f))['hide'](), $(_0x5a9e97(0x20a))['css'](_0x5a9e97(0x1dc), _0x5a9e97(0x1e1))); }

function updateQuest(_0x1bd8d3) { const _0x3a302c = _0x3d07b;
    $(_0x3a302c(0x9d))['children']()[0x0][_0x3a302c(0x26a)] = window[_0x3a302c(0xc3)][_0x3a302c(0x16c)][0x0][window[_0x3a302c(0xc3)][_0x3a302c(0x16c)][0x0][_0x3a302c(0x1bb)]][_0x3a302c(0x26a)], $(_0x3a302c(0x20a))['hide'](), DataCompile(); }
$(document)['on'](_0x3d07b(0xed), _0x342f20 => { const _0x2662b1 = _0x3d07b,
        _0x161894 = $(_0x342f20[_0x2662b1(0x22b)]);!_0x161894['closest'](questButton)['length'] && !_0x161894['closest'](_0x2662b1(0xe3))[_0x2662b1(0x117)] && !_0x161894['closest'](dropQuest)['length'] && $('.menu')['is'](_0x2662b1(0x1d0)) && $(_0x2662b1(0xe3))[_0x2662b1(0x1cb)](); });
const capitalAll = _0x5e43e4 => _0x5e43e4[_0x3d07b(0x1aa)](/(?<!\w)\w{1}/g, _0x2dd08f => _0x2dd08f[_0x3d07b(0x1ad)]());

function capital(_0x51a70f, _0x198ec9 = 0x0) { const _0x1fba95 = _0x3d07b; return _0x51a70f[_0x198ec9][_0x1fba95(0x1ad)]() + _0x51a70f[_0x1fba95(0x212)](0x1); }

function lower(_0x25860f) { return _0x25860f[0x0]['toLowerCase']() + _0x25860f['slice'](0x1); }

function shotsCheck(_0x1a4691, _0x5c1b85, _0x1af946, _0x18f1c8 = 0x3c, _0x5cabbc = 0x0) { let _0x24b10c = 0x0;
    _0x24b10c += _0x5cabbc; let _0x5573c7 = 0x0,
        _0x16722e = 0x0; while (_0x5573c7 <= _0x18f1c8) { for (let _0x5166ba = 0x0; _0x5166ba < _0x1af946; ++_0x5166ba) { _0x5573c7 += _0x1a4691, _0x16722e += _0x5573c7 <= _0x18f1c8 ? 0x1 : 0x0, _0x16722e >= _0x24b10c && _0x5cabbc !== 0x0 && _0x5cabbc !== Infinity && (--_0x5166ba, _0x24b10c += _0x5cabbc); }
        _0x5573c7 += _0x5c1b85; } return _0x16722e; }

function getHealthPools() { const _0x9d26e9 = _0x3d07b,
        _0x5a4ee8 = ~~(info['quest'][dropQuest[_0x9d26e9(0xcc)]][players['value']] * ((info[_0x9d26e9(0xf5)][dropQuest['value']]['min'] / info[_0x9d26e9(0xf5)][dropQuest[_0x9d26e9(0xcc)]]['1p'] - 0x1) * -0x1)) / info['quest'][dropQuest[_0x9d26e9(0xcc)]][_0x9d26e9(0x219)]; let _0x2618e0 = [info['quest'][dropQuest[_0x9d26e9(0xcc)]][$(_0x9d26e9(0x124))['val']()]]; if (info[_0x9d26e9(0xf5)][dropQuest[_0x9d26e9(0xcc)]]['HPScale'] === 0x0) return _0x2618e0; if (info['quest'][dropQuest[_0x9d26e9(0xcc)]][_0x9d26e9(0x219)] === 0x1) return _0x2618e0 = [
        [_0x2618e0[0x0] - _0x5a4ee8],
        [_0x2618e0[0x0]],
        [_0x2618e0[0x0] + _0x5a4ee8]
    ], _0x2618e0; return _0x2618e0 = [
        [_0x2618e0[0x0] - _0x5a4ee8 * 0x2],
        [_0x2618e0[0x0] - _0x5a4ee8],
        [_0x2618e0[0x0]],
        [_0x2618e0[0x0] + _0x5a4ee8],
        [_0x2618e0[0x0] + _0x5a4ee8 * 0x2]
    ], _0x2618e0; }

function resetSkillDescription() { const _0x1d83b7 = _0x3d07b; if (lastEvent !== '') { if (lastEvent === BowCoating && weaponType[_0x1d83b7(0xcc)] !== _0x1d83b7(0xca)) return; let _0x509dce = [];
        Object[_0x1d83b7(0xcf)](lastEvent[_0x1d83b7(0xaa)])['some'](_0x57fa25 => _0x57fa25[_0x1d83b7(0x22d)] === _0x1d83b7(0xc5)) ? (_0x509dce = Object['values']($(lastEvent[_0x1d83b7(0xaa)])[_0x1d83b7(0xaa)]()), _0x509dce[_0x1d83b7(0x99)](-0x2), _0x509dce['splice'](0x0, 0x0, lastEvent[0x0])) : _0x509dce = Object[_0x1d83b7(0xcf)](lastEvent['children']), _0x509dce[_0x1d83b7(0xfc)]((_0x353ddf, _0xac37a7) => { const _0x524e07 = _0x1d83b7; let _0x16290b = ''; if (lastEvent === BowCoating) _0x16290b = getWeapon()[_0x524e07(0x130)][_0xac37a7];
            else { if (lastEvent === BowgunBarrel) _0x16290b = [_0x524e07(0x141), 'Long', _0x524e07(0x16d), 'Silencer', _0x524e07(0xd8)][_0xac37a7];
                else lastEvent === Dereliction ? _0x16290b = [_0x524e07(0x141), _0x524e07(0x266), _0x524e07(0x1c0), _0x524e07(0xe7), _0x524e07(0x242), _0x524e07(0x98), _0x524e07(0xde), 'Lv-3\x20Charge-1', _0x524e07(0x1d6), _0x524e07(0xf8)][_0xac37a7] : _0x16290b = _0x524e07(0x216) + _0xac37a7; }
            _0x353ddf['textContent'] = _0xac37a7 === 0x0 ? '----' : _0x16290b; }), lastEvent = ''; } }
$(document)['on'](_0x3d07b(0xed), _0x23e716 => { const _0x2b35f9 = _0x3d07b; if (lastEvent !== '' && lastEvent === _0x23e716[_0x2b35f9(0x22b)]) return;
    lastEvent !== '' && resetSkillDescription(), Object['values']($(_0x2b35f9(0xec)))[_0x2b35f9(0xb4)](_0x87e28c => _0x87e28c['id'] === _0x23e716['target']['id']) && setSkillDescriptions(_0x23e716[_0x2b35f9(0x22b)]); }), $(_0x3d07b(0xec))['on'](_0x3d07b(0x10d), _0x11159d => { const _0x4b094c = _0x3d07b;
    resetSkillDescription(), DataCompile(), _0x11159d[_0x4b094c(0x22b)][_0x4b094c(0x214)](); });

function setSkillDescriptions(_0x1d06d2) { const _0x3f1159 = _0x3d07b; if (Object[_0x3f1159(0xcf)]($(_0x3f1159(0xec)))['some'](_0x27a85e => _0x27a85e['id'] === _0x1d06d2['id'])) { const _0x309817 = _0x1d06d2['id']; if (_0x309817 !== _0x3f1159(0x21b)) $(info[_0x3f1159(0x24e)][_0x309817])[_0x3f1159(0x120)](function(_0x58b9b0) { const _0x2535b8 = _0x3f1159; let _0x56d240; if (_0x58b9b0 !== 0x0) { if (_0x309817 === _0x2535b8(0x1d4) || _0x309817 === 'ReloadSpeed') _0x56d240 = /Reload/ [_0x2535b8(0x264)](_0x309817) ? _0x309817[_0x2535b8(0x212)](0x0, 0x6) + '\x20' + _0x309817[_0x2535b8(0x212)](0x6) + '\x20+' + _0x58b9b0 : _0x309817['slice'](0x0, 0x6) + '\x20' + _0x309817['slice'](0x6) + '\x20+' + _0x58b9b0;
                else { if (_0x309817 === _0x2535b8(0x125) || _0x309817 === 'SpareShot') { const _0x263ef0 = _0x309817 === 'AmmoUP' ? [_0x2535b8(0x239), _0x2535b8(0x1a0), _0x2535b8(0x1d5)] : [_0x2535b8(0x23e), _0x2535b8(0x112), _0x2535b8(0x15c)];
                        _0x56d240 = _0x58b9b0 + ':\x20' + _0x263ef0[_0x58b9b0 - 0x1]; } else { if (_0x309817 == _0x2535b8(0xa2)) _0x56d240 = _0x58b9b0 + ':\x20' + [_0x2535b8(0x135), _0x2535b8(0xef), _0x2535b8(0x1c4), _0x2535b8(0xc2)][_0x58b9b0 - 0x1];
                        else { if (_0x309817 === _0x2535b8(0x15d)) weaponType['value'] !== hbg ? _0x56d240 = _0x58b9b0 + _0x2535b8(0x207) + info['skills'][_0x2535b8(0x15d)][_0x58b9b0][0x0] + _0x2535b8(0x1c9) + info[_0x2535b8(0x24e)]['Bombardier'][_0x58b9b0][0x1] : _0x56d240 = [_0x2535b8(0x15d), _0x2535b8(0x156), _0x2535b8(0x153), _0x2535b8(0xd7), _0x2535b8(0x1ce)][_0x58b9b0];
                            else { if (_0x309817 == _0x2535b8(0x1e4)) _0x56d240 = [_0x2535b8(0xd0), _0x2535b8(0x195), _0x2535b8(0xa8), _0x2535b8(0x228), _0x2535b8(0x140)][_0x58b9b0];
                                else { if (_0x309817 == 'CriticalFirePower') _0x56d240 = ['-', _0x2535b8(0x254)][_0x58b9b0];
                                    else { let _0x3432a4 = ''; if (this['BR'] > 0x0 || this[_0x2535b8(0x24a)] > 0x1 || this[_0x2535b8(0x115)] > 0x1) { _0x3432a4 = _0x2535b8(0x1b9);
                                            this['BR'] > 0x0 && (_0x3432a4 += /\d\.?\d/ [_0x2535b8(0x264)](this['BR']) ? '+' + this['BR'] : '\x20+\x20' + this['BR']); if (this[_0x2535b8(0x115)] > 0x1) { const _0xcb8a8 = /\.[1-8]/ [_0x2535b8(0x264)]((this[_0x2535b8(0x115)] - 0x1) * 0x64) ? ((this['BRM'] - 0x1) * 0x64)[_0x2535b8(0x14d)](0x1) : ((this[_0x2535b8(0x115)] - 0x1) * 0x64)['toFixed'](0x0);
                                                _0x3432a4 += /\d\.?\d/ [_0x2535b8(0x264)](_0xcb8a8) ? '+' + _0xcb8a8 + '%' : _0x2535b8(0x9a) + _0xcb8a8 + '%'; } if (this[_0x2535b8(0x24a)] > 0x1) { const _0x437ac8 = /\.[1-8]/ ['test']((this['PRM'] - 0x1) * 0x64) ? ((this[_0x2535b8(0x24a)] - 0x1) * 0x64)[_0x2535b8(0x14d)](0x1) : ((this[_0x2535b8(0x24a)] - 0x1) * 0x64)[_0x2535b8(0x14d)](0x0);
                                                _0x3432a4 += _0x309817 === 'CriticalBoost' && /\d\.?\d/ [_0x2535b8(0x264)](_0x437ac8 - 0x19) ? '+' + (_0x437ac8 - 0x19) + '%' : _0x309817 === 'CriticalBoost' ? _0x2535b8(0x9a) + (_0x437ac8 - 0x19) + '%' : /\d\.?\d/ ['test'](_0x437ac8) ? '+' + _0x437ac8 + '%' : '\x20+\x20' + _0x437ac8 + '%'; } } let _0x131a74 = ''; if (this['BE'] > 0x0 || this[_0x2535b8(0xe4)] > 0x1 || this['BEM'] > 0x1) { _0x131a74 = _0x2535b8(0x15b);
                                            this['BE'] > 0x0 && (_0x131a74 += /\d\.?\d/ [_0x2535b8(0x264)](this['BE']) ? '+' + this['BE'] : '\x20+\x20' + this['BE']); if (this[_0x2535b8(0x12d)] > 0x1) { const _0x43849f = /\.[1-8]/ ['test']((this[_0x2535b8(0x12d)] - 0x1) * 0x64) ? ((this[_0x2535b8(0x12d)] - 0x1) * 0x64)[_0x2535b8(0x14d)](0x1) : ((this['BEM'] - 0x1) * 0x64)[_0x2535b8(0x14d)](0x0);
                                                _0x131a74 += /\d\.?\d/ [_0x2535b8(0x264)](_0x43849f) ? '+' + _0x43849f + '%' : '\x20+\x20' + _0x43849f + '%'; } if (this[_0x2535b8(0xe4)] > 0x1) { const _0x345e1e = /\.[1-8]/ [_0x2535b8(0x264)]((this[_0x2535b8(0xe4)] - 0x1) * 0x64) ? ((this['PEM'] - 0x1) * 0x64)[_0x2535b8(0x14d)](0x1) : ((this[_0x2535b8(0xe4)] - 0x1) * 0x64)[_0x2535b8(0x14d)](0x0);
                                                _0x131a74 += /\d\.?\d/ [_0x2535b8(0x264)](_0x345e1e) ? '+' + _0x345e1e + '%' : _0x2535b8(0x9a) + _0x345e1e + '%'; } } const _0xe577b8 = this['aff'] > 0x0 && /\d\.?\d/ [_0x2535b8(0x264)](this[_0x2535b8(0xb5)]) ? _0x2535b8(0x234) + this['aff'] : this[_0x2535b8(0xb5)] > 0x0 ? _0x2535b8(0x1eb) + this[_0x2535b8(0xb5)] : '';
                                        _0x3432a4 = Object['prototype'][_0x2535b8(0x148)][_0x2535b8(0x102)](this, 'Sharp') && this[_0x2535b8(0xd4)] < 0x1 ? _0x2535b8(0x209) + this[_0x2535b8(0xd4)] * 0x64 + '%' : _0x3432a4, _0x3432a4 = Object[_0x2535b8(0x1fe)][_0x2535b8(0x148)][_0x2535b8(0x102)](this, _0x2535b8(0xd4)) && this[_0x2535b8(0xd4)] > 0x1 ? _0x2535b8(0x209) + this[_0x2535b8(0xd4)] : _0x3432a4, _0x3432a4 = _0x3432a4 === '' && _0x131a74 === '' && _0xe577b8 === '' ? _0x2535b8(0x239) : _0x3432a4; if (_0x1d06d2 === BowCoating) { const _0x414090 = getWeapon()[_0x2535b8(0x130)];
                                            _0x56d240 = _0x414090[_0x58b9b0] + ':\x20' + [_0x3432a4, _0x131a74, _0xe577b8]['join']('\x20'); } else _0x56d240 = _0x58b9b0 + ':\x20' + [_0x3432a4, _0x131a74, _0xe577b8][_0x2535b8(0x1a8)]('\x20'); } } } } } } } else _0x56d240 = _0x309817;
            $('#' + _0x309817)[0x0][_0x58b9b0][_0x2535b8(0xa1)] = _0x56d240; }), lastEvent = _0x1d06d2;
        else { if (_0x1d06d2 === Dereliction) { const _0x179c87 = $(redScroll)[_0x3f1159(0xcb)](_0x3f1159(0x105)) ? [
                    ['1:\x20Raw\x20+15'],
                    [_0x3f1159(0x256)],
                    [_0x3f1159(0x1cd)],
                    [_0x3f1159(0x1df)],
                    [_0x3f1159(0x13b)],
                    [_0x3f1159(0xf7)],
                    ['1:\x20Raw\x20+25'],
                    [_0x3f1159(0x8c)],
                    [_0x3f1159(0x192)]
                ] : [
                    [_0x3f1159(0x1f2)],
                    [_0x3f1159(0x162)],
                    [_0x3f1159(0xbd)],
                    [_0x3f1159(0x252)],
                    [_0x3f1159(0x251)],
                    [_0x3f1159(0x13a)],
                    ['1:\x20Ele+10'],
                    [_0x3f1159(0x230)],
                    ['3:\x20Ele+20']
                ]; let _0x2f3e9f = 0x0;
                $('select#Dereliction')[_0x3f1159(0xaa)]()[_0x3f1159(0x120)](function() { const _0x6026ac = _0x3f1159;
                    $(this)[_0x6026ac(0xaa)]()[_0x6026ac(0x120)](function() { this['textContent'] = _0x179c87[_0x2f3e9f], ++_0x2f3e9f; }); }), Dereliction[0x0][_0x3f1159(0xa1)] = _0x3f1159(0x21b); } }
        lastEvent = _0x1d06d2; }(Object[_0x3f1159(0xcf)]($(_0x3f1159(0xec))[_0x3f1159(0xaa)]())[_0x3f1159(0xb4)](_0x327698 => _0x327698['id'] === _0x1d06d2['id']) && _0x1d06d2['children'][0x0][_0x3f1159(0xa1)] === _0x1d06d2['id'] || !Object['values']($(_0x3f1159(0xec))[_0x3f1159(0xaa)]())[_0x3f1159(0xb4)](_0x373d62 => _0x373d62['id'] === _0x1d06d2['id'] || _0x1d06d2)) && resetSkillDescription(_0x1d06d2); }

function getStats(_0x1a1792, _0x4b7945 = { 'BRM': 0x0, 'BR': 0x0, 'PRM': 0x0, 'BEM': 0x0, 'BE': 0x0, 'PEM': 0x0, 'af': 0x0 }) { return $(_0x1a1792)['each'](function() { const _0x26e6f8 = _0x18d6;
        _0x4b7945[_0x26e6f8(0x115)] *= this[_0x26e6f8(0x115)], _0x4b7945['BR'] += this['BR'], _0x4b7945[_0x26e6f8(0x24a)] *= this[_0x26e6f8(0x24a)], _0x4b7945['BEM'] *= this['BEM'], _0x4b7945['BE'] += this['BE'], _0x4b7945[_0x26e6f8(0xe4)] *= this[_0x26e6f8(0xe4)], _0x4b7945['aff'] += this['aff']; }), _0x4b7945; }

function partSelector() { const _0x1184db = _0x3d07b;
    $(dropHZ)['children']()[_0x1184db(0x120)](function(_0x5c83f8) { const _0x4f0cd5 = _0x1184db;
        this[_0x4f0cd5(0xa1)] === document[_0x4f0cd5(0x268)](_0x4f0cd5(0xbe))[_0x4f0cd5(0xa1)] && (dropHZ[_0x4f0cd5(0x1bb)] = _0x5c83f8); }); }

function formatNumbers(_0x4d2140) { const _0x10f89a = _0x3d07b; return _0x4d2140['toString']()['replace'](/(\d)(?=(\d{3})+(?!\d))/g, _0x10f89a(0x103)); }