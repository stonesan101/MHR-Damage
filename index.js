const _0x40b288 = _0x2927;
(function(_0x2233db, _0x291aca) { const _0x223680 = _0x2927,
        _0x49fefa = _0x2233db(); while (!![]) { try { const _0x246e52 = parseInt(_0x223680(0x2bd)) / 0x1 + -parseInt(_0x223680(0x291)) / 0x2 + parseInt(_0x223680(0x237)) / 0x3 * (-parseInt(_0x223680(0x1f2)) / 0x4) + -parseInt(_0x223680(0x329)) / 0x5 * (-parseInt(_0x223680(0x2ed)) / 0x6) + parseInt(_0x223680(0x195)) / 0x7 * (parseInt(_0x223680(0x260)) / 0x8) + parseInt(_0x223680(0x202)) / 0x9 * (-parseInt(_0x223680(0x274)) / 0xa) + parseInt(_0x223680(0x349)) / 0xb; if (_0x246e52 === _0x291aca) break;
            else _0x49fefa['push'](_0x49fefa['shift']()); } catch (_0x2e78b5) { _0x49fefa['push'](_0x49fefa['shift']()); } } }(_0x2b49, 0x592d6));

function _0x2b49() { const _0x31cdc5 = ['weapon', 'eleType', '.menu', 'output.augLabel', 'OPTGROUP', 'Lv3\x20&\x20Dragon\x20Ammo', 'tbody', 'replace', 'shot', 'augPEM', 'getSkills', 'ticsAdjust', 'inputs\x20hitsOfSharpInputs', '#augToggle', 'quest', 'stringify', '>output', 'min', 'monster', 'Lv-3\x20Charge-3', 'shellingLevel', 'white', '.inputs', 'Bombardier', 'Ammo\x20Type', 'skills', 'length', '3:\x20Raw\x20+\x2020%\x20EFR\x20+\x2016%', '#WeaknessExploit', 'armor', 'Thunder', 'tagName', 'RazorSharp', 'inc', '.augToggle', 'Ele\x20Pierce', 'Aff+', 'Element\x20Phial', 'StrongarmStance', 'Seconds\x20\x0a\x20To\x20Kill', 'Base', '#dropEnraged', '#HR', 'output', 'reload', '.inputComboRepeat', 'each', '1:\x20Ele\x20+\x205', 'test', 'BRM', 'rangedContainer', 'toUpperCase', 'DemonMode', 'display:\x27\x27', ':visible', 'Dulling\x20Strike', 'sharpness', 'True', 'style', 'hitsOfSharp', 'Combo', 'css', 'http://localhost:5500', '.0:nth-child(n+\x203)', 'Long', 'none', 'dec', 'createElement', 'tbody#', 'shotsPerMinBase', 'output.attackAug', 'display:none', 'baseRaw', 'Long:\x20Raw\x20+\x205%', '#statsHead\x20>\x20tr\x20>\x20th:nth-child(4)', 'parent', 'closest', 'select#dropQuest', 'invis', 'NaN%', '64OtpCpc', 'isNaN', 'output.affinityAug', 'rank', 'stats', 'meleeTable', 'input.check', 'attackName', 'CriticalFirePower', 'html', 'HeavyBowGun', 'filter', 'spareShot', 'purple', 'match', 'bombardier', '27FyDUAI', 'tableRow', 'setSelectionRange', '2:\x20Ele+12', 'ChargeMaster', 'vis\x20invis', 'DerelictionSourse', 'MailofHellfireSourse', 'ChargeLevel', 'baseAff', 'eleNon', 'critBoost', '-93%', 'Brutal\x20Strike', '.demon:not(#', 'lastIndexOf', 'Silencer', '#ElementalReload', 'Large\x20Monster', 'frames', 'Qurious', 'Effective', 'Close\x20Range', '.classSpecific', '/json/quest.json', 'impShieldCharge', 'CriticalBoost', 'output.rampageAug', 'input', '#players', 'keys2', 'blur', 'Kushala\x20Daora\x20Soul', 'keypress', '3:\x20Raw\x20+30', 'SwitchAxe', 'input.check:not(input#ProtectivePolish)', '.a:not(.gray)', '4:\x20Raw\x20+\x2025%\x20EFR\x20+\x2017%', 'augPRM', 'AmmoUp', 'all', 'join', 'Spare\x20Shot\x20+5%', 'remove', 'baseEle', 'efrMulti', 'toLowerCase', 'BowCoating', 'DualBlades', '.melee', 'getData', 'MindsEye', '130209DbKSEH', 'splice', 'isRapidFire', 'shotsPerMin', '#dropWeapon', 'PEM', 'Lv-1\x20Charge-2', 'rawCrit', 'table', 'HerculesDraw', '#dropQuest', 'recoilFrames', 'usableAmmo', 'Lv-3\x20Charge-2', 'NoEleBuff', 'bowShot', 'className', 'Raw', 'rawMV', 'recoilSpeed', 'type', 'Lv-2\x20Charge-2', 'state', '1:\x20Raw\x20+20', 'efr', 'MastersTouch', 'includes', 'NormalRapidUp', 'input#taWikiSetBuilder', 'Aff\x20+\x20', 'Sticky|Wyvern', 'div.menu', 'hasOwnProperty', 'Elemental\x20Exploit', 'PRM', 'rampageDecos', 'value', 'Hammer', 'values', 'green', 'SpreadUp', '8DYWOLY', 'ChainCritBowGun', 'comboHits', 'ChainCrit', '</output>', '2:\x20Ele+15', 'blue', 'Table', '2:\x20Raw\x20+30', 'Procs\x20Per', '#divHR', 'selectedIndex', 'LightBowGun', 'Reload', 'event', 'val', 'sever', 'Crit', 'handicraft', 'single', '983730lMavtv', 'Silencer:\x20Recoil\x20Down\x20+1', 'Dereliction', 'yellow', 'InsectGlaive', 'GreatSword', '<option></option>', 'ticsPer', 'log', 'LongSword', 'call', 'push', 'host', '<button\x20type=\x22button\x22\x20aria-pressed=\x22false\x22\x20id=\x22', 'PierceUp', 'rampage', 'Lv-2\x20Charge-1', 'select', '2:\x20Sticky+10%\x20Wyvern+15%', 'RecoilDown', 'FeralDemonMode', '1:\x20Ele+10', '%\x20EFR\x20+', 'Sever', 'phialType', 'Build\x20Succsefully\x20Loaded', '#taWikiSetBuilder', 'Artillery', '.skill', '575154BHpJWj', 'Lv-1\x20Charge-3', 'hzv', 'Current\x20RPM', 'Shot', 'ammo', 'location', 'ammoIncrease', 'outerHTML', 'display', 'toString', 'then', '#previousWeapon', 'td#b', 'entries', '#BowChargePlus', 'baseCharge', 'options', 'ChargeBlade', 'Valstrax\x20Soul', 'querySelectorAll', 'Marksman', 'toFixed', 'addClass', 'ctrlKey', 'Max', 'attr', 'clipSize', 'Recoil', 'map', 'shotsPerGain', 'reloadFrames', 'Total', 'Element\x20Exploit', 'enrage', '/json/rampage.json', 'Elemental\x20Phial', 'aff', 'HuntingHorn', 'Stat', 'slice', 'forEach', '.Shot', 'Chance\x2020%\x20Raw+10%\x20EFR\x20+2%', '356873UPlamf', 'ChainCritStandard', '-46%', 'clipboard', 'width', 'EFE', 'ReloadSpeed', 'cell', '#previousWeaponType', 'inputs', 'Power:\x20Raw\x20+\x2012.5%', 'append', 'rangedTable', 'double', 'textContent', 'getElementById', 'Spawn\x20Area\x20', 'fromEntries', 'meleeContainer', 'querySelector', 'Paste\x20TA\x20Wiki\x20Set\x20Builder\x20Link\x20Here', 'SpareShot', 'Spare\x20Shot\x20+20%', 'N\x20/\x20A', 'AmmoUP', 'hide', '/json/ammo.json', 'change', 'EFR', 'label.check', 'empty', 'parseFloat', 'prototype', 'isUsed', 'ElementalExploit', 'Combo\x20Damage', 'Element\x20Phial|Elemental\x20Phial', 'Player\x20Dmg', 'augEFR', '1:\x20Raw\x20+15', 'path', 'siblings', 'CriticalElement', 'DemonDrug', 'Lance', '#MR', 'attacks', 'top', '6iFOhGI', 'Ele', 'SwordNShield', 'Lv2\x20&\x20Ele\x20Ammo', 'Gunlance', 'HeavyBowGun\x20Wyvern', 'NoSneak', 'rampageSlots', 'SneakAttack', 'Min', 'json', '#weaponRampage0', '#sharpnessContainer', 'Affinity', 'Dragon', 'BEM', '3:\x20Ele+12', 'augVis\x20augInvis', '\x22\x20class=\x22inputButton\x20inc\x22>&#8679</button><output\x20class=\x22label\x22>', 'HPScale', 'IgnoreHZV', 'replaceME', '.inputs:not(\x22.inputComboRepeat\x22)', 'hasClass', 'None', 'monTable', '/json/skills.json', 'setAttribute', '3:\x20Raw\x20+35', '#rampageResult', '/json/LightBowGun.json', 'recoil', 'types', '#monTable', 'Sharp', 'No\x20Change', '.scroll', 'innerHTML', '\x20+\x20', 'Sharpness', 'Head', 'Hellion\x20Mode', 'split', '\x22\x20class=\x22inputButton\x20dec\x22\x0a\x09\x09\x09\x09>&#8681</button><button\x20type=\x22button\x22\x20aria-pressed=\x22false\x22\x20id=\x22', '\x20/\x20', 'output.sharpnessAug', 'Body', '1:\x20Raw\x20+\x2010%\x20EFR\x20+\x2010%', 'indexOf', 'inputComboRepeat', 'select.skill', 'text', 'click', 'Power', 'Normal|Rapid|Pierce|Spread', 'reduce', 'parse', 'select.demon', 'Bow', 'Combo\x20skill\x20', '218465ROsFKw', '.comboHits', 'class', 'part', 'RapidMorph', 'BowgunBarrel', 'orange', 'toggleClass', '#comboCountContainer', 'writeText', 'noSharpMod', 'Impact\x20Phial', '[1-5]', 'checked', 'reloadSpeed', 'concat', 'efe', 'createTextNode', '\x20inputContainer', 'Agitator', 'Sharp\x20+', 'rawNon', 'sort', 'PunishingDraw', 'coatings', 'some', '.Qurious', '3:\x20Ele+20', 'raw', 'dps', 'BowChargePlus', '3:\x20Ele+15', '9956727QCysZt', 'clipboardData', 'max', 'target', 'mousedown', 'tableRowMelee', 'RapidFireUp', 'keys', 'reverse', '$1,', '.json', 'Lv-3\x20Charge-1', 'show', 'output.elementalAug', '----', '(?<=skills=)(.*?)(?=&)', '#divMR', 'SerenePose', 'weapons', 'stopImmediatePropagation', 'appendChild', 'Clip\x20Size', 'children', '.augButton', 'originalEvent', 'MailofHellfire', 'Guard-Up', 'ElementalAttack', 'inputComboRepeat\x20hitsOfSharpInputs\x20inputs', '2356837dZeTZO', 'removeClass', '2:\x20Raw\x20+25', 'replaceWith', 'mhrice', 'red', 'Barrels', 'shellingType', 'ele', 'parentNode', 'eleCrit', 'Build\x20Successfully\x20Decrypted', 'Blunt'];
    _0x2b49 = function() { return _0x31cdc5; }; return _0x2b49(); }
let keyDown = 0x0,
    lastEvent = '',
    comboTracker = [];
const weaponType = document[_0x40b288(0x2cc)]('dropWeaponType'),
    weaponTypes = [
        [_0x40b288(0x26c)],
        [_0x40b288(0x279)],
        [_0x40b288(0x2a3)],
        [_0x40b288(0x278)],
        [_0x40b288(0x2ef)],
        [_0x40b288(0x233)],
        [_0x40b288(0x225)],
        ['LongSword'],
        [_0x40b288(0x2e9)],
        [_0x40b288(0x1fc)],
        [_0x40b288(0x327)],
        [_0x40b288(0x2b7)],
        [_0x40b288(0x2f1)],
        [_0x40b288(0x25c)]
    ],
    [lbg, gs, cb, ig, sns, db, sa, ls, lance, hbg, bow, hh, gl, ham] = weaponTypes[_0x40b288(0x22c)]()['split'](','),
    baseURL = /localhost/ [_0x40b288(0x1d2)](window[_0x40b288(0x297)][_0x40b288(0x280)]) ? _0x40b288(0x1e0) : 'https://stonesan101.github.io/MHR-Damage',
    info = {};
async function getInfo() { const _0x4218e0 = _0x40b288; try { WeaponTypeSelect(); const _0x1fe129 = fetch(baseURL + '/json/monster.json')[_0x4218e0(0x29c)](_0x4a7e86 => _0x4a7e86[_0x4218e0(0x2f7)]())[_0x4218e0(0x29c)](_0x5db96d => { const _0x3c97f6 = _0x4218e0;
                info[_0x3c97f6(0x1b4)] = _0x5db96d, MonsterSelect(), PartSelect(); }),
            _0x31764a = fetch(baseURL + _0x4218e0(0x2b4))[_0x4218e0(0x29c)](_0x85b682 => _0x85b682[_0x4218e0(0x2f7)]())[_0x4218e0(0x29c)](_0x26effa => info[_0x4218e0(0x283)] = _0x26effa),
            _0x54dcb6 = fetch(baseURL + '/json/types.json')[_0x4218e0(0x29c)](_0x282159 => _0x282159[_0x4218e0(0x2f7)]())[_0x4218e0(0x29c)](_0x50ad1e => info[_0x4218e0(0x30d)] = _0x50ad1e),
            _0x5f0c31 = fetch(baseURL + _0x4218e0(0x307))['then'](_0x3f95d9 => _0x3f95d9['json']())[_0x4218e0(0x29c)](_0x193b5b => info[_0x4218e0(0x1bb)] = _0x193b5b),
            _0x5d76e7 = fetch(baseURL + _0x4218e0(0x21a))[_0x4218e0(0x29c)](_0x4f425d => _0x4f425d[_0x4218e0(0x2f7)]())[_0x4218e0(0x29c)](_0x108ef9 => { const _0x1d0dc0 = _0x4218e0;
                info[_0x1d0dc0(0x1b0)] = _0x108ef9, QuestSelect(), HealthSelect(); }),
            _0x19a8f8 = fetch(baseURL + _0x4218e0(0x30b))['then'](_0x5bcd53 => _0x5bcd53[_0x4218e0(0x2f7)]())['then'](_0x5ea67f => { const _0x430b70 = _0x4218e0;
                info[_0x430b70(0x26c)] = _0x5ea67f; }),
            _0x244415 = fetch(baseURL + _0x4218e0(0x2d7))[_0x4218e0(0x29c)](_0x327d9e => _0x327d9e[_0x4218e0(0x2f7)]())['then'](_0x4dafed => info[_0x4218e0(0x296)] = _0x4dafed);
        Promise[_0x4218e0(0x22b)]([_0x19a8f8, _0x54dcb6, _0x31764a])[_0x4218e0(0x29c)](() => { WeaponSelect(), RampageSelect(); }), await Promise[_0x4218e0(0x22b)]([_0x1fe129, _0x54dcb6, _0x5f0c31, _0x5d76e7, _0x19a8f8, _0x244415, _0x31764a])['then'](_0x1a6dd9 => { const _0x43cd1c = _0x4218e0;
            console[_0x43cd1c(0x27c)](Object['entries'](info)), classChange(), MonChart(); })[_0x4218e0(0x29c)](() => { const _0x5a0d28 = _0x4218e0;
            DataCompile(window[_0x5a0d28(0x26e)]); }), baseURL === 'http://localhost:5500' && (weaponTypes[_0x4218e0(0x27f)](_0x4218e0(0x1bf)), weaponTypes['push'](_0x4218e0(0x199))), weaponTypes[_0x4218e0(0x2b9)](0x1)[_0x4218e0(0x2ba)](_0x24f646 => { const _0x57dc52 = _0x4218e0;
            fetch(baseURL + '/json/' + _0x24f646 + _0x57dc52(0x182))[_0x57dc52(0x29c)](_0x36b5e1 => _0x36b5e1[_0x57dc52(0x2f7)]())['then'](_0x47bb16 => info[_0x24f646] = _0x47bb16); }); } catch (_0x17accb) { console[_0x4218e0(0x27c)](_0x17accb); } }
const ugh2 = getInfo();

function DataCompile(_0x339e5d = window[_0x40b288(0x26e)]) { const _0x1b4aae = _0x40b288; /BowGun/ [_0x1b4aae(0x1d2)](weaponType[_0x1b4aae(0x25b)]) ? RangedDPS(_0x339e5d): MeleeDPS(_0x339e5d); }

function RangedDPS(_0x2e4370) { const _0x53066a = _0x40b288;
    $(_0x53066a(0x185))[_0x53066a(0x26f)](0x0), elementalResult[_0x53066a(0x25b)] = '+0', $(_0x53066a(0x31a))[_0x53066a(0x26f)](0x0), sharpnessResult['value'] = '+0'; const _0x1f40d8 = [],
        _0xb65917 = []; let _0x41674d = {},
        _0x44e88d = !![],
        _0x8a2498 = getQuriousAugs();
    [_0x53066a(0x295), 'Sever', _0x53066a(0x1a1), _0x53066a(0x301)][_0x53066a(0x2ba)](_0x36ce02 => _0x8a2498[_0x36ce02] = initialStats(_0x8a2498, _0x36ce02)), Object[_0x53066a(0x25d)](getUsedAttacks())[_0x53066a(0x2ba)](function(_0x4be88a) { const _0x107674 = _0x53066a; let _0x576460 = {..._0x8a2498[_0x4be88a['type']], ..._0x4be88a };
        _0x576460 = getDependantSkills(_0x576460), _0x576460 = GetRemainingSkills(_0x576460), _0x576460 = DamageCalculations(_0x576460);! /Demon|Armor|Wyvernblast|Glide|Wyvernsn|Guard/ ['test'](_0x576460[_0x107674(0x1f9)]) ? _0x41674d = calculateAmmoFrames(_0x576460): _0x41674d[_0x107674(0x1ad)] = 0x1; const _0x529932 = ~~((~~_0x576460[_0x107674(0x24f)] + ~~_0x576460[_0x107674(0x339)]) * _0x41674d[_0x107674(0x1ad)]),
            _0x202528 = ~~(~~_0x576460['rawCrit'] + ~~_0x576460['eleCrit']),
            _0x59c74a = ~~(~~_0x576460[_0x107674(0x33e)] + ~~_0x576460[_0x107674(0x20c)]),
            _0x1a5969 = ~~(0.99 + $('#health')[_0x107674(0x26f)]() / _0x529932),
            _0x172239 = /Stic|Slic/ [_0x107674(0x1d2)](_0x576460[_0x107674(0x1f9)]) ? 0x5 + ~~(0.99 + 0x3c / _0x41674d['shotsPerMin'] * _0x1a5969) : ~~(0.99 + 0x3c / _0x41674d['shotsPerMin'] * _0x1a5969),
            _0x4f0f4b = [~~_0x576460['rawNon'] + _0x107674(0x319) + ~~_0x576460[_0x107674(0x23e)]],
            _0x377130 = [~~_0x576460[_0x107674(0x20c)] + _0x107674(0x319) + ~~_0x576460[_0x107674(0x19f)]],
            _0x16d5ee = [~~_0x59c74a + _0x107674(0x319) + ~~_0x202528],
            _0x2c800d = [_0x576460[_0x107674(0x1f9)], _0x4f0f4b, _0x377130, _0x16d5ee, _0x529932, _0x41674d['shotsPerGain'] !== _0x107674(0x1f1) ? _0x41674d['shotsPerGain'] : _0x107674(0x2d4), _0x1a5969, _0x172239];
        _0x1f40d8[_0x107674(0x27f)](_0x2c800d); const _0x2c5980 = [_0x576460[_0x107674(0x1f9)], _0x576460[_0x107674(0x249)], _0x41674d['reloadSpeed'] !== undefined ? _0x41674d[_0x107674(0x337)] : _0x107674(0x2d4), _0x41674d[_0x107674(0x24a)] !== undefined ? _0x41674d[_0x107674(0x24a)] : _0x107674(0x2d4), isNaN(_0x41674d[_0x107674(0x2ac)]) ? 'N\x20/\x20A' : _0x41674d[_0x107674(0x2ac)], _0x576460[_0x107674(0x27b)] + 0x1, _0x41674d[_0x107674(0x1e7)] !== undefined ? _0x41674d[_0x107674(0x1e7)] : _0x107674(0x2d4), _0x41674d['shotsPerMin'] !== undefined ? _0x41674d[_0x107674(0x23a)] : _0x107674(0x2d4)];
        _0xb65917['push'](_0x2c5980); if (_0x44e88d) { const _0x4fd436 = [
                [_0x107674(0x2b8), _0x107674(0x248), _0x107674(0x2fa), _0x107674(0x1c5)],
                [_0x107674(0x1ca), ~~_0x576460[_0x107674(0x1ea)], ~~_0x576460[_0x107674(0x20b)], ~~(0x16 * (0x1 + _0x576460[_0x107674(0x345)] / 0x64))],
                ['True', ~~_0x576460[_0x107674(0x345)], ~~(_0x576460[_0x107674(0x2b6)] * 0x64), ~~((0x16 * _0x576460['BEM'] + _0x576460['BE']) * (0x1 + _0x576460[_0x107674(0x345)] / 0x64))],
                ['Total', ~~(_0x576460['raw'] * getCritBoost(_0x576460[_0x107674(0x271)], _0x576460[_0x107674(0x2b6)])[_0x107674(0x259)] * _0x576460[_0x107674(0x259)] * _0x576460[_0x107674(0x229)]), ~~(_0x576460['aff'] * 0x64), ~~((0x16 * _0x576460[_0x107674(0x2fc)] + _0x576460['BE']) * (0x1 + _0x576460[_0x107674(0x345)] / 0x64) * _0x576460[_0x107674(0x23c)] * _0x576460[_0x107674(0x1ab)] * getCritEle(_0x576460[_0x107674(0x271)], _0x576460[_0x107674(0x2b6)])[_0x107674(0x23c)])],
                [_0x107674(0x217), ~~(_0x576460[_0x107674(0x345)] * getCritBoost(_0x576460[_0x107674(0x271)], _0x576460[_0x107674(0x2b6)])[_0x107674(0x2d9)] * _0x576460[_0x107674(0x259)] * _0x576460['augPRM']), ~~(_0x576460['aff'] * 0x64), ~~((0x16 * _0x576460[_0x107674(0x2fc)] + _0x576460['BE']) * (0x1 + _0x576460[_0x107674(0x345)] / 0x64) * _0x576460[_0x107674(0x23c)] * _0x576460[_0x107674(0x1ab)] * getCritEle(_0x576460['Crit'], _0x576460[_0x107674(0x2b6)])['EFE'])]
            ];
            BuildDamageTable(_0x4fd436, _0x107674(0x1f6), _0x2e4370), _0x44e88d = ![]; } }), _0x1f40d8['splice'](0x0, 0x0, [_0x53066a(0x1ba), _0x53066a(0x248), _0x53066a(0x2ee), _0x53066a(0x2b1), _0x53066a(0x217), 'RPM\x20Gain', 'Shots\x20\x0a\x20To\x20Kill', _0x53066a(0x1c9)]), BuildDamageTable(_0x1f40d8, _0x53066a(0x346), _0x2e4370), _0xb65917[_0x53066a(0x238)](0x0, 0x0, ['Ammo\x20Type', _0x53066a(0x249), _0x53066a(0x26d), _0x53066a(0x2ad), _0x53066a(0x18d), _0x53066a(0x269), 'RPM\x20Base', _0x53066a(0x294)]), BuildDamageTable(_0xb65917, 'ammo', _0x2e4370); }

function MeleeDPS(_0x4ffecc) { const _0x53e3e2 = _0x40b288,
        _0x3eb00f = [
            [_0x53e3e2(0x1de), 'Attack\x20Name', 'MV', _0x53e3e2(0x248), _0x53e3e2(0x2ee), _0x53e3e2(0x2b1), _0x53e3e2(0x217)]
        ]; let _0x176b67 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
        _0x52579e = -0x1,
        _0x30cf78 = {},
        _0x53d63d = {}; const _0x213385 = Sharpness[_0x53e3e2(0x26b)]; let _0x451cf5 = getQuriousAugs();
    [_0x53e3e2(0x295), _0x53e3e2(0x28b), 'Blunt', _0x53e3e2(0x301)][_0x53e3e2(0x2ba)](_0x2ab3da => _0x451cf5[_0x2ab3da] = initialStats(_0x451cf5, _0x2ab3da)), Object[_0x53e3e2(0x25d)](getUsedAttacks())[_0x53e3e2(0x2ba)](function(_0x84f47b) { const _0x292667 = _0x53e3e2;++_0x52579e; let _0x2e5de1 = {..._0x84f47b, ..._0x451cf5[_0x84f47b[_0x292667(0x24b)]] };
        _0x2e5de1 = getDependantSkills(_0x2e5de1); /input/ ['test'](_0x4ffecc['target'][_0x292667(0x247)]) && _0x2e5de1[_0x292667(0x1f9)] === _0x292667(0x2e0) && (UpdateComboTracker(), UpdateComboDisplay());
        _0x2e5de1[_0x292667(0x1f9)] === 'Combo\x20Damage' && (_0x53d63d = weaponType['value'] !== bow ? getComboHitsAndSetSharpness(_0x2e5de1[_0x292667(0x2b6)]) : hitsPerColorSharp()[0x1]);
        _0x2e5de1 = GetRemainingSkills(_0x2e5de1), _0x2e5de1 = DamageCalculations(_0x2e5de1);
        comboTracker[_0x292667(0x251)](_0x52579e[_0x292667(0x29b)]()) && (colorsUsed = Object[_0x292667(0x29f)](_0x53d63d)[_0x292667(0x1fd)](_0x229e4b => _0x229e4b[0x1][_0x292667(0x1bc)] > 0x0), colorsUsed[_0x292667(0x2ba)](_0x170877 => { const _0x47dfbe = _0x292667; if (TimesUsed(_0x52579e, _0x170877[0x1]) > 0x0) { const [_0x15fdcd, _0x336774] = _0x2e5de1[_0x47dfbe(0x333)] === ![] ? [info[_0x47dfbe(0x1bb)][_0x47dfbe(0x314)][capital(_0x170877[0x0])][_0x47dfbe(0x259)], info['skills'][_0x47dfbe(0x314)][capital(_0x170877[0x0])][_0x47dfbe(0x23c)]] : [0x1, 0x1], _0x3bf11e = TimesUsed(_0x52579e, _0x170877[0x1]);
                _0x176b67 = [_0x176b67[0x0] += Number(~~(_0x2e5de1[_0x47dfbe(0x249)] * _0x3bf11e)), _0x176b67[0x1] += Number(~~(_0x2e5de1['rawNon'] * _0x15fdcd) * _0x3bf11e), _0x176b67[0x2] += Number(~~(_0x2e5de1['rawCrit'] * _0x15fdcd) * _0x3bf11e), _0x176b67[0x3] += Number(~~(_0x2e5de1[_0x47dfbe(0x20c)] * _0x336774) * _0x3bf11e), _0x176b67[0x4] += Number(~~(_0x2e5de1['eleCrit'] * _0x336774) * _0x3bf11e), _0x176b67[0x5] += Number(~~(_0x2e5de1['rawNon'] * _0x15fdcd) * _0x3bf11e + ~~(_0x2e5de1['eleNon'] * _0x336774) * _0x3bf11e), _0x176b67[0x6] += Number(~~(_0x2e5de1['rawCrit'] * _0x15fdcd) * _0x3bf11e + ~~(_0x2e5de1[_0x47dfbe(0x19f)] * _0x336774) * _0x3bf11e), _0x176b67[0x7] += Number(~~(_0x2e5de1['efr'] * _0x15fdcd) * _0x3bf11e + ~~(_0x2e5de1[_0x47dfbe(0x339)] * _0x336774) * _0x3bf11e)]; } })); let _0x143a73 = info[_0x292667(0x1bb)]['Sharpness'][Sharpness[Sharpness['selectedIndex']][_0x292667(0x320)]];
        weaponType[_0x292667(0x25b)] === _0x292667(0x327) && _0x2e5de1[_0x292667(0x24b)] !== 'Shot' && (_0x143a73 = BowCoating[BowCoating['selectedIndex']][_0x292667(0x320)] === _0x292667(0x322) ? 1.35 : _0x143a73, _0x143a73 = BowCoating[BowCoating['selectedIndex']][_0x292667(0x320)] === _0x292667(0x218) ? 1.32 : _0x143a73, _0x143a73 = BowCoating[BowCoating[_0x292667(0x26b)]][_0x292667(0x320)] === 'Close\x20Range+' ? 1.39 : _0x143a73); const _0x942452 = [_0x292667(0x302), _0x2e5de1['attackName'], _0x2e5de1['rawMV'], formatNumbers(~~(_0x2e5de1['rawNon'] * _0x143a73[_0x292667(0x259)])) + '\x20/\x20' + formatNumbers(~~(_0x2e5de1[_0x292667(0x23e)] * _0x143a73[_0x292667(0x259)])), formatNumbers(~~(_0x2e5de1[_0x292667(0x20c)] * _0x143a73['PEM'])) + _0x292667(0x319) + formatNumbers(~~(_0x2e5de1[_0x292667(0x19f)] * _0x143a73[_0x292667(0x23c)])), formatNumbers(~~(_0x2e5de1[_0x292667(0x33e)] * _0x143a73[_0x292667(0x259)]) + ~~(_0x2e5de1[_0x292667(0x20c)] * _0x143a73[_0x292667(0x23c)])) + _0x292667(0x319) + formatNumbers(~~(_0x2e5de1[_0x292667(0x23e)] * _0x143a73['PRM']) + ~~(_0x2e5de1[_0x292667(0x19f)] * _0x143a73[_0x292667(0x23c)])), formatNumbers((~~(_0x2e5de1[_0x292667(0x339)] * _0x143a73[_0x292667(0x23c)]) + ~~(_0x2e5de1[_0x292667(0x24f)] * _0x143a73[_0x292667(0x259)])) * (_0x2e5de1[_0x292667(0x27b)] + 0x1))];
        _0x3eb00f['push'](_0x942452); if (_0x52579e) { const _0x20fd23 = lower(_0x2e5de1[_0x292667(0x1a3)]) === _0x292667(0x1e3) ? 0x0 : _0x2e5de1[_0x292667(0x19d)],
                _0x23061d = [
                    [
                        ['Stat'],
                        [_0x292667(0x248)],
                        ['Affinity'],
                        [_0x2e5de1[_0x292667(0x1a3)]]
                    ],
                    ['Base', ~~_0x2e5de1['baseRaw'], ~~_0x2e5de1[_0x292667(0x20b)], _0x2e5de1[_0x292667(0x22f)]],
                    [_0x292667(0x1db), ~~_0x2e5de1[_0x292667(0x345)], ~~(_0x2e5de1[_0x292667(0x2b6)] * 0x64), ~~_0x20fd23],
                    [_0x292667(0x2b1), ~~(_0x2e5de1['raw'] * getCritBoost(_0x2e5de1['Crit'], _0x2e5de1[_0x292667(0x2b6)])[_0x292667(0x259)] * _0x2e5de1[_0x292667(0x259)] * _0x2e5de1[_0x292667(0x229)] * _0x143a73[_0x292667(0x259)]), ~~(_0x2e5de1[_0x292667(0x2b6)] * 0x64), ~~(_0x20fd23 * getCritEle(_0x2e5de1[_0x292667(0x271)], _0x2e5de1[_0x292667(0x2b6)])[_0x292667(0x23c)] * _0x2e5de1[_0x292667(0x23c)] * _0x2e5de1[_0x292667(0x1ab)] * _0x143a73[_0x292667(0x23c)])],
                    [_0x292667(0x217), ~~(_0x2e5de1[_0x292667(0x345)] * getCritBoost(_0x2e5de1['Crit'], _0x2e5de1[_0x292667(0x2b6)])[_0x292667(0x2d9)] * _0x2e5de1[_0x292667(0x259)] * _0x2e5de1[_0x292667(0x2e3)] * _0x143a73[_0x292667(0x259)]), ~~(_0x2e5de1[_0x292667(0x2b6)] * 0x64), ~~(_0x20fd23 * getCritEle(_0x2e5de1[_0x292667(0x271)], _0x2e5de1[_0x292667(0x2b6)])[_0x292667(0x2c2)] * _0x2e5de1['PEM'] * _0x2e5de1['augPEM'] * _0x2e5de1[_0x292667(0x2e3)] * _0x143a73[_0x292667(0x23c)])]
                ];
            BuildDamageTable(_0x23061d, _0x292667(0x1f6), _0x4ffecc); } }); if (weaponType[_0x53e3e2(0x25b)] === _0x53e3e2(0x2f1)) { GunlanceShelling(_0x3eb00f, _0x176b67, power, _0x4ffecc); return; } else { if (_0x213385 === Sharpness['selectedIndex'] && !/BowChargePlus|dropWeapon|taWikiSetBuilder/ [_0x53e3e2(0x1d2)](_0x4ffecc[_0x53e3e2(0x34c)]['id'])) { if (/input|inputButton/ [_0x53e3e2(0x1d2)](_0x4ffecc[_0x53e3e2(0x34c)][_0x53e3e2(0x247)])) { document[_0x53e3e2(0x2cc)]('c0')['textContent'] = '' + formatNumbers(_0x176b67[0x0]), document[_0x53e3e2(0x2cc)]('d0')[_0x53e3e2(0x2cb)] = formatNumbers(_0x176b67[0x1]) + _0x53e3e2(0x319) + formatNumbers(_0x176b67[0x2]), document[_0x53e3e2(0x2cc)]('e0')[_0x53e3e2(0x2cb)] = formatNumbers(_0x176b67[0x3]) + '\x20/\x20' + formatNumbers(_0x176b67[0x4]), document[_0x53e3e2(0x2cc)]('f0')['textContent'] = formatNumbers(_0x176b67[0x5]) + _0x53e3e2(0x319) + formatNumbers(_0x176b67[0x6]), document[_0x53e3e2(0x2cc)]('g0')[_0x53e3e2(0x2cb)] = '' + formatNumbers(_0x176b67[0x7]); return; } else { _0x3eb00f['splice'](0x0, 0x2, [_0x53e3e2(0x302), 'Combo\x20Damage', '' + formatNumbers(_0x176b67[0x0]), formatNumbers(_0x176b67[0x1]) + _0x53e3e2(0x319) + formatNumbers(_0x176b67[0x2]), formatNumbers(_0x176b67[0x3]) + _0x53e3e2(0x319) + formatNumbers(_0x176b67[0x4]), formatNumbers(_0x176b67[0x5]) + _0x53e3e2(0x319) + formatNumbers(_0x176b67[0x6]), '' + formatNumbers(_0x176b67[0x7])]); let _0x454be9 = 0x0;
                $(_0x3eb00f)[_0x53e3e2(0x1d0)](function() { const _0x2cc754 = _0x53e3e2;
                    this[_0x2cc754(0x238)](0x0, 0x2), $(this)[_0x2cc754(0x1d0)](function() { const _0x2f9f5c = _0x2cc754;
                        Object[_0x2f9f5c(0x25d)]($(dpsBody)['children']()[_0x2f9f5c(0x18e)]())[_0x2f9f5c(0x1fd)](_0x1a9904 => !/a|b/ [_0x2f9f5c(0x1d2)](_0x1a9904[_0x2f9f5c(0x247)]))[_0x454be9][_0x2f9f5c(0x2cb)] = this, ++_0x454be9; }); }); } } else _0x3eb00f['splice'](0x1, 0x1, [_0x53e3e2(0x302), _0x53e3e2(0x2e0), '' + formatNumbers(_0x176b67[0x0]), formatNumbers(_0x176b67[0x1]) + _0x53e3e2(0x319) + formatNumbers(_0x176b67[0x2]), formatNumbers(_0x176b67[0x3]) + _0x53e3e2(0x319) + formatNumbers(_0x176b67[0x4]), formatNumbers(_0x176b67[0x5]) + '\x20/\x20' + formatNumbers(_0x176b67[0x6]), '' + formatNumbers(_0x176b67[0x7])]), BuildDamageTable(_0x3eb00f, _0x53e3e2(0x346), _0x4ffecc); } }

function getRampageSkills(_0x1d1684 = {...info[weaponType[_0x40b288(0x25b)]][_0x40b288(0x18a)][$(_0x40b288(0x23b))[_0x40b288(0x26f)]()] }) { const _0x30f30a = _0x40b288; return $(weaponRampage[_0x30f30a(0x18e)])[_0x30f30a(0x1d0)]((_0x568583, _0x2dce6a) => { const _0x4bab92 = _0x30f30a,
            _0xe745cf = info['rampage']['Rampage-Up\x20Skill'][_0x2dce6a['value']]; if (_0xe745cf !== undefined)
            for (let _0xc10bec = 0x0; _0xc10bec < Object[_0x4bab92(0x17f)](_0xe745cf)['length']; _0xc10bec++) { const _0x1f1b17 = Object[_0x4bab92(0x17f)](_0xe745cf)[_0xc10bec];
                _0x1d1684[_0x1f1b17] += _0xe745cf[_0x1f1b17]; } }), !/BowGun/ [_0x30f30a(0x1d2)](weaponType[_0x30f30a(0x25b)]) && (_0x1d1684[_0x30f30a(0x1a3)] = /Fire|Water|Thunder|Ice|Dragon|Blase|Sleep|Poison|Para/ [_0x30f30a(0x1d2)](weaponRampage[_0x30f30a(0x18e)][0x1]['value']) ? weaponRampage[_0x30f30a(0x18e)][0x1][_0x30f30a(0x25b)]['match'](/Fire|Water|Thunder|Ice|Dragon|Blase|Sleep|Poison|Para/)[0x0] : _0x1d1684['eleType']), {..._0x1d1684 }; }
const getQuriousAugs = () => { const _0x55be5b = _0x40b288; let _0x4b0996 = {...info[weaponType[_0x55be5b(0x25b)]]['weapons'][dropWeapon[_0x55be5b(0x25b)]] }; if (/BowGun/ [_0x55be5b(0x1d2)](weaponType[_0x55be5b(0x25b)])) { if ((TuneUp[_0x55be5b(0x26b)] === 0x0 || TuneUp[_0x55be5b(0x26b)] === 0x1) && BowgunBarrel['options'][BowgunBarrel['selectedIndex']]['text'] === _0x55be5b(0x322)) _0x4b0996['baseRaw'] = ~~(_0x4b0996[_0x55be5b(0x1ea)] * 1.125);
        else TuneUp[_0x55be5b(0x26b)] === 0x2 && BowgunBarrel[_0x55be5b(0x2a2)][BowgunBarrel['selectedIndex']][_0x55be5b(0x320)] === _0x55be5b(0x322) && (_0x4b0996[_0x55be5b(0x1ea)] = ~~(_0x4b0996[_0x55be5b(0x1ea)] * 1.15)); if ((TuneUp['selectedIndex'] === 0x0 || TuneUp[_0x55be5b(0x26b)] === 0x1) && BowgunBarrel[_0x55be5b(0x2a2)][BowgunBarrel[_0x55be5b(0x26b)]][_0x55be5b(0x320)] === _0x55be5b(0x1e2)) _0x4b0996[_0x55be5b(0x1ea)] = ~~(_0x4b0996['baseRaw'] * 1.05);
        else TuneUp[_0x55be5b(0x26b)] === 0x2 && BowgunBarrel[_0x55be5b(0x2a2)][BowgunBarrel[_0x55be5b(0x26b)]]['text'] === _0x55be5b(0x1e2) && (_0x4b0996['baseRaw'] = ~~(_0x4b0996[_0x55be5b(0x1ea)] * 1.075)); } return _0x4b0996[_0x55be5b(0x1ea)] += Number($('output.attackAug')[_0x55be5b(0x26f)]()) / 0x2 * 0x5, attackResult[_0x55be5b(0x25b)] = '+\x20' + Number($(_0x55be5b(0x1e8))['val']() / 0x2) * 0x5, _0x4b0996[_0x55be5b(0x2b6)] += $(_0x55be5b(0x1f4))[_0x55be5b(0x26f)]() / 0x3 * 0x5, affinityResult[_0x55be5b(0x25b)] = '+\x20' + $(_0x55be5b(0x1f4))[_0x55be5b(0x26f)]() / 0x3 * 0x5, $(_0x55be5b(0x30a))[_0x55be5b(0x320)]($(_0x55be5b(0x21d))[_0x55be5b(0x26f)]() > 0x0 ? '+1' : '+0'), info[weaponType[_0x55be5b(0x25b)]][_0x55be5b(0x18a)][$(_0x55be5b(0x23b))[_0x55be5b(0x26f)]()][_0x55be5b(0x1a3)] !== 'None' ? (_0x4b0996[_0x55be5b(0x22f)] += $(_0x55be5b(0x185))[_0x55be5b(0x26f)]() * 0x3, elementalResult[_0x55be5b(0x25b)] = '+\x20' + $(_0x55be5b(0x185))[_0x55be5b(0x26f)]() * 0x3) : $(_0x55be5b(0x185))['val'](0x0), _0x4b0996[_0x55be5b(0x20b)] = +_0x4b0996[_0x55be5b(0x2b6)], {..._0x4b0996 }; };

function getDependantSkills(_0x1f14ab) { const _0x53f13d = _0x40b288,
        _0x1cfc7a = []; if (/Bow/ ['test']($(weaponType)[_0x53f13d(0x26f)]())) { if (/Pierc/ [_0x53f13d(0x1d2)](_0x1f14ab[_0x53f13d(0x1f9)])) _0x1cfc7a[_0x53f13d(0x27f)](info[_0x53f13d(0x1bb)][_0x53f13d(0x282)][PierceUp[_0x53f13d(0x26b)]]);
        else { if (/Spread/ ['test'](_0x1f14ab['attackName'])) _0x1cfc7a[_0x53f13d(0x27f)](info[_0x53f13d(0x1bb)][_0x53f13d(0x25f)][SpreadUp['selectedIndex']]);
            else /Normal|Rapid/ [_0x53f13d(0x1d2)](_0x1f14ab[_0x53f13d(0x1f9)]) && _0x1cfc7a['push'](info[_0x53f13d(0x1bb)][_0x53f13d(0x252)][NormalRapidUp['selectedIndex']]); } /RF+/ [_0x53f13d(0x1d2)](_0x1f14ab[_0x53f13d(0x1f9)]) && _0x1cfc7a[_0x53f13d(0x27f)](info['skills'][_0x53f13d(0x17e)][RapidFireUp['selectedIndex']]); /Wyvern|Dragon Piercer/ [_0x53f13d(0x1d2)](_0x1f14ab[_0x53f13d(0x1f9)]) && _0x1cfc7a[_0x53f13d(0x27f)](info[_0x53f13d(0x1bb)]['SpecialAmmoBoost'][SpecialAmmoBoost[_0x53f13d(0x26b)]]); if (/BowGun/ [_0x53f13d(0x1d2)](weaponType['value'])) { weaponType[_0x53f13d(0x25b)] === hbg && (/Sticky|Wyvern/ [_0x53f13d(0x1d2)](_0x1f14ab['attackName']) && (_0x1f14ab[_0x53f13d(0x2e3)] *= info[_0x53f13d(0x1bb)][_0x53f13d(0x1b9)][Bombardier['selectedIndex']][_0x1f14ab[_0x53f13d(0x1f9)][_0x53f13d(0x200)]('Sticky|Wyvern')[0x0]][0x1], _0x1f14ab[_0x53f13d(0x229)] *= info[_0x53f13d(0x1bb)]['Bombardier'][Bombardier['selectedIndex']][_0x1f14ab[_0x53f13d(0x1f9)][_0x53f13d(0x200)](_0x53f13d(0x255))[0x0]][0x0]), !/snipe|heart|Cluster/ [_0x53f13d(0x1d2)](_0x1f14ab['attackName']) && (_0x1f14ab[_0x53f13d(0x259)] *= info[_0x53f13d(0x1bb)][_0x53f13d(0x20a)][ChargeLevel['selectedIndex']][_0x53f13d(0x259)], _0x1f14ab[_0x53f13d(0x245)] ? _0x1f14ab[_0x53f13d(0x22f)] *= info[_0x53f13d(0x1bb)]['ChargeLevel'][ChargeLevel[_0x53f13d(0x26b)]][_0x53f13d(0x23c)] : _0x1f14ab[_0x53f13d(0x23c)] *= info[_0x53f13d(0x1bb)][_0x53f13d(0x20a)][ChargeLevel['selectedIndex']][_0x53f13d(0x23c)])); if (dropWeaponType[_0x53f13d(0x25b)] === lbg && /Pierce|Spread|Normal/ ['test'](_0x1f14ab[_0x53f13d(0x1f9)]) && $(CriticalFirePower)[0x0]['selectedIndex'] > 0x0) { if (/Normal/ ['test'](_0x1f14ab[_0x53f13d(0x1f9)])) _0x1f14ab[_0x53f13d(0x259)] *= 1.3;
                else { if (/Spread/ ['test'](_0x1f14ab['attackName'])) _0x1f14ab[_0x53f13d(0x259)] *= 1.2;
                    else /Pierce/ [_0x53f13d(0x1d2)](_0x1f14ab['attackName']) && (_0x1f14ab[_0x53f13d(0x259)] *= 1.1); } } } } if ($(weaponType)[_0x53f13d(0x26f)]() === _0x53f13d(0x27d) && !/Helm Breaker|Serene/ [_0x53f13d(0x1d2)](_0x1f14ab[_0x53f13d(0x1f9)])) _0x1cfc7a[_0x53f13d(0x27f)](info[_0x53f13d(0x1bb)]['SpiritGauge'][SpiritGauge[_0x53f13d(0x26b)]]);
    else /Helm Breaker|Serene/ ['test'](_0x1f14ab[_0x53f13d(0x1f9)]) && _0x1f14ab['getSkills']['push'](/Helm Breaker/ ['test'](_0x1f14ab[_0x53f13d(0x1f9)]) ? _0x1cfc7a[_0x53f13d(0x27f)](info[_0x53f13d(0x1bb)]['Helmbreaker'][Helmbreaker[_0x53f13d(0x26b)]]) : _0x1cfc7a[_0x53f13d(0x27f)](info[_0x53f13d(0x1bb)][_0x53f13d(0x189)][SerenePose[_0x53f13d(0x26b)]])); if ($(weaponType)[_0x53f13d(0x26f)]() === _0x53f13d(0x279)) { const _0x3193e6 = new RegExp(/Charged Slash|Rising Slash|Wide Slash|Strong Charged Slash|True Charged Slash|Rage Slash/);
        _0x3193e6[_0x53f13d(0x1d2)](_0x1f14ab[_0x53f13d(0x1f9)]) && $(StrongarmStance)[0x0][_0x53f13d(0x26b)] > 0x0 && (_0x1f14ab[_0x53f13d(0x259)] *= info[_0x53f13d(0x1bb)][_0x53f13d(0x1c8)][_0x1f14ab[_0x53f13d(0x1f9)][_0x53f13d(0x200)](_0x3193e6)[0x0]][0x0], _0x1f14ab['PEM'] *= info[_0x53f13d(0x1bb)][_0x53f13d(0x1c8)][_0x1f14ab[_0x53f13d(0x1f9)][_0x53f13d(0x200)](_0x3193e6)[0x0]][0x1]), /(?<!Tackle )Lv[1-3]/ [_0x53f13d(0x1d2)](_0x1f14ab[_0x53f13d(0x1f9)]) && (_0x1f14ab[_0x53f13d(0x249)] *= Number('1.' + _0x1f14ab[_0x53f13d(0x1f9)][_0x53f13d(0x200)](/(?<=Lv)[1-3]/)[0x0]), _0x1f14ab[_0x53f13d(0x249)] = _0x1f14ab[_0x53f13d(0x249)][_0x53f13d(0x2a7)](0x1)); } return $(weaponType)['val']() === _0x53f13d(0x2a3) && (!/3rd|(?<!Midair |Axe: )UED|(?<!Charged )Sword(?!.*Shield)/ [_0x53f13d(0x1d2)](_0x1f14ab[_0x53f13d(0x1f9)]) && _0x1cfc7a[_0x53f13d(0x27f)](info[_0x53f13d(0x1bb)]['savageAxe'][savageAxe[_0x53f13d(0x26b)]]), getWeapon()['phialType'] === _0x53f13d(0x334) ? _0x1cfc7a['push'](info[_0x53f13d(0x1bb)][_0x53f13d(0x21b)][impShieldCharge[_0x53f13d(0x26b)]]) : _0x1cfc7a['push'](info[_0x53f13d(0x1bb)]['eleShieldCharge'][eleShieldCharge[_0x53f13d(0x26b)]])), weaponType === bow && !/Stake/ [_0x53f13d(0x1d2)](_0x1f14ab[_0x53f13d(0x1f9)]) && _0x1cfc7a[_0x53f13d(0x27f)](info[_0x53f13d(0x1bb)]['BowCoating'][BowCoating[_0x53f13d(0x26b)]]), getStats(_0x1cfc7a, _0x1f14ab); }

function getEnrage() { const _0x39f8a9 = _0x40b288; return $(_0x39f8a9(0x1cb))[_0x39f8a9(0x26f)]() === 'Enraged' ? Object['values'](info['monster'][_0x39f8a9(0x2b3)])[_0x39f8a9(0x1fd)](_0x22dbf8 => _0x22dbf8[_0x39f8a9(0x214)] === dropMonster['value'])[0x0][_0x39f8a9(0x2e2)] : 0x1; }

function initialStats(_0x2c050b, _0x5e769a) { const _0x40d3cf = _0x40b288;
    comboTracker[0x0] === null && (comboTracker = []);
    _0x2c050b[_0x40d3cf(0x1ea)] += _0x2c050b['Draw'] === !![] ? +document['getElementById'](_0x40d3cf(0x340))[_0x40d3cf(0x25b)] : 0x0, _0x2c050b['BR'] = 0x0, _0x2c050b[_0x40d3cf(0x1d3)] = 0x1, _0x2c050b[_0x40d3cf(0x259)] = 0x1, _0x2c050b['BEM'] = 0x1, _0x2c050b['BE'] = 0x0, _0x2c050b[_0x40d3cf(0x23c)] = 0x1, _0x2c050b[_0x40d3cf(0x259)] *= DemonAmmo[_0x40d3cf(0x336)] && /(Sever|Blunt)/ [_0x40d3cf(0x1d2)](_0x2c050b[_0x40d3cf(0x24b)]) ? 1.1 : 0x1, 0x1; const _0x596d0c = []; return $(_0x40d3cf(0x226))[_0x40d3cf(0x1d0)](function() { const _0x50bd86 = _0x40d3cf;
        this[_0x50bd86(0x336)] && this['id'] !== _0x50bd86(0x216) && _0x596d0c['push'](JSON['parse'](this[_0x50bd86(0x25b)])); }), _0x2c050b[_0x40d3cf(0x1ac)] = []['concat'](Object[_0x40d3cf(0x25d)](info[_0x40d3cf(0x30d)][_0x5e769a])[_0x40d3cf(0x1fd)](_0x521097 => $('#' + _0x521097)[_0x40d3cf(0x1df)](_0x40d3cf(0x29a)) !== _0x40d3cf(0x1e3) && document['getElementById'](_0x521097)['selectedIndex'] > 0x0)), enrageDisplay[_0x40d3cf(0x2cb)] = ~~(getEnrage() * 0x64) + '%', $(_0x40d3cf(0x1cb))[_0x40d3cf(0x26f)]() === 'Enraged' && (_0x2c050b[_0x40d3cf(0x1ac)][_0x40d3cf(0x27f)](_0x40d3cf(0x33c)), _0x2c050b[_0x40d3cf(0x23c)] *= getEnrage(), _0x2c050b[_0x40d3cf(0x259)] *= getEnrage()), weaponType[_0x40d3cf(0x25b)] === db && (_0x2c050b[_0x40d3cf(0x2fc)] *= info[_0x40d3cf(0x1bb)]['ArchdemonMode'][ArchdemonMode[_0x40d3cf(0x26b)]][_0x40d3cf(0x2fc)], _0x2c050b['BEM'] *= !/\[Feral Demon Mode\]/ ['test'](_0x2c050b[_0x40d3cf(0x1f9)]) ? info[_0x40d3cf(0x1bb)][_0x40d3cf(0x1d6)][DemonMode['selectedIndex']]['BEM'] : 0x1, _0x2c050b[_0x40d3cf(0x1d3)] *= !/\[Demon Mode\]/ [_0x40d3cf(0x1d2)](_0x2c050b[_0x40d3cf(0x1f9)]) ? info[_0x40d3cf(0x1bb)][_0x40d3cf(0x288)][FeralDemonMode[_0x40d3cf(0x26b)]][_0x40d3cf(0x1d3)] : 0x1, _0x2c050b[_0x40d3cf(0x2b6)] += weaponRampage0['value'] === _0x40d3cf(0x316) ? 0x14 : 0x0), weaponType[_0x40d3cf(0x25b)] === _0x40d3cf(0x327) && (_0x2c050b[_0x40d3cf(0x1ac)] = _0x2c050b[_0x40d3cf(0x1ac)][_0x40d3cf(0x338)]('UpperCrit', _0x40d3cf(0x240))), _0x2c050b[_0x40d3cf(0x1ac)] = _0x2c050b[_0x40d3cf(0x1ac)][_0x40d3cf(0x1fd)](isUnique), $(_0x2c050b[_0x40d3cf(0x1ac)])[_0x40d3cf(0x1d0)](function() { const _0x53541a = _0x40d3cf;
        _0x596d0c[_0x53541a(0x27f)](info[_0x53541a(0x1bb)][this][document['getElementById'](this)[_0x53541a(0x26b)]]); }), getStats(_0x596d0c, _0x2c050b), weaponRampage0['value'] === _0x40d3cf(0x222) && (_0x2c050b['aff'] += 0xf), _0x2c050b[_0x40d3cf(0x2b6)] = getRawHZ(_0x2c050b[_0x40d3cf(0x24b)]) !== undefined && getRawHZ(_0x2c050b[_0x40d3cf(0x24b)]) >= 0x2d ? _0x2c050b[_0x40d3cf(0x2b6)] + JSON[_0x40d3cf(0x325)]($(_0x40d3cf(0x1be))['val']()) : _0x2c050b[_0x40d3cf(0x2b6)], _0x2c050b[_0x40d3cf(0x2b6)] = Math[_0x40d3cf(0x1b3)](_0x2c050b[_0x40d3cf(0x2b6)], 0x64) / 0x64, {..._0x2c050b }; }

function UpdateComboTracker() { const _0x517111 = _0x40b288; if (!Number[_0x517111(0x1f3)](+window[_0x517111(0x26e)][_0x517111(0x34c)]['id']) && window[_0x517111(0x26e)][_0x517111(0x34c)]['id'] !== '0') { let _0x27bf3a = $(_0x517111(0x1b8))[window[_0x517111(0x26e)][_0x517111(0x34c)]['id']][_0x517111(0x25b)] - TimesUsed(window['event'][_0x517111(0x34c)]['id']); while (_0x27bf3a > 0x0) { comboTracker['push'](window['event'][_0x517111(0x34c)]['id']), --_0x27bf3a; } while (_0x27bf3a < 0x0) { comboTracker['splice'](comboTracker[_0x517111(0x211)](window[_0x517111(0x26e)][_0x517111(0x34c)]['id']), 0x1), ++_0x27bf3a; } } }

function UpdateComboDisplay() { const _0x23d38f = _0x40b288;
    $('.comboHits')[_0x23d38f(0x22e)](); let _0x180694;
    $(comboTracker)[_0x23d38f(0x1d0)]((_0x14accd, _0x4f8af7) => { const _0x126db3 = _0x23d38f;
        _0x180694 = document[_0x126db3(0x1e5)](_0x126db3(0x1cd)), _0x180694[_0x126db3(0x247)] = _0x126db3(0x262), _0x180694[_0x126db3(0x2cb)] = $(_0x126db3(0x29e) + [_0x4f8af7] + _0x126db3(0x1b2))[_0x126db3(0x320)](), $(comboCountDisplay)[_0x126db3(0x2c8)](_0x180694); }); }

function getInitialSharpness(_0x3584d8 = {...info[weaponType[_0x40b288(0x25b)]][_0x40b288(0x18a)][dropWeapon[_0x40b288(0x25b)]][_0x40b288(0x1da)] }) { const _0x9490da = _0x40b288; let _0x5bcfac = []; if (Handicraft['selectedIndex'] > 0x0) { if (_0x3584d8['purple'] > 0x0) _0x5bcfac = [_0x9490da(0x1ff)];
        else { if (_0x3584d8[_0x9490da(0x1b7)] > 0x0) _0x5bcfac = ['white', 'purple'];
            else { if (_0x3584d8[_0x9490da(0x266)] > 0x0) _0x5bcfac = [_0x9490da(0x266), _0x9490da(0x1b7), 'purple'];
                else { if (_0x3584d8[_0x9490da(0x25e)] > 0x0) _0x5bcfac = [_0x9490da(0x25e), _0x9490da(0x266), _0x9490da(0x1b7), _0x9490da(0x1ff)];
                    else _0x3584d8[_0x9490da(0x277)] > 0x0 && (_0x5bcfac = [_0x9490da(0x277), _0x9490da(0x25e), _0x9490da(0x266), _0x9490da(0x1b7)]); } } } let _0x366759 = Handicraft['selectedIndex'];
        $(getWeapon()[_0x9490da(0x272)])[_0x9490da(0x1d0)]((_0x4ba194, _0x4e497f) => { while (_0x4e497f > 0x0 && _0x366759 > 0x0) { _0x3584d8[_0x5bcfac[_0x4ba194]] += 0xa, --_0x366759, _0x4e497f -= 0xa; } }); } return {..._0x3584d8 }; }

function applySharpnessSkills(_0x3c8d4e, _0x202f89 = {...getInitialSharpness() }) { const _0x1d7896 = _0x40b288; let _0x3eef6d = []; const _0x382fea = info[_0x1d7896(0x1bb)][_0x1d7896(0x1c2)][RazorSharp[_0x1d7896(0x26b)]][_0x1d7896(0x30f)]; let _0x513529 = info[_0x1d7896(0x1bb)][_0x1d7896(0x250)][MastersTouch[_0x1d7896(0x26b)]][_0x1d7896(0x30f)];
    _0x513529 *= _0x3c8d4e; const _0x45663e = _0x3c8d4e > 0x0 && MastersTouch['selectedIndex'] > 0x0 ? sharpnessReduction(_0x513529) * sharpnessReduction(_0x382fea) : sharpnessReduction(_0x382fea); return _0x3eef6d = Object['entries'](_0x202f89)[_0x1d7896(0x2ae)](_0x13b294 => ~~(+_0x13b294[0x1] * +_0x45663e)), _0x3eef6d; }

function getTotalComboHits() { const _0x194f6c = _0x40b288; let [..._0x425f2f] = comboTracker; if (comboTracker[0x0] !== undefined && comboTracker[0x0] !== null) { let _0x25ae8b = $(_0x194f6c(0x1cf))[_0x194f6c(0x26f)](); while (_0x25ae8b > 0x1) { _0x425f2f = _0x425f2f['concat'](comboTracker), --_0x25ae8b; } return _0x425f2f; } }

function getComboHitsAndSetSharpness(_0x54c312 = 0x0) { const _0x2ba06e = _0x40b288,
        [_0x355a11, _0x3a73b8, _0x3c238f] = hitsPerColorSharp(_0x54c312); let _0x27f68c = ![]; for (let _0xb513a1 = 0x0; _0xb513a1 < 0x7; _0xb513a1++) { const _0x3e116c = _0x355a11[_0xb513a1],
            _0x4b491b = $(_0x2ba06e(0x2f9))[_0x2ba06e(0x18e)]()[0x6 - _0xb513a1];
        _0x4b491b['textContent'] = _0x3e116c < 0.1 ? '' : Number(_0x3e116c)[_0x2ba06e(0x2a7)](0x0), $(_0x4b491b)['width'](Number(_0x3e116c)[_0x2ba06e(0x2a7)](0x0) / _0x3c238f * $(damageContainer)[_0x2ba06e(0x2c1)]() * 0.46), _0x3e116c > 0x0 && !_0x27f68c && (Sharpness[_0x2ba06e(0x26b)] = 0x7 - _0xb513a1, _0x27f68c = !![]); } return _0x3a73b8; }

function hitsPerColorSharp(_0x4419cb = 0x0, _0x11d5c3 = getTotalComboHits()) { const _0x4c6ab4 = _0x40b288; let _0x5087a2 = { 'purple': [], 'white': [], 'blue': [], 'green': [], 'yellow': [], 'orange': [], 'red': [] }; const _0x32cf35 = weaponType['value'] !== bow ? {...applySharpnessSkills(_0x4419cb)[_0x4c6ab4(0x180)]() } : [0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0],
        _0x47966e = Object[_0x4c6ab4(0x25d)](_0x32cf35)[_0x4c6ab4(0x324)]((_0x74b6db, _0x40819b) => _0x74b6db + _0x40819b); return _0x11d5c3 !== undefined && _0x11d5c3[_0x4c6ab4(0x2ba)](_0xb8c9ee => { const _0x2adf95 = _0x4c6ab4,
            _0x1f9fe2 = Object['keys'](getUsedAttacks())[_0xb8c9ee],
            _0x559372 = getHitsPerTic(_0x1f9fe2, _0xb8c9ee); if (weaponType['value'] !== 'Gunlance' || weaponType[_0x2adf95(0x25b)] === _0x2adf95(0x2f1) && _0xb8c9ee < 0x1c)
            for (let _0x3f3be2 = 0x0; _0x3f3be2 < getAttacks()[_0x1f9fe2][_0x2adf95(0x27b)] + 0x1; _0x3f3be2++) { if (_0x32cf35[0x0] > 0.1) _0x5087a2[_0x2adf95(0x1ff)]['push'](_0xb8c9ee), _0x32cf35[0x0] -= _0x559372;
                else { if (_0x32cf35[0x1] > 0.1) _0x5087a2[_0x2adf95(0x1b7)]['push'](_0xb8c9ee), _0x32cf35[0x1] -= _0x559372;
                    else { if (_0x32cf35[0x2] > 0.1) _0x5087a2['blue'][_0x2adf95(0x27f)](_0xb8c9ee), _0x32cf35[0x2] -= _0x559372;
                        else { if (_0x32cf35[0x3] > 0.1) _0x5087a2[_0x2adf95(0x25e)][_0x2adf95(0x27f)](_0xb8c9ee), _0x32cf35[0x3] -= _0x559372;
                            else { if (_0x32cf35[0x4] > 0.1) _0x5087a2[_0x2adf95(0x277)]['push'](_0xb8c9ee), _0x32cf35[0x4] -= _0x559372;
                                else { if (_0x32cf35[0x5] > 0.1) _0x5087a2[_0x2adf95(0x32f)][_0x2adf95(0x27f)](_0xb8c9ee), _0x32cf35[0x5] -= _0x559372;
                                    else _0x32cf35[0x6] > 0.1 && (_0x5087a2[_0x2adf95(0x19a)][_0x2adf95(0x27f)](_0xb8c9ee), _0x32cf35[0x6] -= _0x559372); } } } } } } }), [_0x32cf35, _0x5087a2, _0x47966e]; }

function getHitsPerTic(_0x5a3c8e, _0x5c90cf) { const _0x50e723 = _0x40b288; if (ProtectivePolish['checked'] || weaponType[_0x50e723(0x25b)] === bow) return 0x0; if (weaponType[_0x50e723(0x25b)] === 'Gunlance' && _0x5c90cf > 0x1b || weaponType[_0x50e723(0x25b)] !== _0x50e723(0x2f1)) return weaponType['value'] !== db ? getAttacks()[_0x5a3c8e][_0x50e723(0x1dd)] : getAttacks()[_0x5a3c8e][_0x50e723(0x1dd)] / 0x3; return 0x1; }

function GetRemainingSkills(_0x4f14e4) { const _0xfe8383 = _0x40b288;
    [_0x4f14e4[_0xfe8383(0x2e3)], _0x4f14e4['augPRM'], _0x4f14e4[_0xfe8383(0x1ab)]] = [0x1, 0x1, 0x1], _0x4f14e4['augPEM'] *= $(_0xfe8383(0x2f8))[_0xfe8383(0x26f)]() === _0xfe8383(0x2a4) && _0x4f14e4[_0xfe8383(0x1a3)] === 'Dragon' ? 1.2 : 0x1, [_0x4f14e4['augEFR'], _0x4f14e4[_0xfe8383(0x229)]] = $(_0xfe8383(0x2f8))[_0xfe8383(0x26f)]() === _0xfe8383(0x1d9) && Sharpness[_0xfe8383(0x26b)] < 0x5 ? [1.02, 1.2] : [_0x4f14e4[_0xfe8383(0x2e3)], _0x4f14e4[_0xfe8383(0x229)]];
    info['types'][dropMonster['value']][weaponRampage0[_0xfe8383(0x25b)][_0xfe8383(0x200)](/Aerial|Aquatic|Wyvern|Fanged/)] !== undefined && (_0x4f14e4[_0xfe8383(0x259)] *= 1.05); /blight Exploit/ [_0xfe8383(0x1d2)](weaponRampage0['value']) && (_0x4f14e4[_0xfe8383(0x259)] *= 1.1);
    weaponRampage0[_0xfe8383(0x25b)] === 'Magnamalo\x20Soul' && (_0x4f14e4['BR'] += 0xc);
    (_0x4f14e4[_0xfe8383(0x24b)] === 'IgnoreHZV' && weaponType['value'] === lbg || weaponType['value'] === cb) && (_0x4f14e4['augEFR'] *= info[_0xfe8383(0x1bb)]['Bombardier'][Bombardier[_0xfe8383(0x26b)]][0x1], _0x4f14e4[_0xfe8383(0x229)] *= info['skills'][_0xfe8383(0x1b9)][Bombardier[_0xfe8383(0x26b)]][0x0], weaponType[_0xfe8383(0x25b)] === sa && /Sword|ZSD|ED/ [_0xfe8383(0x1d2)](_0x4f14e4[_0xfe8383(0x1f9)]) && _0x4f14e4[_0xfe8383(0x28c)] === 'Impact\x20Phial' && (_0x4f14e4['BRM'] *= 1.15), weaponType[_0xfe8383(0x25b)] === sa && /Sword|Elemental|ED/ [_0xfe8383(0x1d2)](_0x4f14e4[_0xfe8383(0x1f9)]) && _0x4f14e4[_0xfe8383(0x28c)] === _0xfe8383(0x2b5) && (_0x4f14e4[_0xfe8383(0x2fc)] *= 1.45));
    _0x4f14e4[_0xfe8383(0x1a3)] !== _0xfe8383(0x305) && (_0x4f14e4[_0xfe8383(0x23c)] *= getWeapon()[_0xfe8383(0x2f4)] === 0x0 && $(_0xfe8383(0x2f8))[_0xfe8383(0x26f)]() === _0xfe8383(0x258) && getEleHZ(_0x4f14e4[_0xfe8383(0x1a3)]) >= 0x19 ? 1.3 : 0x1, _0x4f14e4[_0xfe8383(0x23c)] *= getWeapon()[_0xfe8383(0x2f4)] !== 0x0 && $(_0xfe8383(0x2f8))[_0xfe8383(0x26f)]() == _0xfe8383(0x2b2) && getEleHZ(_0x4f14e4['eleType']) >= 0x19 && lower(_0x4f14e4[_0xfe8383(0x1a3)]) !== 'none' ? 1.15 : 0x1, _0x4f14e4['PEM'] *= getEleHZ(_0x4f14e4[_0xfe8383(0x1a3)]) >= 0x14 && lower(_0x4f14e4['eleType']) !== _0xfe8383(0x1e3) ? info['skills'][_0xfe8383(0x2df)][ElementalExploit[_0xfe8383(0x26b)]][_0xfe8383(0x23c)] : 0x1);
    (weaponType['value'] === cb || weaponType[_0xfe8383(0x25b)] === sa) && (_0x4f14e4[_0xfe8383(0x1d3)] *= /Morph Slash|Condensed Spinning|Up Roundslash/ [_0xfe8383(0x1d2)](_0x4f14e4[_0xfe8383(0x1f9)]) ? info['skills'][_0xfe8383(0x32d)][RapidMorph[_0xfe8383(0x26b)]]['BRM'] : 0x1);
    Sharpness['selectedIndex'] > 0x0 && Bludgeoner[_0xfe8383(0x26b)] > 0x0 && (_0x4f14e4[_0xfe8383(0x1d3)] *= Bludgeoner[_0xfe8383(0x26b)] === 0x1 && Sharpness['selectedIndex'] < 0x4 ? [1.05] : [0x1], _0x4f14e4['BRM'] *= Bludgeoner[_0xfe8383(0x26b)] === 0x2 && Sharpness[_0xfe8383(0x26b)] < 0x4 ? [1.1] : [0x1], _0x4f14e4[_0xfe8383(0x1d3)] *= Bludgeoner[_0xfe8383(0x26b)] === 0x3 && Sharpness[_0xfe8383(0x26b)] < 0x5 ? [1.1] : [0x1]); if (!/Wyvern/ [_0xfe8383(0x1d2)](_0x4f14e4['attackName']) && Object[_0xfe8383(0x17f)](info[_0xfe8383(0x1bb)][_0xfe8383(0x206)])[_0xfe8383(0x251)](weaponType['value']) && _0x4f14e4[_0xfe8383(0x206)] === !![]) _0x4f14e4[_0xfe8383(0x2fc)] *= info['skills'][_0xfe8383(0x206)][weaponType[_0xfe8383(0x25b)]][ChargeMaster[_0xfe8383(0x26b)]][_0xfe8383(0x2fc)];
    else _0x4f14e4[_0xfe8383(0x206)] === !![] && _0x4f14e4[_0xfe8383(0x245)] === !![] && (_0x4f14e4[_0xfe8383(0x22f)] *= /Wyvern/ [_0xfe8383(0x1d2)](_0x4f14e4[_0xfe8383(0x1f9)]) ? info['skills'][_0xfe8383(0x206)][_0xfe8383(0x2f2)][ChargeMaster[_0xfe8383(0x26b)]][_0xfe8383(0x2fc)] : info[_0xfe8383(0x1bb)][_0xfe8383(0x206)][weaponType[_0xfe8383(0x25b)]][ChargeMaster[_0xfe8383(0x26b)]][_0xfe8383(0x2fc)]); const _0x5c3b2e = [];
    [_0x5c3b2e[_0xfe8383(0x259)], _0x5c3b2e[_0xfe8383(0x23c)]] = _0x4f14e4['noSharpMod'] === ![] && /sever|blunt/ ['test'](lower(_0x4f14e4['type'])) ? [JSON[_0xfe8383(0x325)](Sharpness['value'])[_0xfe8383(0x259)], JSON[_0xfe8383(0x325)](Sharpness[_0xfe8383(0x25b)])[_0xfe8383(0x23c)]] : [0x1, 0x1], _0x4f14e4[_0xfe8383(0x259)] *= ~~(0x19 / _0x5c3b2e[_0xfe8383(0x259)]) >= getRawHZ(_0x4f14e4[_0xfe8383(0x24b)]) ? info[_0xfe8383(0x1bb)][_0xfe8383(0x236)][MindsEye[_0xfe8383(0x26b)]][_0xfe8383(0x259)] : 0x1; if (getWeapon()[_0xfe8383(0x2f4)] === 0x0 && $(_0xfe8383(0x2f8))['val']() === _0xfe8383(0x20f) && _0x4f14e4['aff'] < 0x0) _0x4f14e4[_0xfe8383(0x230)] = 0x1 + _0x4f14e4[_0xfe8383(0x2b6)] * -0x1 * 0.2 * 1.5 - _0x4f14e4[_0xfe8383(0x2b6)] * -0x1 * 0.8 * 0.75, _0x4f14e4[_0xfe8383(0x20d)] = 1.5;
    else getWeapon()[_0xfe8383(0x2f4)] !== 0x0 && $(_0xfe8383(0x2f8))['val']() === _0xfe8383(0x20f) && _0x4f14e4[_0xfe8383(0x2b6)] < 0x0 && (_0x4f14e4[_0xfe8383(0x230)] = 0x1 + _0x4f14e4[_0xfe8383(0x2b6)] * -0x1 * 0.25 * 0x2 - _0x4f14e4[_0xfe8383(0x2b6)] * -0x1 * 0.75 * 0.75, _0x4f14e4[_0xfe8383(0x20d)] = 1.5); return _0x4f14e4[_0xfe8383(0x24b)] === 'Shot' && (_0x4f14e4[_0xfe8383(0x229)] *= info[_0xfe8383(0x1bb)]['Marksman'][Marksman[_0xfe8383(0x26b)]][0x0], _0x4f14e4[_0xfe8383(0x2e3)] *= info[_0xfe8383(0x1bb)][_0xfe8383(0x2a6)][Marksman['selectedIndex']][0x1]), !_0x4f14e4[_0xfe8383(0x2f3)] && (_0x4f14e4['augPRM'] *= info[_0xfe8383(0x1bb)][_0xfe8383(0x2f5)][SneakAttack[_0xfe8383(0x26b)]][_0xfe8383(0x259)], _0x4f14e4[_0xfe8383(0x2e3)] *= info[_0xfe8383(0x1bb)]['SneakAttack'][SneakAttack[_0xfe8383(0x26b)]]['PRM']), {..._0x4f14e4 }; }

function getCritEle(_0x5440d3, _0x43866b) { const _0x50a152 = _0x40b288; return _0x5440d3 ? { 'PEM': info['skills'][_0x50a152(0x2e7)][CriticalElement[_0x50a152(0x26b)]][_0x50a152(0x23c)], 'EFE': 0x1 + (info['skills']['CriticalElement'][CriticalElement[_0x50a152(0x26b)]][_0x50a152(0x23c)] - 0x1) * _0x43866b } : { 'PEM': 0x1, 'EFE': 0x1 }; }

function getCritBoost(_0xd07955, _0x5f56c0) { const _0x254a4e = _0x40b288; return _0xd07955 ? { 'PRM': info['skills']['CriticalBoost'][CriticalBoost['selectedIndex']][_0x254a4e(0x259)], 'EFR': 0x1 + (info['skills']['CriticalBoost'][CriticalBoost[_0x254a4e(0x26b)]]['PRM'] - 0x1) * _0x5f56c0 } : { 'PRM': 0x1, 'EFR': 0x1 }; }

function DamageCalculations(_0x40a3da) { const _0x3beac7 = _0x40b288; if (_0x40a3da['Raw'] === ![])[_0x40a3da[_0x3beac7(0x345)], _0x40a3da[_0x3beac7(0x33e)], _0x40a3da[_0x3beac7(0x24f)], _0x40a3da[_0x3beac7(0x23e)]] = [0x0, 0x0, 0x0, 0x0];
    else { _0x40a3da[_0x3beac7(0x345)] = Math['min'](_0x40a3da[_0x3beac7(0x1ea)] * _0x40a3da['BRM'] + _0x40a3da['BR'], 0xa28); const _0x1de101 = _0x40a3da[_0x3beac7(0x345)] * _0x40a3da['PRM'] * getRawHZ(lower(_0x40a3da['type'])) * _0x40a3da['rawMV'] / 0x2710;
        _0x40a3da[_0x3beac7(0x33e)] = Math[_0x3beac7(0x34b)](0x1, _0x1de101 * _0x40a3da[_0x3beac7(0x229)]), _0x40a3da[_0x3beac7(0x24f)] = Math['max'](0x1, _0x1de101 * _0x40a3da['augEFR'] * getCritBoost(_0x40a3da[_0x3beac7(0x271)], _0x40a3da['aff'])[_0x3beac7(0x2d9)]), _0x40a3da[_0x3beac7(0x23e)] = Math[_0x3beac7(0x34b)](0x1, _0x1de101 * _0x40a3da['augPRM'] * getCritBoost(_0x40a3da[_0x3beac7(0x271)], _0x40a3da[_0x3beac7(0x2b6)])[_0x3beac7(0x259)]); } if (Object['prototype'][_0x3beac7(0x257)][_0x3beac7(0x27e)](_0x40a3da, _0x3beac7(0x245)) && _0x40a3da[_0x3beac7(0x245)] === !![])[_0x40a3da[_0x3beac7(0x19d)], _0x40a3da['eleNon'], _0x40a3da[_0x3beac7(0x339)], _0x40a3da['eleCrit']] = [_0x40a3da[_0x3beac7(0x22f)], _0x40a3da[_0x3beac7(0x22f)], _0x40a3da['baseEle'], _0x40a3da[_0x3beac7(0x22f)]];
    else { if (_0x40a3da[_0x3beac7(0x2ee)] === ![] || _0x40a3da[_0x3beac7(0x1a3)] === 'None' && !/BowGun/ [_0x3beac7(0x1d2)](weaponType[_0x3beac7(0x25b)]))[_0x40a3da['ele'], _0x40a3da[_0x3beac7(0x20c)], _0x40a3da[_0x3beac7(0x339)], _0x40a3da['eleCrit']] = [0x0, 0x0, 0x0, 0x0];
        else { _0x40a3da['eleAmmo'] = /BowGun/ [_0x3beac7(0x1d2)](weaponType[_0x3beac7(0x25b)]) && _0x40a3da[_0x3beac7(0x1a3)] !== 'None' ? 0x1 + _0x40a3da[_0x3beac7(0x345)] / 0x64 : 0x1, _0x40a3da[_0x3beac7(0x19d)] = Math[_0x3beac7(0x1b3)](_0x40a3da[_0x3beac7(0x22f)] * _0x40a3da[_0x3beac7(0x2fc)] + _0x40a3da['BE'], 0x16d) * _0x40a3da['eleAmmo']; const _0x7b11ab = _0x40a3da[_0x3beac7(0x19d)] * _0x40a3da['PEM'] * (getEleHZ(_0x40a3da[_0x3beac7(0x1a3)]) / 0x64) * _0x40a3da['eleMV'] * _0x40a3da['augPEM'];
            _0x40a3da[_0x3beac7(0x20c)] = Math['max'](0x1, _0x7b11ab), _0x40a3da[_0x3beac7(0x339)] = Math[_0x3beac7(0x34b)](0x1, _0x7b11ab * getCritEle(_0x40a3da[_0x3beac7(0x271)], _0x40a3da[_0x3beac7(0x2b6)])[_0x3beac7(0x2c2)]), _0x40a3da[_0x3beac7(0x19f)] = Math[_0x3beac7(0x34b)](0x1, _0x7b11ab * getCritEle(_0x40a3da['Crit'], _0x40a3da['aff'])[_0x3beac7(0x23c)]); } } return {..._0x40a3da }; }
const sharpnessReduction = _0x5f052e => 0x1 / (0x1 - _0x5f052e);

function GunlanceShelling(_0x1aca7d, _0x1d00bf, _0x2923db, _0x32f3c2) { const _0x4e4211 = _0x40b288,
        _0x575732 = new RegExp(getWeapon()[_0x4e4211(0x19c)] + '\x20Lv' + getWeapon()[_0x4e4211(0x1b6)]); let _0xd3d5ea = 0x1,
        _0x23366f = 0x1;
    $(Object[_0x4e4211(0x29f)](getAttacks())[_0x4e4211(0x1fd)](_0x1f2506 => _0x575732[_0x4e4211(0x1d2)](_0x1f2506)))['each'](function(_0xb8bf2b) { const _0x2c7cb5 = _0x4e4211;
        _0xd3d5ea = ~~(this[0x1][_0x2c7cb5(0x249)] * info[_0x2c7cb5(0x1bb)][_0x2c7cb5(0x1b9)][Bombardier[_0x2c7cb5(0x26b)]][0x0] * info[_0x2c7cb5(0x1bb)][_0x2c7cb5(0x28f)][Artillery[_0x2c7cb5(0x26b)]][_0x2c7cb5(0x1d3)]), _0x23366f = ~~(this[0x1]['rawMV'] * info[_0x2c7cb5(0x1bb)][_0x2c7cb5(0x1b9)][Bombardier[_0x2c7cb5(0x26b)]][0x1] * info[_0x2c7cb5(0x1bb)][_0x2c7cb5(0x28f)][Artillery['selectedIndex']][_0x2c7cb5(0x1d3)]); const _0x407fe6 = [_0x2c7cb5(0x302), this[0x0], 0x0, _0xd3d5ea + _0x2c7cb5(0x319) + _0xd3d5ea, this[0x1][_0x2c7cb5(0x22f)] + _0x2c7cb5(0x319) + this[0x1][_0x2c7cb5(0x22f)], (_0xd3d5ea + this[0x1][_0x2c7cb5(0x22f)]) * (this[0x1][_0x2c7cb5(0x27b)] + 0x1) + _0x2c7cb5(0x319) + (_0xd3d5ea + this[0x1]['baseEle']) * (this[0x1][_0x2c7cb5(0x27b)] + 0x1), _0x23366f, this[0x1][_0x2c7cb5(0x22f)], (_0x23366f + this[0x1][_0x2c7cb5(0x22f)]) * (this[0x1][_0x2c7cb5(0x27b)] + 0x1)];
        _0x1aca7d[_0x2c7cb5(0x27f)](_0x407fe6), _0x1d00bf[0x0] += 0x0, _0x1d00bf[0x1] += _0xd3d5ea * TimesUsed(_0xb8bf2b + 0x1c), _0x1d00bf[0x2] += _0xd3d5ea * TimesUsed(_0xb8bf2b + 0x1c), _0x1d00bf[0x3] += this[0x1][_0x2c7cb5(0x22f)] * TimesUsed(_0xb8bf2b + 0x1c), _0x1d00bf[0x4] += this[0x1]['baseEle'] * TimesUsed(_0xb8bf2b + 0x1c), _0x1d00bf[0x5] += (_0xd3d5ea + this[0x1][_0x2c7cb5(0x22f)]) * (_0x2923db['ticsPer'] + 0x1) * TimesUsed(_0xb8bf2b + 0x1c), _0x1d00bf[0x6] += (_0xd3d5ea + this[0x1][_0x2c7cb5(0x22f)]) * (_0x2923db[_0x2c7cb5(0x27b)] + 0x1) * TimesUsed(_0xb8bf2b + 0x1c), _0x1d00bf[0x7] += (_0x23366f + this[0x1][_0x2c7cb5(0x22f)]) * (_0x2923db[_0x2c7cb5(0x27b)] + 0x1) * TimesUsed(_0xb8bf2b + 0x1c); });! /Inputs|inputButton/ [_0x4e4211(0x1d2)](window['event']['target']['className']) && BuildDamageTable(_0x1aca7d, _0x4e4211(0x346), _0x32f3c2);
    c0[_0x4e4211(0x312)] = '' + formatNumbers(_0x1d00bf[0x0]), d0[_0x4e4211(0x312)] = formatNumbers(_0x1d00bf[0x1]) + _0x4e4211(0x319) + formatNumbers(_0x1d00bf[0x2]), e0[_0x4e4211(0x312)] = formatNumbers(_0x1d00bf[0x3]) + _0x4e4211(0x319) + formatNumbers(_0x1d00bf[0x4]), f0[_0x4e4211(0x312)] = formatNumbers(_0x1d00bf[0x5]) + _0x4e4211(0x319) + formatNumbers(_0x1d00bf[0x6]), g0['innerHTML'] = '' + formatNumbers(_0x1d00bf[0x7]); return; }

function BuildDamageTable(_0x595adf, _0x5459ee, _0x45be2d) { const _0x817551 = _0x40b288,
        _0x3cbe9c = ammoTable[_0x817551(0x1dc)][_0x817551(0x29a)],
        _0x2698ac = dpsTable[_0x817551(0x1dc)]['display'],
        _0x2961f2 = /gray/ ['test'](filterCombo[_0x817551(0x247)]) ? document[_0x817551(0x2a5)]('.a') : document[_0x817551(0x2a5)](_0x817551(0x227)); let _0x4a290c = 0x0; const _0x2a701a = document[_0x817551(0x2d0)]('#' + _0x5459ee + 'Head'),
        _0x4e05fd = document[_0x817551(0x2d0)]('#' + _0x5459ee + _0x817551(0x31b)),
        _0x28dede = document['createElement'](_0x817551(0x23f)),
        _0x36830f = document['createElement']('thead'),
        _0x272926 = document[_0x817551(0x1e5)]('tr'),
        _0x5a3152 = document['createElement'](_0x817551(0x1a8)),
        _0x23414a = _0x595adf[_0x817551(0x238)](0x0, 0x1);
    _0x23414a[0x0]['forEach'](_0x32f638 => { const _0x548f57 = _0x817551,
            _0xd7cf35 = document[_0x548f57(0x1e5)]('th'),
            _0xb6db3 = document['createTextNode'](_0x32f638);
        _0xd7cf35[_0x548f57(0x18c)](_0xb6db3), _0x272926[_0x548f57(0x18c)](_0xd7cf35); }), _0x36830f[_0x817551(0x18c)](_0x272926), _0x2a701a[_0x817551(0x198)](_0x36830f), _0x595adf[_0x817551(0x2ba)](_0x44d490 => { const _0x43a5cf = _0x817551,
            _0x62aadf = document[_0x43a5cf(0x1e5)]('tr');
        Object[_0x43a5cf(0x25d)](_0x44d490)[_0x43a5cf(0x2ba)](_0x2b59ae => { const _0x4eb8e7 = _0x43a5cf; if (_0x2b59ae === _0x4eb8e7(0x302)) { if ($(previousWeaponType)[_0x4eb8e7(0x26f)]() === $(weaponType)[_0x4eb8e7(0x26f)]() && _0x2961f2[_0x4eb8e7(0x1bc)] > 0x0 && (window['event'][_0x4eb8e7(0x34c)] === dropWeapon && weaponType['value'] !== cb || window[_0x4eb8e7(0x26e)]['target'] !== dropWeapon) && window[_0x4eb8e7(0x26e)][_0x4eb8e7(0x34c)]['id'] !== _0x4eb8e7(0x347) && ($(weaponType)[_0x4eb8e7(0x26f)]() === _0x4eb8e7(0x327) && previousWeapon[_0x4eb8e7(0x25b)] === dropWeapon[_0x4eb8e7(0x25b)] || $(weaponType)[_0x4eb8e7(0x26f)]() !== _0x4eb8e7(0x327))) _0x62aadf[_0x4eb8e7(0x18c)](_0x2961f2[_0x4a290c]), ++_0x4a290c;
                else { const _0x3e8aac = document['createElement']('td'),
                        _0x55bb83 = document[_0x4eb8e7(0x1e5)](_0x4eb8e7(0x21e));
                    _0x55bb83['setAttribute'](_0x4eb8e7(0x24b), 'Number'), _0x55bb83['setAttribute'](_0x4eb8e7(0x32b), _0x4eb8e7(0x328) + _0x4a290c), _0x55bb83[_0x4eb8e7(0x308)](_0x4eb8e7(0x2aa), 0x14), $(weaponType)['val']() === 'Bow' && previousWeapon['value'] !== dropWeapon[_0x4eb8e7(0x25b)] && (comboTracker = [], UpdateComboDisplay()), _0x4a290c === 0x0 ? (_0x55bb83[_0x4eb8e7(0x308)]('id', _0x4eb8e7(0x31e)), _0x55bb83[_0x4eb8e7(0x308)](_0x4eb8e7(0x2f6), 0x1), _0x55bb83[_0x4eb8e7(0x308)](_0x4eb8e7(0x25b), 0x1), _0x55bb83[_0x4eb8e7(0x308)](_0x4eb8e7(0x32b), _0x4eb8e7(0x194))) : (_0x55bb83[_0x4eb8e7(0x308)]('id', _0x4a290c), _0x55bb83[_0x4eb8e7(0x308)]('class', _0x4eb8e7(0x1ae)), _0x55bb83['setAttribute'](_0x4eb8e7(0x2f6), 0x0), _0x55bb83[_0x4eb8e7(0x308)]('value', 0x0)), ++_0x4a290c, _0x3e8aac[_0x4eb8e7(0x18c)](_0x55bb83), _0x62aadf[_0x4eb8e7(0x18c)](_0x3e8aac); } } else { const _0x201f7f = document[_0x4eb8e7(0x1e5)]('td'),
                    _0x96f72c = document[_0x4eb8e7(0x33a)](_0x2b59ae);
                _0x201f7f[_0x4eb8e7(0x18c)](_0x96f72c), _0x62aadf[_0x4eb8e7(0x18c)](_0x201f7f); } }), _0x5a3152[_0x43a5cf(0x18c)](_0x62aadf), _0x4e05fd[_0x43a5cf(0x198)](_0x5a3152); }), _0x28dede[_0x817551(0x308)]('id', _0x5459ee + _0x817551(0x267)), _0x36830f[_0x817551(0x308)]('id', _0x5459ee + _0x817551(0x315)), _0x5a3152['setAttribute']('id', _0x5459ee + _0x817551(0x31b)), _0x5a3152[_0x817551(0x247)] = /(BowGun)/ ['test'](weaponType[_0x817551(0x25b)]) ? _0x817551(0x2c9) : _0x817551(0x1f7), damageContainer['className'] = /(BowGun)/ [_0x817551(0x1d2)](weaponType[_0x817551(0x25b)]) ? _0x817551(0x1d4) : _0x817551(0x2cf), ammoTable['style'][_0x817551(0x29a)] = _0x3cbe9c, dpsTable[_0x817551(0x1dc)][_0x817551(0x29a)] = _0x2698ac; if (_0x5459ee !== _0x817551(0x1f6) && _0x5459ee !== _0x817551(0x296)) { const [_0x6dcb89, ..._0x596003] = /BowGun/ [_0x817551(0x1d2)](weaponType['value']) ? [_0x4a290c, 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'] : [_0x4a290c, 'a', 'b', 'c', 'd', 'e', 'f', 'g']; if (/BowGun/ [_0x817551(0x1d2)]($(weaponType)[_0x817551(0x26f)]()) && !/BowGun/ [_0x817551(0x1d2)]($(previousWeaponType)[_0x817551(0x26f)]())) $(_0x817551(0x331))[_0x817551(0x2d6)]();
        else !/BowGun/ [_0x817551(0x1d2)]($(weaponType)[_0x817551(0x26f)]()) && /BowGun/ [_0x817551(0x1d2)]($(previousWeaponType)['val']()) && $(_0x817551(0x331))['show']();
        $(_0x817551(0x29d))[_0x817551(0x26f)]($('#dropWeapon')['val']()), $(_0x817551(0x2c5))[_0x817551(0x26f)](weaponType[_0x817551(0x25b)]); for (let _0x400a6b = 0x0; _0x400a6b < _0x6dcb89; ++_0x400a6b) { let _0x1c57e9 = 0x0;
            _0x596003[_0x817551(0x2ba)](_0x982a83 => { const _0x518b27 = _0x817551;
                $('#' + _0x5459ee + _0x518b27(0x31b))[0x0][_0x518b27(0x18e)][_0x400a6b][_0x518b27(0x18e)][_0x1c57e9]['id'] = _0x982a83 + _0x400a6b, $('#' + _0x5459ee + _0x518b27(0x31b))[0x0][_0x518b27(0x18e)][_0x400a6b]['children'][_0x1c57e9][_0x518b27(0x247)] = _0x982a83 + '\x20' + _0x400a6b, ++_0x1c57e9; }); }! /BowGun/ [_0x817551(0x1d2)]($(weaponType)[_0x817551(0x26f)]()) && $(_0x817551(0x1e6) + _0x5459ee + 'Body>tr>td:nth-child(2)')[_0x817551(0x1d0)](function(_0x18bf45, _0x11f920) { const _0x46c7ea = _0x817551,
                _0xa47e33 = document[_0x46c7ea(0x1e5)]('td');
            _0xa47e33['innerHTML'] = _0x46c7ea(0x281) + _0x18bf45 + _0x46c7ea(0x318) + _0x18bf45 + _0x46c7ea(0x2ff) + _0x11f920[_0x46c7ea(0x2cb)] + _0x46c7ea(0x264), _0xa47e33['id'] = 'b' + _0x18bf45, this['replaceWith'](_0xa47e33), $(_0xa47e33)[_0x46c7ea(0x2a8)]('b\x20' + _0x18bf45 + _0x46c7ea(0x33b)); }); } /blue/ [_0x817551(0x1d2)](filterCombo['className']) && $('.a')[_0x817551(0x1d0)](_0x588d7d => { const _0x842aa8 = _0x817551;
        $('.' + _0x588d7d)[0x0][_0x842aa8(0x1dc)]['display'] === _0x842aa8(0x1e3) && $('.' + _0x588d7d)[_0x842aa8(0x2d6)](); }); const _0x3b2028 = !/BowGun/ [_0x817551(0x1d2)](weaponType['value']) ? _0x817551(0x34e) : 'tableRowRanged';
    Object[_0x817551(0x25d)](dpsTable[_0x817551(0x18e)])[_0x817551(0x2ba)](_0x4273f7 => { const _0x50e594 = _0x817551;
        Object['values'](_0x4273f7[_0x50e594(0x18e)])['forEach'](_0x2edf78 => { $(_0x2edf78)['addClass'](_0x3b2028); }); }), Object['values'](damageContainer[_0x817551(0x18e)][0x0][_0x817551(0x18e)][0x1]['children'])[_0x817551(0x2ba)](_0x444278 => { const _0x416e97 = _0x817551;
        $(_0x444278)['children']()['addClass'](_0x416e97(0x2c4)); }); }

function MonChart() { const _0x409fdd = _0x40b288; if (dropQuest[_0x409fdd(0x25b)] !== '') { let _0x2f4e9a = []; const _0x2fa720 = /Bow/ [_0x409fdd(0x1d2)](weaponType['value']) ? _0x409fdd(0x1aa) : weaponType[_0x409fdd(0x25b)][0x0] === 'H' ? 'blunt' : _0x409fdd(0x270),
            _0x492171 = [_0x409fdd(0x2cd) + info['quest'][dropQuest[_0x409fdd(0x25b)]]['spawn'], _0x409fdd(0x28b), _0x409fdd(0x1a1), _0x409fdd(0x295), 'Fire', 'Water', _0x409fdd(0x1c0), 'Ice', _0x409fdd(0x2fb)],
            _0x3c4df3 = document[_0x409fdd(0x1e5)](_0x409fdd(0x23f)),
            _0x5844f8 = document['querySelector'](_0x409fdd(0x30e)),
            _0x47d25c = document[_0x409fdd(0x1e5)]('tr');
        _0x492171['forEach'](_0xf7d30c => { const _0x47c9c8 = _0x409fdd,
                _0x100332 = document[_0x47c9c8(0x1e5)]('th'),
                _0x5216d5 = document[_0x47c9c8(0x33a)](_0xf7d30c);
            _0x100332[_0x47c9c8(0x18c)](_0x5216d5), _0x47d25c[_0x47c9c8(0x18c)](_0x100332); }), _0x3c4df3[_0x409fdd(0x18c)](_0x47d25c), _0x2f4e9a = Object['entries'](info['monster'][_0x409fdd(0x293)][dropMonster[_0x409fdd(0x25b)]])[_0x409fdd(0x33f)]((_0x3a2ca6, _0x180ef4) => { const _0xab7776 = _0x409fdd; if (_0x180ef4[0x1][_0x2fa720] === _0x3a2ca6[0x1][_0x2fa720] && document['querySelector'](_0xab7776(0x1ec))[_0xab7776(0x2cb)] !== _0xab7776(0x1e3)) return _0x180ef4[0x1][lower(document[_0xab7776(0x2d0)](_0xab7776(0x1ec))[_0xab7776(0x2cb)])] - _0x3a2ca6[0x1][lower(document[_0xab7776(0x2d0)](_0xab7776(0x1ec))['textContent'])]; return _0x180ef4[0x1][_0x2fa720] - _0x3a2ca6[0x1][_0x2fa720]; }), _0x2f4e9a[_0x409fdd(0x2ba)](_0x157fa1 => { const _0x53dbb3 = _0x409fdd,
                _0x3efaa4 = document[_0x53dbb3(0x1e5)]('tr'),
                _0x309ec2 = [_0x157fa1[0x1][_0x53dbb3(0x32c)] + '\x20' + _0x157fa1[0x1][_0x53dbb3(0x24d)]][_0x53dbb3(0x338)](Object[_0x53dbb3(0x25d)](_0x157fa1[0x1])[_0x53dbb3(0x238)](0x3, 0x8)); for (let _0x102dcd = 0x0; _0x102dcd < 0x9; ++_0x102dcd) { const _0x160558 = document['createElement']('td'); if (_0x102dcd !== 0x0) { _0x309ec2[_0x102dcd] = WaterBlight[_0x53dbb3(0x336)] && /1|2|3/ [_0x53dbb3(0x1d2)](_0x102dcd) ? Math[_0x53dbb3(0x1b3)](0x64, ~~(Math[_0x53dbb3(0x34b)](_0x309ec2[_0x102dcd], _0x309ec2[_0x102dcd] * 0.63 + 22.2) + 0x3)) : _0x309ec2[_0x102dcd]; if (_0x309ec2[_0x102dcd] < 0xe) _0x160558['setAttribute']('class', 'F');
                    else { if (_0x309ec2[_0x102dcd] < 0xf) _0x160558[_0x53dbb3(0x308)](_0x53dbb3(0x32b), 'C');
                        else { if (_0x309ec2[_0x102dcd] < 0x2d) _0x160558[_0x53dbb3(0x308)](_0x53dbb3(0x32b), 'B');
                            else { if (_0x309ec2[_0x102dcd] < 0x41) _0x160558[_0x53dbb3(0x308)](_0x53dbb3(0x32b), 'A');
                                else _0x309ec2[_0x102dcd] >= 0x41 && _0x160558[_0x53dbb3(0x308)](_0x53dbb3(0x32b), 'S'); } } }
                    _0x309ec2[_0x102dcd] = ~~_0x309ec2[_0x102dcd]; } const _0x51865a = document[_0x53dbb3(0x33a)](_0x309ec2[_0x102dcd]);
                _0x160558[_0x53dbb3(0x18c)](_0x51865a), _0x3efaa4[_0x53dbb3(0x18c)](_0x160558); }
            _0x3c4df3['appendChild'](_0x3efaa4); }), _0x3c4df3[_0x409fdd(0x308)]('id', _0x409fdd(0x306)), _0x5844f8['replaceWith'](_0x3c4df3), Object['values'](monTableContainer[_0x409fdd(0x18e)])[_0x409fdd(0x2ba)](_0x350f42 => { const _0x6515de = _0x409fdd;
            Object[_0x6515de(0x25d)](_0x350f42['children'])[_0x6515de(0x2ba)](_0x198c3f => { const _0x507dcf = _0x6515de;
                _0x198c3f['className'] = _0x507dcf(0x203); }); }); } }
$(_0x40b288(0x326))['on'](_0x40b288(0x2d8), function(_0x213c12) { const _0x2f8d67 = _0x40b288;
    _0x213c12[_0x2f8d67(0x34c)][_0x2f8d67(0x26b)] > 0x0 && ($(_0x2f8d67(0x210) + _0x213c12[_0x2f8d67(0x34c)]['id'] + ')')[0x0][_0x2f8d67(0x26b)] = 0x0, $('.demon:not(#' + _0x213c12['target']['id'] + ')')[0x1]['selectedIndex'] = 0x0); }), $([dropWeapon, weaponType])['on'](_0x40b288(0x2d8), _0x45da22 => { const _0x4e23ed = _0x40b288;
    weaponType[_0x4e23ed(0x25b)] === cb && classChange(); }), $([dropWeapon, weaponType])['on'](_0x40b288(0x2d8), _0x32378b => { const _0x346379 = _0x40b288; if (weaponType[_0x346379(0x25b)] === _0x346379(0x327)) { $(BowCoating)[_0x346379(0x2db)](); const _0x5403a8 = [];
        getWeapon()[_0x346379(0x341)][_0x346379(0x2ba)](_0x54fb77 => { const _0x225cc3 = _0x346379,
                _0x4ac258 = document[_0x225cc3(0x1e5)]('option');
            _0x4ac258['textContent'] = _0x54fb77, $(BowCoating)['append'](_0x4ac258), _0x5403a8['push'](info['skills']['' + _0x54fb77]); }), info[_0x346379(0x1bb)][_0x346379(0x232)] = _0x5403a8; } });

function classChange() { const _0x2b5871 = _0x40b288;
    $([unique, dango, section1, section2, ele])[_0x2b5871(0x196)](previousWeaponType[_0x2b5871(0x25b)]), $([unique, dango, section1, section2, ele])[_0x2b5871(0x2a8)](weaponType['value']);
    previousWeaponType[_0x2b5871(0x2cb)] !== '' && ComboReset(); if (weaponType[_0x2b5871(0x25b)] === db) info[_0x2b5871(0x1bb)][_0x2b5871(0x263)] = info[_0x2b5871(0x1bb)]['ChainCritDualBlades'];
    else { if (weaponType[_0x2b5871(0x25b)] === bow) info[_0x2b5871(0x1bb)]['ChainCrit'] = info[_0x2b5871(0x1bb)]['ChainCritBow'];
        else weaponType['value'] === lbg || weaponType[_0x2b5871(0x25b)] === hbg ? info['skills']['ChainCrit'] = info[_0x2b5871(0x1bb)][_0x2b5871(0x261)] : info[_0x2b5871(0x1bb)][_0x2b5871(0x263)] = info[_0x2b5871(0x1bb)][_0x2b5871(0x2be)]; }
    info[_0x2b5871(0x1bb)][_0x2b5871(0x1b9)] = /Gun|Charge/ [_0x2b5871(0x1d2)](weaponType['value']) ? info[_0x2b5871(0x1bb)][_0x2b5871(0x201)][weaponType['value']] : [], $(_0x2b5871(0x219))[_0x2b5871(0x2ab)](_0x2b5871(0x26b), 0x0), $(_0x2b5871(0x219))[_0x2b5871(0x2d6)](), $(_0x2b5871(0x219))[_0x2b5871(0x1ed)]()['hide'](), weaponId[_0x2b5871(0x312)] = '', weaponId['innerHTML'] = weaponType[_0x2b5871(0x25b)], $('.' + $(weaponType)[_0x2b5871(0x26f)]())[_0x2b5871(0x1ed)]()[_0x2b5871(0x184)](), $('.' + $(weaponType)[_0x2b5871(0x26f)]())['show'](), /Bow/ [_0x2b5871(0x1d2)]($(weaponType)[_0x2b5871(0x26f)]()) ? ($(_0x2b5871(0x2bb))[_0x2b5871(0x1ed)]()['show'](), $(_0x2b5871(0x2bb))[_0x2b5871(0x184)](), $(ammoTable)[_0x2b5871(0x2d6)]()) : MeleeElements(); }

function MeleeElements() { const _0x30f27b = _0x40b288;
    $(_0x30f27b(0x234))[_0x30f27b(0x1ed)]()[_0x30f27b(0x184)](), $(_0x30f27b(0x234))[_0x30f27b(0x184)](); if (weaponType['value'] === _0x30f27b(0x2a3)) { if (getWeapon()[_0x30f27b(0x28c)] === 'Impact\x20Phial') impShieldCharge['parentNode'][_0x30f27b(0x1dc)] = 'display:\x27\x27', eleShieldCharge[_0x30f27b(0x19e)]['style'] = _0x30f27b(0x1e9), eleShieldCharge['selectedIndex'] = 0x0;
        else getWeapon()[_0x30f27b(0x28c)] === _0x30f27b(0x1c7) && (impShieldCharge[_0x30f27b(0x19e)][_0x30f27b(0x1dc)] = _0x30f27b(0x1e9), impShieldCharge[_0x30f27b(0x26b)] = 0x0, eleShieldCharge['parentNode'][_0x30f27b(0x1dc)] = _0x30f27b(0x1d7)); } }
$(window)['on'](_0x40b288(0x223), _0x470c0d => { keyDown = _0x470c0d['originalEvent']['key'] === '-' ? ++keyDown : 0x0, keyDown === 0x3 && (ResetSkills(), DataCompile(), keyDown = 0x0); });

function ResetSkills(_0x1a12f9 = _0x40b288(0x290)) { const _0x5b3a07 = _0x40b288;
    $(_0x5b3a07(0x2da))[_0x5b3a07(0x1d0)](function() { const _0x224083 = _0x5b3a07;
        this[_0x224083(0x336)] = ![]; }); for (let _0x1b2d5f = 0x0; _0x1b2d5f < $(_0x1a12f9)[_0x5b3a07(0x1bc)]; ++_0x1b2d5f) { $(_0x1a12f9)[_0x1b2d5f][_0x5b3a07(0x26b)] = 0x0; } }
$(_0x40b288(0x2a0))['on'](_0x40b288(0x2d8), () => { ComboReset(), UpdateComboDisplay(); }), $(document)['on'](_0x40b288(0x2d8), function(_0x3698e3) { const _0xcad2a5 = _0x40b288; if (_0x3698e3['target'] === ($('#weaponRampage0')[0x0] || $(_0xcad2a5(0x1b8))[0x0])) DataCompile(_0x3698e3);
    else _0x3698e3[_0xcad2a5(0x34c)] === weaponType && (weaponType[_0xcad2a5(0x247)] = /Bow/ [_0xcad2a5(0x1d2)](weaponType[_0xcad2a5(0x25b)]) ? _0xcad2a5(0x2ca) : _0xcad2a5(0x273)); }), $('.scroll')['on'](_0x40b288(0x34d), () => { const _0x4be6fa = _0x40b288;
    $(_0x4be6fa(0x311))['toggleClass'](_0x4be6fa(0x207)), info[_0x4be6fa(0x1bb)][_0x4be6fa(0x191)] = $(redScroll)[_0x4be6fa(0x304)](_0x4be6fa(0x1f0)) ? info['skills'][_0x4be6fa(0x209)][_0x4be6fa(0x266)] : info[_0x4be6fa(0x1bb)]['MailofHellfireSourse'][_0x4be6fa(0x19a)], info[_0x4be6fa(0x1bb)][_0x4be6fa(0x276)] = $(redScroll)[_0x4be6fa(0x304)](_0x4be6fa(0x1f0)) ? info['skills'][_0x4be6fa(0x208)]['blue'] : info[_0x4be6fa(0x1bb)][_0x4be6fa(0x208)][_0x4be6fa(0x19a)], DataCompile(); }), $(_0x40b288(0x1f8))['on'](_0x40b288(0x34d), function(_0x3f545c) { const _0x4e2f16 = _0x40b288; /DemonDrug/ [_0x4e2f16(0x1d2)](_0x3f545c[_0x4e2f16(0x34c)]['id']) && (_0x3f545c[_0x4e2f16(0x34c)]['id'] === _0x4e2f16(0x2e8) ? MegaDemonDrug[_0x4e2f16(0x336)] = ![] : DemonDrug[_0x4e2f16(0x336)] = ![]); if (this !== filterCombo) { const _0xcf3277 = dropHZ[_0x4e2f16(0x26b)];
        DataCompile(), this === WaterBlight && (MonChart(), dropHZ[_0x4e2f16(0x26b)] = _0xcf3277); } else this === filterCombo && FilterTableForComboAttacks(); });

function ToggleAmmoTables() { const _0x16ab5a = _0x40b288;
    dpsTable[_0x16ab5a(0x1dc)] = dpsTable[_0x16ab5a(0x1dc)][_0x16ab5a(0x29a)] !== 'none' ? _0x16ab5a(0x1e9) : _0x16ab5a(0x1d7), ammoTable[_0x16ab5a(0x1dc)] = dpsTable['style'][_0x16ab5a(0x29a)] !== _0x16ab5a(0x1e3) ? _0x16ab5a(0x1e9) : 'display:\x27\x27'; }

function calculateAmmoFrames(_0xfaeae4) { const _0x4bdfaf = _0x40b288; let _0x5332c2 = /Sub-Lv|Explosion| Procs|\(RF\+\d\)/g ['test'](_0xfaeae4[_0x4bdfaf(0x1f9)]) ? _0xfaeae4['attackName']['replace'](/Sub-| Explosion| \(RF\+\d\) Procs| Procs| \(RF\+\d\)/g, '') : _0xfaeae4[_0x4bdfaf(0x1f9)];
    _0x5332c2 = /(?<!Lv)\d/ [_0x4bdfaf(0x1d2)](_0x5332c2) ? _0x5332c2[_0x4bdfaf(0x2b9)](0x0, _0x5332c2['length'] - 0x1) + 'Lv' + _0x5332c2[_0x4bdfaf(0x2b9)](-0x1) : _0x5332c2; const _0x407316 = {};
    _0x407316[_0x4bdfaf(0x298)] = info[_0x4bdfaf(0x296)][_0x4bdfaf(0x22a)][_0x5332c2][AmmoUP['selectedIndex']], _0x407316[_0x4bdfaf(0x24a)] = info['ammo'][_0x4bdfaf(0x30c)][_0x5332c2][Math[_0x4bdfaf(0x34b)](0x0, Math['min'](0x5, _0xfaeae4[_0x4bdfaf(0x30c)] - 0x1 + RecoilDown[_0x4bdfaf(0x26b)] + (info[_0x4bdfaf(0x1bb)]['BowgunBarrel'][BowgunBarrel[_0x4bdfaf(0x26b)]][_0x4bdfaf(0x212)] > 0x0 ? TuneUp[_0x4bdfaf(0x26b)] + info[_0x4bdfaf(0x1bb)]['BowgunBarrel'][BowgunBarrel[_0x4bdfaf(0x26b)]][_0x4bdfaf(0x212)] : 0x0) - ($(CriticalFirePower)[0x0][_0x4bdfaf(0x26b)] > 0x0 ? 0x2 : 0x0)))], _0x407316[_0x4bdfaf(0x24a)] = /\(RF\+\d\)/ [_0x4bdfaf(0x1d2)](_0xfaeae4[_0x4bdfaf(0x1f9)]) ? _0x407316[_0x4bdfaf(0x24a)] + '\x20' + _0xfaeae4[_0x4bdfaf(0x1f9)][_0x4bdfaf(0x200)](/\(RF\+\d\)/)[0x0] : _0x407316[_0x4bdfaf(0x24a)], _0x407316['recoilFrames'] = info[_0x4bdfaf(0x296)][_0x4bdfaf(0x30c)][_0x4bdfaf(0x215)][_0x407316[_0x4bdfaf(0x24a)]], _0x407316[_0x4bdfaf(0x337)] = info[_0x4bdfaf(0x296)][_0x4bdfaf(0x1ce)][_0x5332c2][Math[_0x4bdfaf(0x34b)](0x0, Math[_0x4bdfaf(0x1b3)](0x8, _0xfaeae4[_0x4bdfaf(0x1ce)] + ReloadSpeed[_0x4bdfaf(0x26b)] + info[_0x4bdfaf(0x1bb)]['BowgunBarrel'][BowgunBarrel[_0x4bdfaf(0x26b)]][_0x4bdfaf(0x1ce)] + (BowgunBarrel['selectedIndex'] === 0x0 && TuneUp[_0x4bdfaf(0x26b)] > 0x0 ? 0x1 : 0x0) - ($(_0x4bdfaf(0x213))[0x0][_0x4bdfaf(0x26b)] > 0x0 ? 0x2 : 0x0)))], _0x407316[_0x4bdfaf(0x2b0)] = info[_0x4bdfaf(0x296)]['reload'][_0x4bdfaf(0x215)][_0x407316[_0x4bdfaf(0x337)]], _0x407316[_0x4bdfaf(0x2ac)] = _0xfaeae4[_0x4bdfaf(0x2ac)][_0xfaeae4[_0x4bdfaf(0x2de)]] + _0x407316['ammoIncrease'], _0x407316[_0x4bdfaf(0x1fe)] = info['skills'][_0x4bdfaf(0x2d2)][SpareShot[_0x4bdfaf(0x26b)]] + +spareAdjust[_0x4bdfaf(0x25b)]; /(?<!snipe.*)explosion/ [_0x4bdfaf(0x1d2)](_0x5332c2) && Bombardier[_0x4bdfaf(0x26b)] > 0x0 && (_0x407316[_0x4bdfaf(0x1fe)] += info[_0x4bdfaf(0x1bb)][_0x4bdfaf(0x1b9)][_0x5332c2[_0x4bdfaf(0x200)](/Sticky|Wyvern/)[0x0]][0x2]); const _0x866787 = 0x3c;
    _0x407316['shotsPerMinBase'] = shotsCheck(_0x407316[_0x4bdfaf(0x242)] / 0x1e, _0x407316[_0x4bdfaf(0x2b0)] / 0x1e, _0xfaeae4['clipSize'][_0xfaeae4[_0x4bdfaf(0x2de)]], _0x866787), _0x407316[_0x4bdfaf(0x23a)] = shotsCheck(_0x407316[_0x4bdfaf(0x242)] / 0x1e, _0x407316[_0x4bdfaf(0x2b0)] / 0x1e, _0x407316['clipSize'], _0x866787, 0x64 / _0x407316['spareShot']), _0x407316[_0x4bdfaf(0x2af)] = Number[_0x4bdfaf(0x2dc)]((_0x407316[_0x4bdfaf(0x23a)] / _0x407316['shotsPerMinBase'] - 0x1) * 0x64)[_0x4bdfaf(0x2a7)](0x2) + '%', _0x407316[_0x4bdfaf(0x1ad)] = _0xfaeae4[_0x4bdfaf(0x27b)] + 0x1; if (/Pierce Lv|Pierce [1-3]/ [_0x4bdfaf(0x1d2)](_0x5332c2)) _0x407316[_0x4bdfaf(0x1ad)] *= JSON[_0x4bdfaf(0x325)](pierceAdjust[_0x4bdfaf(0x25b)])[0x0];
    else /Pierc/ [_0x4bdfaf(0x1d2)](_0x5332c2) && (_0x407316['ticsAdjust'] *= JSON[_0x4bdfaf(0x325)](pierceAdjust['value'])[0x1]); return _0x407316; }

function ComboReset() { const _0x1b7ff9 = _0x40b288;! /BowGun/ [_0x1b7ff9(0x1d2)]($(previousWeaponType)[_0x1b7ff9(0x26f)]()) && $(previousWeaponType)[_0x1b7ff9(0x26f)]() !== '' && ($(_0x1b7ff9(0x32a))[_0x1b7ff9(0x22e)](), $(_0x1b7ff9(0x1e1))[_0x1b7ff9(0x26f)](0x0), $(_0x1b7ff9(0x1b8))[_0x1b7ff9(0x26f)](0x0), $(_0x1b7ff9(0x1cf))[_0x1b7ff9(0x26f)](0x1), comboTracker = [], DataCompile()); }

function FilterTableForComboAttacks() { const _0x497f42 = _0x40b288;
    $(_0x497f42(0x1b8))[_0x497f42(0x1d0)]((_0x390ae2, _0x1542d0) => { const _0xd86806 = _0x497f42; /blue/ ['test'](filterCombo[_0xd86806(0x247)]) && (_0x1542d0['value'] === '0' || _0x1542d0[_0xd86806(0x1dc)] === 'display:\x20none;') ? $('.' + _0x390ae2)[_0xd86806(0x2d6)](): $('.' + _0x390ae2)['show'](); }); }

function TimesUsed(_0x2e38e3, _0x317d3b = comboTracker) { const _0x16b1c6 = _0x40b288; return _0x317d3b['filter'](_0x42ae8f => _0x42ae8f == _0x2e38e3)[_0x16b1c6(0x1bc)]; }
$(document)['on']('change', function(_0x128783) { const _0x2236ad = _0x40b288;
    $(_0x128783[_0x2236ad(0x34c)])['hasClass'](_0x2236ad(0x2c6)) && DataCompile(_0x128783); }), $(document)['on'](_0x40b288(0x34d), function(_0x4cd114) { const _0x29b809 = _0x40b288; if ($(_0x4cd114[_0x29b809(0x34c)])['hasClass']('inputButton')) { if ($(_0x4cd114[_0x29b809(0x34c)])[_0x29b809(0x304)](_0x29b809(0x1e4))) DecreaseComboCount(_0x4cd114);
        else $(_0x4cd114[_0x29b809(0x34c)])[_0x29b809(0x304)](_0x29b809(0x1c3)) && IncreaseComboCount(_0x4cd114); } });

function IncreaseComboCount(_0x33f00d) { const _0x4c5bf9 = _0x40b288; + $(_0x4c5bf9(0x1b8))[_0x33f00d[_0x4c5bf9(0x34c)]['id']][_0x4c5bf9(0x25b)] < 0x14 && (++$(_0x4c5bf9(0x1b8))[_0x33f00d[_0x4c5bf9(0x34c)]['id']][_0x4c5bf9(0x25b)], DataCompile()); }

function DecreaseComboCount(_0x51f8cc) { const _0x19d392 = _0x40b288; if (_0x51f8cc[_0x19d392(0x34c)]['id'] === '0' && +$(_0x19d392(0x1b8))[_0x51f8cc[_0x19d392(0x34c)]['id']][_0x19d392(0x25b)] > 0x1) --$('.inputs')[_0x51f8cc[_0x19d392(0x34c)]['id']]['value'], DataCompile();
    else +_0x51f8cc[_0x19d392(0x34c)]['id'] > 0x0 && +$(_0x19d392(0x1b8))[_0x51f8cc['target']['id']][_0x19d392(0x25b)] > 0x0 && (--$('.inputs')[_0x51f8cc[_0x19d392(0x34c)]['id']][_0x19d392(0x25b)], DataCompile()); }
$(document)['on'](_0x40b288(0x34d), _0x420674 => { const _0x2c9a55 = _0x40b288,
        _0x336072 = $(_0x420674[_0x2c9a55(0x34c)]);!_0x336072[_0x2c9a55(0x1ee)](augToggle)['length'] && $(_0x2c9a55(0x1af))[_0x2c9a55(0x1df)](_0x2c9a55(0x29a)) !== _0x2c9a55(0x1e3) && _0x420674[_0x2c9a55(0x34c)] !== Qurious && $(_0x2c9a55(0x1c4))[_0x2c9a55(0x330)](_0x2c9a55(0x2fe)); }), $(_0x40b288(0x343))['on'](_0x40b288(0x34d), _0x278744 => { const _0x2be9c9 = _0x40b288;
    _0x278744[_0x2be9c9(0x18b)](), info[weaponType[_0x2be9c9(0x25b)]][_0x2be9c9(0x18a)][dropWeapon[_0x2be9c9(0x25b)]][_0x2be9c9(0x2f4)] > 0x0 && ($(_0x2be9c9(0x1c4))['toggleClass']('augVis\x20augInvis'), $('.rampageAug')[_0x2be9c9(0x1df)](_0x2be9c9(0x29a), getWeapon()[_0x2be9c9(0x2f4)] == 0x3 ? _0x2be9c9(0x1e3) : '')); }), $(_0x40b288(0x18f))['on']('mousedown', _0x345262 => { const _0x524e88 = _0x40b288; let _0x55cee1 = 0x0;
    $('.augLabel')[_0x524e88(0x1d0)]((_0x367a09, _0x48eff0) => { _0x55cee1 += +_0x48eff0['value']; }); if ($(_0x345262[_0x524e88(0x34c)])[_0x524e88(0x304)](_0x524e88(0x1c3)) && _0x55cee1 + +_0x345262['target']['value'] < 0x6 && (+$(_0x345262[_0x524e88(0x34c)])[_0x524e88(0x2e6)]()[0x2][_0x524e88(0x25b)] + +_0x345262['target'][_0x524e88(0x25b)] < 0x6 && !/elementalAug/ [_0x524e88(0x1d2)](_0x345262[_0x524e88(0x34c)][_0x524e88(0x247)]) || /elementalAug/ [_0x524e88(0x1d2)](_0x345262[_0x524e88(0x34c)][_0x524e88(0x247)]) && +$(_0x345262['target'])['siblings']()[0x2][_0x524e88(0x25b)] < 0x3)) $(_0x345262[_0x524e88(0x34c)])[_0x524e88(0x2e6)]()[0x2][_0x524e88(0x25b)] = +$(_0x345262[_0x524e88(0x34c)])[_0x524e88(0x2e6)]()[0x2][_0x524e88(0x25b)] + +_0x345262[_0x524e88(0x34c)]['value'];
    else $(_0x345262[_0x524e88(0x34c)])[_0x524e88(0x304)](_0x524e88(0x1e4)) && +$(_0x345262[_0x524e88(0x34c)])[_0x524e88(0x2e6)]()[0x2][_0x524e88(0x25b)] > 0x0 && ($(_0x345262['target'])[_0x524e88(0x2e6)]()[0x2][_0x524e88(0x25b)] = +$(_0x345262[_0x524e88(0x34c)])[_0x524e88(0x2e6)]()[0x2][_0x524e88(0x25b)] - +_0x345262[_0x524e88(0x34c)][_0x524e88(0x25b)]); /ampage/ [_0x524e88(0x1d2)](_0x345262[_0x524e88(0x34c)][_0x524e88(0x247)]) && RampageSelect(), DataCompile(_0x345262); }), $(taWikiSetBuilder)['on']('paste', _0x153a8d => { const _0x47c379 = _0x40b288;
    _0x153a8d['preventDefault'](); const _0x46ee00 = (event['clipboardData'] || window[_0x47c379(0x34a)])[_0x47c379(0x235)](_0x47c379(0x320));
    $(_0x47c379(0x31f))[_0x47c379(0x1d0)](function() { lastEvent = this, resetSkillDescription(this); }), decodeURL(_0x46ee00, _0x153a8d), $(taWikiSetBuilder)[_0x47c379(0x320)](document[_0x47c379(0x33a)](_0x47c379(0x2d1))), DataCompile(_0x153a8d); });

function decodeURL(_0x506c84 = taWikiSetBuilder[_0x40b288(0x25b)], _0x1e20fe) { const _0x23e7d0 = _0x40b288; if (/mhrise\.wiki-db\.com/ [_0x23e7d0(0x1d2)](_0x506c84)) { const _0xc1de00 = decodeURIComponent(_0x506c84),
            _0x591f3b = _0xc1de00[_0x23e7d0(0x200)](_0x23e7d0(0x187))[0x0]['split'](',');
        ResetSkills(document[_0x23e7d0(0x2a5)]('.thisSkill:not(.' + $(weaponType)['val']() + ')')), $[_0x23e7d0(0x1d0)](_0x591f3b, (_0x1c9233, _0x27acaa) => { const _0x3a1e0e = _0x23e7d0,
                _0x29dbc7 = _0x27acaa[_0x3a1e0e(0x317)]('Lv');
            _0x29dbc7[0x0] = _0x29dbc7[0x0][_0x3a1e0e(0x1a9)](/(\s)|(\/)/g, ''), _0x29dbc7[0x0] = _0x29dbc7[0x0]['replace'](/'s/g, 's'), _0x29dbc7[0x0] = /Fire|Water|Wind|Ice|Dragon/ [_0x3a1e0e(0x1d2)](_0x29dbc7[0x0]) ? _0x3a1e0e(0x193) : _0x29dbc7[0x0], _0x29dbc7[0x0] = /Kush|Teos|Storm|Thunder|Wind/ [_0x3a1e0e(0x1d2)](_0x29dbc7[0x0]) ? 'ElderEssence' : _0x29dbc7[0x0], document[_0x3a1e0e(0x2d0)]('#' + _0x29dbc7[0x0]) !== null && document['querySelector']('#' + _0x29dbc7[0x0])['style']['display'] !== _0x3a1e0e(0x1e3) && (document[_0x3a1e0e(0x2d0)]('#' + _0x29dbc7[0x0])['selectedIndex'] = _0x29dbc7[0x1]); }); } else JSON[_0x23e7d0(0x325)](_0x506c84)[_0x23e7d0(0x1bc)] === 0x6 && loadState(_0x506c84, _0x1e20fe); }
$('#taWikiSetBuilder')['on']('keyup', _0x371c29 => { const _0x54cdc8 = _0x40b288;
    _0x371c29[_0x54cdc8(0x34c)][_0x54cdc8(0x2cb)] = _0x371c29['originalEvent']['key'] === 'v' && _0x371c29[_0x54cdc8(0x190)][_0x54cdc8(0x2a9)] || _0x371c29['originalEvent']['metaKey'] ? _0x371c29[_0x54cdc8(0x34c)][_0x54cdc8(0x2cb)] = _0x54cdc8(0x1a0) : _0x54cdc8(0x2d1); });

function resetWikiText() { const _0x13e12c = _0x40b288;
    $('input#taWikiSetBuilder')[0x0][_0x13e12c(0x25b)] = '', $(_0x13e12c(0x253))[0x0]['value'] = _0x13e12c(0x2d1); }

function saveState(_0xbcd42b = [
    [],
    [],
    [],
    [],
    [],
    []
]) { const _0x51eceb = _0x40b288;
    $(_0x51eceb(0x285))[_0x51eceb(0x1d0)](function() { const _0x402576 = _0x51eceb;
        _0xbcd42b[0x0][_0x402576(0x27f)]($(this)[0x0][_0x402576(0x26b)]); }), $(_0x51eceb(0x1f8))[_0x51eceb(0x1d0)](function() { const _0x3f1b64 = _0x51eceb;
        _0xbcd42b[0x1][_0x3f1b64(0x27f)](this[_0x3f1b64(0x336)]); }), $('.inputs')[_0x51eceb(0x1d0)](function() { const _0x48707d = _0x51eceb;
        _0xbcd42b[0x2][_0x48707d(0x27f)](this[_0x48707d(0x25b)]); }), _0xbcd42b[0x3][_0x51eceb(0x27f)](comboTracker), $(_0x51eceb(0x311))[_0x51eceb(0x1d0)](function() { _0xbcd42b[0x4]['push'](this['className']); }), _0xbcd42b[0x5] = $(_0x51eceb(0x1a5))['text'](); const _0x1ab63f = document['createElement']('input'); return _0x1ab63f[_0x51eceb(0x308)](_0x51eceb(0x25b), JSON[_0x51eceb(0x1b1)](_0xbcd42b)), _0x1ab63f[_0x51eceb(0x285)](), _0x1ab63f[_0x51eceb(0x204)](0x0, 0x1869f), navigator[_0x51eceb(0x2c0)][_0x51eceb(0x332)](_0x1ab63f[_0x51eceb(0x25b)]), _0xbcd42b; }

function loadState(_0x11f61f, _0x207386) { const _0x36cf65 = _0x40b288;
    _0x11f61f = JSON[_0x36cf65(0x325)](_0x11f61f); const _0x2ee15a = document[_0x36cf65(0x2a5)](_0x36cf65(0x285));
    _0x2ee15a[0x0][_0x36cf65(0x26b)] = _0x11f61f[0x0][0x0], classChange(), WeaponSelect(); for (let _0x33da17 = 0x0; _0x33da17 < _0x11f61f[0x5][_0x36cf65(0x1bc)]; _0x33da17++) { $(_0x36cf65(0x1a5))[_0x33da17][_0x36cf65(0x2cb)] = _0x11f61f[0x5][_0x33da17]; }
    _0x2ee15a[0x3]['selectedIndex'] = _0x11f61f[0x0][0x3], RampageSelect(), _0x2ee15a[0x50]['selectedIndex'] = _0x11f61f[0x0][$(_0x36cf65(0x285))[_0x36cf65(0x1bc)] - 0xa], QuestSelect(), PartSelect(), HealthSelect(), $('select')[_0x36cf65(0x1d0)](function(_0x244501) { const _0x5ee408 = _0x36cf65;
        _0x244501 !== (0x0 || 0x3 || $(_0x5ee408(0x285))['length'] - 0xa) && (this[_0x5ee408(0x26b)] = _0x11f61f[0x0][_0x244501]); }), $(_0x36cf65(0x1f8))[_0x36cf65(0x1d0)]((_0x55d092, _0x4e5c69) => { _0x4e5c69['checked'] = _0x11f61f[0x1][_0x55d092]; }), $('.inputs')[_0x36cf65(0x1d0)]((_0x411b4c, _0x1851ec) => { const _0x51c7c5 = _0x36cf65;
        _0x1851ec[_0x51c7c5(0x25b)] = _0x11f61f[0x2][_0x411b4c]; }), $(_0x36cf65(0x311))['each'](function(_0x1f6cd4) { this['className'] = _0x11f61f[0x4][_0x1f6cd4]; }), info['skills'][_0x36cf65(0x191)] = $(redScroll)[_0x36cf65(0x304)](_0x36cf65(0x1f0)) ? info[_0x36cf65(0x1bb)][_0x36cf65(0x209)][_0x36cf65(0x266)] : info[_0x36cf65(0x1bb)][_0x36cf65(0x209)][_0x36cf65(0x19a)], info['skills'][_0x36cf65(0x276)] = $(redScroll)[_0x36cf65(0x304)](_0x36cf65(0x1f0)) ? info[_0x36cf65(0x1bb)]['DerelictionSourse'][_0x36cf65(0x266)] : info[_0x36cf65(0x1bb)][_0x36cf65(0x208)][_0x36cf65(0x19a)], [...comboTracker] = _0x11f61f[0x3][0x0], $(_0x36cf65(0x303))['each'](function() { const _0x20f19d = _0x36cf65; if (this[_0x20f19d(0x25b)] > 0x0) { let _0x39a5c4 = $(_0x20f19d(0x1b8))[this['id']][_0x20f19d(0x25b)] - TimesUsed(this['id']); while (_0x39a5c4 > 0x0) { comboTracker[_0x20f19d(0x27f)](this['id']), --_0x39a5c4; } while (_0x39a5c4 < 0x0) { comboTracker[_0x20f19d(0x238)](comboTracker[_0x20f19d(0x211)](this['id']), 0x1), ++_0x39a5c4; } } }), DataCompile(_0x207386), UpdateComboDisplay(), setTimeout(() => { const _0x2c0566 = _0x36cf65;
        $(_0x2c0566(0x253))[0x0][_0x2c0566(0x25b)] = 'Paste\x20TA\x20Wiki\x20Set\x20Builder\x20Link\x20Here'; }, 0x7d0), $(_0x36cf65(0x253))[0x0][_0x36cf65(0x25b)] = _0x36cf65(0x28d); }

function PopulateDropDowns(_0x1b697a, _0x424b5c) { const _0x5a49d7 = _0x40b288;
    $(_0x424b5c)[_0x5a49d7(0x2db)](), $[_0x5a49d7(0x1d0)](_0x1b697a, (_0x364873, _0x1a48ae) => { const _0x56183a = _0x5a49d7;
        $(_0x424b5c)[_0x56183a(0x2c8)]($(_0x56183a(0x27a))[_0x56183a(0x2ab)]('value', _0x1a48ae)['text'](_0x1a48ae)); }); }

function WeaponTypeSelect() { PopulateDropDowns(weaponTypes, weaponType); }
$(weaponFilter)['on'](_0x40b288(0x321), function() { RampageSelect(); });

function WeaponSelect() { const _0x3a10d5 = _0x40b288;
    $(dropWeapon)[_0x3a10d5(0x2db)](); if (weaponFilter[_0x3a10d5(0x336)] === !![]) { const _0x4d5ad9 = Object[_0x3a10d5(0x29f)](info[weaponType[_0x3a10d5(0x25b)]]['weapons'])[_0x3a10d5(0x1fd)](_0x18203e => _0x18203e[0x1]['rampageSlots'] > 0x0 && _0x18203e[0x1]['baseRaw'] >= 0x122);
        _0x4d5ad9[_0x3a10d5(0x2ba)](_0x3e3819 => { const _0x54f300 = _0x3a10d5;
            $(_0x54f300(0x23b))[_0x54f300(0x2c8)]($(_0x54f300(0x27a))[_0x54f300(0x2ab)](_0x54f300(0x25b), _0x3e3819[0x0])[_0x54f300(0x320)](_0x3e3819[0x1][_0x54f300(0x1a2)])); }); } else $(info[$(weaponType)[_0x3a10d5(0x26f)]()][_0x3a10d5(0x18a)])['each']((_0x3c825f, _0x44d4e5) => { const _0x5103cf = _0x3a10d5;
        $('#dropWeapon')[_0x5103cf(0x2c8)]($(_0x5103cf(0x27a))[_0x5103cf(0x2ab)](_0x5103cf(0x25b), _0x3c825f)['text'](_0x44d4e5['weapon'])); }); }

function RampageSelect() { const _0x29944d = _0x40b288;
    $(weaponRampage[_0x29944d(0x18e)])[_0x29944d(0x2d6)](), $(weaponRampage0)['show'](); if (getWeapon()[_0x29944d(0x2f4)] !== 0x0) { const _0x15c0d0 = [];
        $(Object[_0x29944d(0x17f)](info[_0x29944d(0x283)][_0x29944d(0x25a)]))['each']((_0x5f3136, _0xd38d1b) => { const _0x1617c6 = _0x29944d; + _0xd38d1b[_0x1617c6(0x2b9)](-0x1) <= getWeapon()['rampageSlots'] + (+$(_0x1617c6(0x21d))[_0x1617c6(0x26f)]() > 0x0 ? 0x1 : 0x0) && _0x15c0d0['push'](info[_0x1617c6(0x283)][_0x1617c6(0x25a)][_0xd38d1b]); }), PopulateDropDowns(_0x15c0d0, weaponRampage0); return; } else { $(weaponRampage[_0x29944d(0x18e)])[_0x29944d(0x1fb)](''), $(weaponRampage[_0x29944d(0x18e)])[_0x29944d(0x2d6)](), $(weaponRampage0)[_0x29944d(0x184)](); if (/Rampage/ [_0x29944d(0x1d2)](getWeapon()[_0x29944d(0x1a2)])) { $(info[_0x29944d(0x283)][getWeapon()[_0x29944d(0x1a2)]]['Rampage'])['each'](function(_0x4ff94a, _0x5c48db) { const _0x2bc62f = _0x29944d;
                $(weaponRampage[_0x2bc62f(0x18e)][_0x4ff94a])[_0x2bc62f(0x184)](), PopulateDropDowns(Object[_0x2bc62f(0x25d)](this), weaponRampage[_0x2bc62f(0x18e)][_0x4ff94a]); }); return; } else { $(getWeapon()['rampage'])[_0x29944d(0x1d0)](function(_0x59d361, _0x1858ae) { const _0x134590 = _0x29944d;
                $(weaponRampage0)[_0x134590(0x2c8)]($(_0x134590(0x27a))['attr'](_0x134590(0x25b), info[_0x134590(0x283)][_0x134590(0x220)][this])['text'](info[_0x134590(0x283)][_0x134590(0x220)][this])); }); return; } } }

function MonsterSelect() { const _0x3d5986 = _0x40b288;
    PopulateDropDowns(Object['keys'](info['monster'][_0x3d5986(0x293)]), dropMonster), dropMonster['selectedIndex'] = Object[_0x3d5986(0x17f)](info[_0x3d5986(0x1b4)]['hzv'])['indexOf']('Toadversary'); }

function _0x2927(_0x39748e, _0x254e4e) { const _0x2b497f = _0x2b49(); return _0x2927 = function(_0x2927c9, _0x27c3d7) { _0x2927c9 = _0x2927c9 - 0x17e; let _0x182d3d = _0x2b497f[_0x2927c9]; return _0x182d3d; }, _0x2927(_0x39748e, _0x254e4e); }

function getEleHZ(_0x33b18d) { const _0x9829ad = _0x40b288; return info[_0x9829ad(0x1b4)][_0x9829ad(0x293)][dropMonster['value']][dropHZ[_0x9829ad(0x26b)]][lower(_0x33b18d)]; }

function getRawHZ(_0x3d12bd) { const _0x9e4e9d = _0x40b288; if (info[_0x9e4e9d(0x1b4)]['hzv'][dropMonster[_0x9e4e9d(0x25b)]][dropHZ[_0x9e4e9d(0x26b)]][_0x3d12bd] === undefined) return 0x64; return WaterBlight[_0x9e4e9d(0x336)] ? Math[_0x9e4e9d(0x1b3)](0x64, ~~(Math[_0x9e4e9d(0x34b)](info[_0x9e4e9d(0x1b4)][_0x9e4e9d(0x293)][dropMonster['value']][dropHZ[_0x9e4e9d(0x26b)]][_0x3d12bd], info[_0x9e4e9d(0x1b4)]['hzv'][dropMonster[_0x9e4e9d(0x25b)]][dropHZ['selectedIndex']][_0x3d12bd] * 0.63 + 22.2) + 0x3)) : info['monster'][_0x9e4e9d(0x293)][dropMonster[_0x9e4e9d(0x25b)]][dropHZ[_0x9e4e9d(0x26b)]][_0x3d12bd]; }
const getUsedAttacks = (_0x31e707 = weaponType['value']) => { const _0x521fdc = _0x40b288; let _0x127bf4 = {}; if ($(weaponType)['val']() === _0x521fdc(0x278)) return _0x127bf4 = Object['fromEntries'](Object[_0x521fdc(0x29f)](info['InsectGlaive'][_0x521fdc(0x2eb)])[_0x521fdc(0x1fd)](_0x5131ce => !/Sever|Blunt|Kinsect|Dust|Powder|Mark/ ['test'](_0x5131ce))), {..._0x127bf4 }; if ($(weaponType)[_0x521fdc(0x26f)]() === _0x521fdc(0x2a3)) { const _0x5d36d3 = getWeapon()['phialType'] === _0x521fdc(0x334) ? _0x521fdc(0x2e1) : _0x521fdc(0x334),
                _0x117daf = new RegExp('' + _0x5d36d3); return _0x127bf4 = Object[_0x521fdc(0x2ce)](Object[_0x521fdc(0x29f)](info[_0x521fdc(0x2a3)][_0x521fdc(0x2eb)])[_0x521fdc(0x1fd)](_0x2dd1a7 => !_0x117daf[_0x521fdc(0x1d2)](_0x2dd1a7))), {..._0x127bf4 }; } if (weaponType[_0x521fdc(0x25b)] === _0x521fdc(0x327)) { let _0x576e14 = ''; const _0x5b0d9d = document[_0x521fdc(0x2cc)]('BowChargePlus')[_0x521fdc(0x26b)] === 0x1 && getWeapon()['baseCharge'] < 0x4 ? getWeapon()[_0x521fdc(0x2a1)] + 0x1 : getWeapon()[_0x521fdc(0x2a1)];
            $(getWeapon()[_0x521fdc(0x246)])['each']((_0x5379dc, _0x47e58e) => { const _0x3f075b = _0x521fdc;
                _0x5379dc < _0x5b0d9d && (_0x576e14 += '|Lv' + _0x47e58e[_0x3f075b(0x200)](_0x3f075b(0x335))[0x0] + '\x20' + _0x47e58e[_0x3f075b(0x200)](_0x3f075b(0x323))[0x0]); }); const _0x5c0f41 = new RegExp([_0x576e14[_0x521fdc(0x2b9)](0x1)]); let _0x217e47 = Object[_0x521fdc(0x29f)](info[_0x521fdc(0x327)][_0x521fdc(0x2eb)])[_0x521fdc(0x1fd)](_0x31952c => _0x5c0f41[_0x521fdc(0x1d2)](_0x31952c[0x0])); return _0x217e47 = []['concat'](Object[_0x521fdc(0x29f)](info[_0x521fdc(0x327)]['attacks'])[_0x521fdc(0x238)](0x0, 0x1), _0x217e47), _0x217e47 = _0x217e47[_0x521fdc(0x338)](Object[_0x521fdc(0x29f)](info[_0x521fdc(0x327)][_0x521fdc(0x2eb)])[_0x521fdc(0x238)](0x88)), _0x127bf4 = Object[_0x521fdc(0x2ce)](_0x217e47), {..._0x127bf4 }; } if ($(weaponType)[_0x521fdc(0x26f)]() === 'Gunlance') return _0x127bf4 = Object[_0x521fdc(0x2ce)](Object[_0x521fdc(0x29f)](info[_0x521fdc(0x2f1)][_0x521fdc(0x2eb)])['splice'](0x0, 0x1c)), {..._0x127bf4 }; if (weaponType[_0x521fdc(0x25b)] === lbg || weaponType['value'] === hbg) { let _0x362c30 = info['ammo'][_0x521fdc(0x17f)][_0x521fdc(0x2ae)]((_0x550987, _0x4cb9e6) => _0x550987[_0x521fdc(0x1fd)](_0x4557e3 => weaponType['value'] === lbg && getWeapon()[_0x521fdc(0x239)][_0x521fdc(0x251)](_0x4cb9e6 + 0x1) ? /RF\+/ [_0x521fdc(0x1d2)](_0x4557e3) : getWeapon()[_0x521fdc(0x243)][_0x4cb9e6 + 0x1] > 0x0 && !/RF\+/ [_0x521fdc(0x1d2)](_0x4557e3)))[_0x521fdc(0x29b)]()[_0x521fdc(0x317)](/,+/); return _0x362c30 = _0x362c30[_0x521fdc(0x338)](Object[_0x521fdc(0x17f)](info[_0x521fdc(0x296)])['filter'](_0x3c3f30 => weaponType[_0x521fdc(0x25b)] === lbg ? /lbg|Wyvernblast(?! before)/ [_0x521fdc(0x1d2)](_0x3c3f30) : /hbg|Wyverns/ [_0x521fdc(0x1d2)](_0x3c3f30))), _0x127bf4 = Object['fromEntries'](Object[_0x521fdc(0x29f)](info['ammo'])[_0x521fdc(0x1fd)](_0x368659 => TimesUsed(_0x368659[0x0], _0x362c30) > 0x0)), {..._0x127bf4 }; } return {...info[_0x31e707][_0x521fdc(0x2eb)] }; },
    getAttacks = (_0x207da8 = weaponType[_0x40b288(0x25b)]) => ({...info[_0x207da8][_0x40b288(0x2eb)] }),
    getWeapon = () => info[weaponType[_0x40b288(0x25b)]][_0x40b288(0x18a)][dropWeapon[_0x40b288(0x26b)]][_0x40b288(0x2f4)] > 0x0 ? getQuriousAugs() : getRampageSkills();

function PartSelect() { const _0xfda70b = _0x40b288,
        _0x502331 = [];
    info[_0xfda70b(0x1b4)][_0xfda70b(0x293)][dropMonster[_0xfda70b(0x25b)]][_0xfda70b(0x2ba)](_0x5c5c47 => { const _0x15b5d0 = _0xfda70b;
        _0x502331[_0x15b5d0(0x27f)]([_0x5c5c47[_0x15b5d0(0x32c)] + '\x20' + _0x5c5c47[_0x15b5d0(0x24d)]]); }), PopulateDropDowns(_0x502331, dropHZ); }

function QuestSelect() { const _0x255e61 = _0x40b288;
    $(_0x255e61(0x1cc))['empty'](), $(_0x255e61(0x2ea))[_0x255e61(0x2db)](), $('#dropQuest')[_0x255e61(0x2db)](); const _0x29d45c = Object['entries'](info[_0x255e61(0x1b0)])[_0x255e61(0x1fd)](_0x4f4084 => _0x4f4084[0x1][_0x255e61(0x1b4)] === dropMonster['value'] && _0x4f4084[0x1][_0x255e61(0x1f5)] === 'MR'),
        _0x2d95da = Object['entries'](info[_0x255e61(0x1b0)])['filter'](_0xbe291a => _0xbe291a[0x1][_0x255e61(0x1b4)] === dropMonster[_0x255e61(0x25b)] && _0xbe291a[0x1][_0x255e61(0x1f5)] === 'HR');
    _0x2d95da[_0x255e61(0x2ba)](_0x49ca9a => { const _0x25a8e6 = _0x255e61;
        $(_0x25a8e6(0x1cc))[_0x25a8e6(0x2c8)]($(_0x25a8e6(0x27a))[_0x25a8e6(0x2ab)]('value', _0x49ca9a[0x0])[_0x25a8e6(0x320)](_0x49ca9a[0x1]['quest'])); }), _0x29d45c[_0x255e61(0x2ba)](_0x1bceb9 => { const _0x38c078 = _0x255e61;
        $(_0x38c078(0x2ea))[_0x38c078(0x2c8)]($(_0x38c078(0x27a))['attr']('value', _0x1bceb9[0x0])['text'](_0x1bceb9[0x1][_0x38c078(0x1b0)])); }), _0x29d45c[_0x255e61(0x1bc)] > 0x0 ? $(_0x255e61(0x241))[_0x255e61(0x2c8)]($(_0x255e61(0x27a))[_0x255e61(0x2ab)](_0x255e61(0x25b), _0x29d45c[0x0][0x0])[_0x255e61(0x320)](_0x29d45c[0x0][0x1][_0x255e61(0x1b0)])) : ($(_0x255e61(0x241))[_0x255e61(0x2c8)]($(_0x255e61(0x27a))[_0x255e61(0x2ab)](_0x255e61(0x25b), _0x2d95da[0x0][0x0])[_0x255e61(0x320)](_0x2d95da[0x0][0x1][_0x255e61(0x1b0)])), $('#MR')['hide']()); }

function HealthSelect() { const _0x174e9a = _0x40b288;
    $(health)[_0x174e9a(0x2db)](), $[_0x174e9a(0x1d0)](getHealthPools(), (_0x3b8dda, _0x2a89d9) => { const _0x5f7392 = _0x174e9a;
        $(health)['append']($(_0x5f7392(0x27a))[_0x5f7392(0x2ab)](_0x5f7392(0x25b), _0x2a89d9)[_0x5f7392(0x320)](formatNumbers(_0x2a89d9))); }); }
$(_0x40b288(0x28e))['on']('mousedown', _0x293188 => { const _0x294293 = _0x40b288;
    $(_0x293188[_0x294293(0x34c)])[_0x294293(0x26f)]() == _0x294293(0x2d1) && $(_0x293188[_0x294293(0x34c)])[_0x294293(0x26f)](''); });

function isUnique(_0x5677aa, _0x543ef5, _0x56edcf) { const _0x1bc358 = _0x40b288; return _0x56edcf[_0x1bc358(0x31d)](_0x5677aa) === _0x543ef5; }

function showMenu() { const _0x4dc8a1 = _0x40b288;
    $('.menu')[_0x4dc8a1(0x184)](), document[_0x4dc8a1(0x2d0)](_0x4dc8a1(0x2ea))[_0x4dc8a1(0x18e)][_0x4dc8a1(0x1bc)] > 0x0 ? $(_0x4dc8a1(0x188))[_0x4dc8a1(0x184)]() : $(_0x4dc8a1(0x188))[_0x4dc8a1(0x2d6)](), document[_0x4dc8a1(0x2d0)]('#HR')[_0x4dc8a1(0x18e)][_0x4dc8a1(0x1bc)] > 0x0 && ($(_0x4dc8a1(0x26a))['show'](), $('div.menu')[_0x4dc8a1(0x1df)](_0x4dc8a1(0x2ec), _0x4dc8a1(0x2bf))), document['querySelector'](_0x4dc8a1(0x1cc))[_0x4dc8a1(0x18e)][_0x4dc8a1(0x1bc)] === 0x0 && ($(_0x4dc8a1(0x26a))[_0x4dc8a1(0x2d6)](), $('div.menu')[_0x4dc8a1(0x1df)]('top', _0x4dc8a1(0x20e))); }

function updateQuest(_0x435547) { const _0x508e00 = _0x40b288;
    $(_0x508e00(0x1ef))['children']()[0x0][_0x508e00(0x299)] = window['event'][_0x508e00(0x2e5)][0x0][window[_0x508e00(0x26e)]['path'][0x0][_0x508e00(0x26b)]][_0x508e00(0x299)], $(_0x508e00(0x256))[_0x508e00(0x2d6)](), DataCompile(); }
$(document)['on'](_0x40b288(0x34d), _0x424946 => { const _0x2d3074 = _0x40b288,
        _0x2865c8 = $(_0x424946['target']);!_0x2865c8[_0x2d3074(0x1ee)](questButton)['length'] && !_0x2865c8[_0x2d3074(0x1ee)](_0x2d3074(0x1a4))[_0x2d3074(0x1bc)] && !_0x2865c8[_0x2d3074(0x1ee)](dropQuest)[_0x2d3074(0x1bc)] && $(_0x2d3074(0x1a4))['is'](_0x2d3074(0x1d8)) && $(_0x2d3074(0x1a4))[_0x2d3074(0x2d6)](); });
const capitalAll = _0x1ea29a => _0x1ea29a[_0x40b288(0x1a9)](/(?<!\w)\w{1}/g, _0x199f1c => _0x199f1c['toUpperCase']());

function capital(_0x1305cf, _0x1a10a9 = 0x0) { const _0x523d38 = _0x40b288; return _0x1305cf[_0x1a10a9][_0x523d38(0x1d5)]() + _0x1305cf[_0x523d38(0x2b9)](0x1); }

function lower(_0x46ced9) { const _0x36adea = _0x40b288; return _0x46ced9[0x0][_0x36adea(0x231)]() + _0x46ced9[_0x36adea(0x2b9)](0x1); }

function shotsCheck(_0x27ed9f, _0x586887, _0x50a070, _0x3a76b7 = 0x3c, _0x5cd37b = 0x0) { let _0x302157 = 0x0;
    _0x302157 += _0x5cd37b; let _0x5ef030 = 0x0,
        _0x2f109b = 0x0; while (_0x5ef030 <= _0x3a76b7) { for (let _0x1b85a2 = 0x0; _0x1b85a2 < _0x50a070; ++_0x1b85a2) { _0x5ef030 += _0x27ed9f, _0x2f109b += _0x5ef030 <= _0x3a76b7 ? 0x1 : 0x0, _0x2f109b >= _0x302157 && _0x5cd37b !== 0x0 && _0x5cd37b !== Infinity && (--_0x1b85a2, _0x302157 += _0x5cd37b); }
        _0x5ef030 += _0x586887; } return _0x2f109b; }

function getHealthPools() { const _0x5a069f = _0x40b288,
        _0x4cfdc9 = ~~(info[_0x5a069f(0x1b0)][dropQuest[_0x5a069f(0x25b)]][players[_0x5a069f(0x25b)]] * ((info[_0x5a069f(0x1b0)][dropQuest[_0x5a069f(0x25b)]][_0x5a069f(0x1b3)] / info[_0x5a069f(0x1b0)][dropQuest[_0x5a069f(0x25b)]]['1p'] - 0x1) * -0x1)) / info[_0x5a069f(0x1b0)][dropQuest[_0x5a069f(0x25b)]]['HPScale']; let _0x24ec7a = [info[_0x5a069f(0x1b0)][dropQuest[_0x5a069f(0x25b)]][$(_0x5a069f(0x21f))[_0x5a069f(0x26f)]()]]; if (info[_0x5a069f(0x1b0)][dropQuest[_0x5a069f(0x25b)]][_0x5a069f(0x300)] === 0x0) return _0x24ec7a; if (info[_0x5a069f(0x1b0)][dropQuest['value']][_0x5a069f(0x300)] === 0x1) return _0x24ec7a = [
        [_0x24ec7a[0x0] - _0x4cfdc9],
        [_0x24ec7a[0x0]],
        [_0x24ec7a[0x0] + _0x4cfdc9]
    ], _0x24ec7a; return _0x24ec7a = [
        [_0x24ec7a[0x0] - _0x4cfdc9 * 0x2],
        [_0x24ec7a[0x0] - _0x4cfdc9],
        [_0x24ec7a[0x0]],
        [_0x24ec7a[0x0] + _0x4cfdc9],
        [_0x24ec7a[0x0] + _0x4cfdc9 * 0x2]
    ], _0x24ec7a; }

function resetSkillDescription() { const _0x4b8915 = _0x40b288; if (lastEvent !== '') { if (lastEvent === BowCoating && weaponType['value'] !== _0x4b8915(0x327)) return; let _0x263d32 = [];
        Object[_0x4b8915(0x25d)](lastEvent[_0x4b8915(0x18e)])['some'](_0x56176c => _0x56176c[_0x4b8915(0x1c1)] === _0x4b8915(0x1a6)) ? (_0x263d32 = Object[_0x4b8915(0x25d)]($(lastEvent[_0x4b8915(0x18e)])[_0x4b8915(0x18e)]()), _0x263d32['splice'](-0x2), _0x263d32['splice'](0x0, 0x0, lastEvent[0x0])) : _0x263d32 = Object['values'](lastEvent[_0x4b8915(0x18e)]), _0x263d32['forEach']((_0x4862d9, _0x1e4cf0) => { const _0x28f39e = _0x4b8915; let _0x8d0642 = ''; if (lastEvent === BowCoating) _0x8d0642 = getWeapon()[_0x28f39e(0x341)][_0x1e4cf0];
            else { if (lastEvent === BowgunBarrel) _0x8d0642 = [_0x28f39e(0x186), _0x28f39e(0x1e2), _0x28f39e(0x322), _0x28f39e(0x212), _0x28f39e(0x192)][_0x1e4cf0];
                else lastEvent === Dereliction ? _0x8d0642 = [_0x28f39e(0x186), 'Lv-1\x20Charge-1', _0x28f39e(0x23d), _0x28f39e(0x292), _0x28f39e(0x284), _0x28f39e(0x24c), 'Lv-2\x20Charge-3', _0x28f39e(0x183), _0x28f39e(0x244), _0x28f39e(0x1b5)][_0x1e4cf0] : _0x8d0642 = 'Lv-' + _0x1e4cf0; }
            _0x4862d9[_0x28f39e(0x2cb)] = _0x1e4cf0 === 0x0 ? _0x28f39e(0x186) : _0x8d0642; }), lastEvent = ''; } }
$(document)['on'](_0x40b288(0x34d), _0x3f2cfe => { const _0x5c230c = _0x40b288; if (lastEvent !== '' && lastEvent === _0x3f2cfe[_0x5c230c(0x34c)]) return;
    lastEvent !== '' && resetSkillDescription(), Object[_0x5c230c(0x25d)]($(_0x5c230c(0x31f)))[_0x5c230c(0x342)](_0x4e25d4 => _0x4e25d4['id'] === _0x3f2cfe[_0x5c230c(0x34c)]['id']) && setSkillDescriptions(_0x3f2cfe[_0x5c230c(0x34c)]); }), $('select.skill')['on']('change', _0x24fcbe => { const _0x4b8d55 = _0x40b288;
    resetSkillDescription(), DataCompile(), _0x24fcbe['target'][_0x4b8d55(0x221)](); });

function setSkillDescriptions(_0x28d55a) { const _0x3c9771 = _0x40b288; if (Object[_0x3c9771(0x25d)]($(_0x3c9771(0x31f)))[_0x3c9771(0x342)](_0x3844d0 => _0x3844d0['id'] === _0x28d55a['id'])) { const _0x3b3565 = _0x28d55a['id']; if (_0x3b3565 !== 'Dereliction') $(info[_0x3c9771(0x1bb)][_0x3b3565])['each'](function(_0xb2e77d) { const _0x2a74cf = _0x3c9771; let _0x92d531; if (_0xb2e77d !== 0x0) { if (_0x3b3565 === _0x2a74cf(0x287) || _0x3b3565 === _0x2a74cf(0x2c3)) _0x92d531 = /Reload/ [_0x2a74cf(0x1d2)](_0x3b3565) ? _0x3b3565[_0x2a74cf(0x2b9)](0x0, 0x6) + '\x20' + _0x3b3565[_0x2a74cf(0x2b9)](0x6) + '\x20+' + _0xb2e77d : _0x3b3565[_0x2a74cf(0x2b9)](0x0, 0x6) + '\x20' + _0x3b3565['slice'](0x6) + '\x20+' + _0xb2e77d;
                else { if (_0x3b3565 === 'AmmoUP' || _0x3b3565 === _0x2a74cf(0x2d2)) { const _0x53b774 = _0x3b3565 === _0x2a74cf(0x2d5) ? ['No\x20Change', _0x2a74cf(0x2f0), _0x2a74cf(0x1a7)] : [_0x2a74cf(0x22d), 'Spare\x20Shot\x20+10%', _0x2a74cf(0x2d3)];
                        _0x92d531 = _0xb2e77d + ':\x20' + _0x53b774[_0xb2e77d - 0x1]; } else { if (_0x3b3565 == _0x2a74cf(0x2a6)) _0x92d531 = _0xb2e77d + ':\x20' + ['Chance\x2020%\x20Raw\x20\x20+\x205%\x20EFR\x20+1%', _0x2a74cf(0x2bc), 'Chance\x2060%\x20Raw\x20\x20+\x205%\x20EFR\x20+3%\x20', 'Chance\x2040%\x20Raw+10%\x20EFR\x20+4%'][_0xb2e77d - 0x1];
                        else { if (_0x3b3565 === _0x2a74cf(0x1b9)) weaponType[_0x2a74cf(0x25b)] !== hbg ? _0x92d531 = _0xb2e77d + ':\x20Raw\x20+' + info[_0x2a74cf(0x1bb)][_0x2a74cf(0x1b9)][_0xb2e77d][0x0] + _0x2a74cf(0x28a) + info[_0x2a74cf(0x1bb)][_0x2a74cf(0x1b9)][_0xb2e77d][0x1] : _0x92d531 = [_0x2a74cf(0x1b9), _0x2a74cf(0x31c), _0x2a74cf(0x286), _0x2a74cf(0x1bd), _0x2a74cf(0x228)][_0xb2e77d];
                            else { if (_0x3b3565 == _0x2a74cf(0x32e)) _0x92d531 = [_0x2a74cf(0x19b), _0x2a74cf(0x1eb), _0x2a74cf(0x2c7), _0x2a74cf(0x275), 'Shield:\x20Guard\x20Up'][_0xb2e77d];
                                else { if (_0x3b3565 == _0x2a74cf(0x1fa)) _0x92d531 = ['-', 'Normal\x20+30%\x20Spread\x20+20%\x20Pierce\x20+10%\x20Recoil\x20-2'][_0xb2e77d];
                                    else { let _0x494159 = ''; if (this['BR'] > 0x0 || this[_0x2a74cf(0x259)] > 0x1 || this[_0x2a74cf(0x1d3)] > 0x1) { _0x494159 = _0x2a74cf(0x248);
                                            this['BR'] > 0x0 && (_0x494159 += /\d\.?\d/ ['test'](this['BR']) ? '+' + this['BR'] : _0x2a74cf(0x313) + this['BR']); if (this[_0x2a74cf(0x1d3)] > 0x1) { const _0x196c71 = /\.[1-8]/ [_0x2a74cf(0x1d2)]((this[_0x2a74cf(0x1d3)] - 0x1) * 0x64) ? ((this[_0x2a74cf(0x1d3)] - 0x1) * 0x64)[_0x2a74cf(0x2a7)](0x1) : ((this[_0x2a74cf(0x1d3)] - 0x1) * 0x64)['toFixed'](0x0);
                                                _0x494159 += /\d\.?\d/ ['test'](_0x196c71) ? '+' + _0x196c71 + '%' : '\x20+\x20' + _0x196c71 + '%'; } if (this[_0x2a74cf(0x259)] > 0x1) { const _0x4f130f = /\.[1-8]/ ['test']((this[_0x2a74cf(0x259)] - 0x1) * 0x64) ? ((this['PRM'] - 0x1) * 0x64)[_0x2a74cf(0x2a7)](0x1) : ((this['PRM'] - 0x1) * 0x64)['toFixed'](0x0);
                                                _0x494159 += _0x3b3565 === _0x2a74cf(0x21c) && /\d\.?\d/ ['test'](_0x4f130f - 0x19) ? '+' + (_0x4f130f - 0x19) + '%' : _0x3b3565 === 'CriticalBoost' ? _0x2a74cf(0x313) + (_0x4f130f - 0x19) + '%' : /\d\.?\d/ [_0x2a74cf(0x1d2)](_0x4f130f) ? '+' + _0x4f130f + '%' : _0x2a74cf(0x313) + _0x4f130f + '%'; } } let _0x4789d4 = ''; if (this['BE'] > 0x0 || this[_0x2a74cf(0x23c)] > 0x1 || this[_0x2a74cf(0x2fc)] > 0x1) { _0x4789d4 = _0x2a74cf(0x2ee);
                                            this['BE'] > 0x0 && (_0x4789d4 += /\d\.?\d/ [_0x2a74cf(0x1d2)](this['BE']) ? '+' + this['BE'] : _0x2a74cf(0x313) + this['BE']); if (this[_0x2a74cf(0x2fc)] > 0x1) { const _0x58f348 = /\.[1-8]/ ['test']((this['BEM'] - 0x1) * 0x64) ? ((this[_0x2a74cf(0x2fc)] - 0x1) * 0x64)[_0x2a74cf(0x2a7)](0x1) : ((this[_0x2a74cf(0x2fc)] - 0x1) * 0x64)[_0x2a74cf(0x2a7)](0x0);
                                                _0x4789d4 += /\d\.?\d/ [_0x2a74cf(0x1d2)](_0x58f348) ? '+' + _0x58f348 + '%' : _0x2a74cf(0x313) + _0x58f348 + '%'; } if (this[_0x2a74cf(0x23c)] > 0x1) { const _0x25103c = /\.[1-8]/ [_0x2a74cf(0x1d2)]((this[_0x2a74cf(0x23c)] - 0x1) * 0x64) ? ((this['PEM'] - 0x1) * 0x64)['toFixed'](0x1) : ((this['PEM'] - 0x1) * 0x64)[_0x2a74cf(0x2a7)](0x0);
                                                _0x4789d4 += /\d\.?\d/ [_0x2a74cf(0x1d2)](_0x25103c) ? '+' + _0x25103c + '%' : '\x20+\x20' + _0x25103c + '%'; } } const _0x1a6d0d = this[_0x2a74cf(0x2b6)] > 0x0 && /\d\.?\d/ [_0x2a74cf(0x1d2)](this[_0x2a74cf(0x2b6)]) ? _0x2a74cf(0x1c6) + this[_0x2a74cf(0x2b6)] : this[_0x2a74cf(0x2b6)] > 0x0 ? _0x2a74cf(0x254) + this[_0x2a74cf(0x2b6)] : '';
                                        _0x494159 = Object[_0x2a74cf(0x2dd)]['hasOwnProperty'][_0x2a74cf(0x27e)](this, _0x2a74cf(0x30f)) && this[_0x2a74cf(0x30f)] < 0x1 ? _0x2a74cf(0x33d) + this['Sharp'] * 0x64 + '%' : _0x494159, _0x494159 = Object[_0x2a74cf(0x2dd)]['hasOwnProperty']['call'](this, _0x2a74cf(0x30f)) && this['Sharp'] > 0x1 ? 'Sharp\x20+' + this[_0x2a74cf(0x30f)] : _0x494159, _0x494159 = _0x494159 === '' && _0x4789d4 === '' && _0x1a6d0d === '' ? _0x2a74cf(0x310) : _0x494159; if (_0x28d55a === BowCoating) { const _0x144b80 = getWeapon()[_0x2a74cf(0x341)];
                                            _0x92d531 = _0x144b80[_0xb2e77d] + ':\x20' + [_0x494159, _0x4789d4, _0x1a6d0d]['join']('\x20'); } else _0x92d531 = _0xb2e77d + ':\x20' + [_0x494159, _0x4789d4, _0x1a6d0d]['join']('\x20'); } } } } } } } else _0x92d531 = _0x3b3565;
            $('#' + _0x3b3565)[0x0][_0xb2e77d]['textContent'] = _0x92d531; }), lastEvent = _0x28d55a;
        else { if (_0x28d55a === Dereliction) { const _0x2b2709 = $(redScroll)[_0x3c9771(0x304)](_0x3c9771(0x1f0)) ? [
                    [_0x3c9771(0x2e4)],
                    ['2:\x20Raw\x20+20'],
                    ['3:\x20Raw\x20+25'],
                    [_0x3c9771(0x24e)],
                    [_0x3c9771(0x197)],
                    [_0x3c9771(0x224)],
                    ['1:\x20Raw\x20+25'],
                    [_0x3c9771(0x268)],
                    [_0x3c9771(0x309)]
                ] : [
                    [_0x3c9771(0x1d1)],
                    ['2:\x20Ele\x20+\x208'],
                    [_0x3c9771(0x2fd)],
                    ['1:\x20Ele\x20+\x207'],
                    [_0x3c9771(0x205)],
                    [_0x3c9771(0x348)],
                    [_0x3c9771(0x289)],
                    [_0x3c9771(0x265)],
                    [_0x3c9771(0x344)]
                ]; let _0x3eb7c6 = 0x0;
                $('select#Dereliction')[_0x3c9771(0x18e)]()[_0x3c9771(0x1d0)](function() { const _0x3f5834 = _0x3c9771;
                    $(this)[_0x3f5834(0x18e)]()[_0x3f5834(0x1d0)](function() { const _0x6d6474 = _0x3f5834;
                        this[_0x6d6474(0x2cb)] = _0x2b2709[_0x3eb7c6], ++_0x3eb7c6; }); }), Dereliction[0x0][_0x3c9771(0x2cb)] = _0x3c9771(0x276); } }
        lastEvent = _0x28d55a; }(Object[_0x3c9771(0x25d)]($(_0x3c9771(0x31f))[_0x3c9771(0x18e)]())['some'](_0x141555 => _0x141555['id'] === _0x28d55a['id']) && _0x28d55a[_0x3c9771(0x18e)][0x0]['textContent'] === _0x28d55a['id'] || !Object[_0x3c9771(0x25d)]($(_0x3c9771(0x31f))['children']())['some'](_0x4464c0 => _0x4464c0['id'] === _0x28d55a['id'] || _0x28d55a)) && resetSkillDescription(_0x28d55a); }

function getStats(_0x52f5e1, _0x414c39 = { 'BRM': 0x0, 'BR': 0x0, 'PRM': 0x0, 'BEM': 0x0, 'BE': 0x0, 'PEM': 0x0, 'af': 0x0 }) { const _0x30dbf3 = _0x40b288; return $(_0x52f5e1)[_0x30dbf3(0x1d0)](function() { const _0x3e1e79 = _0x30dbf3;
        _0x414c39[_0x3e1e79(0x1d3)] *= this['BRM'], _0x414c39['BR'] += this['BR'], _0x414c39[_0x3e1e79(0x259)] *= this[_0x3e1e79(0x259)], _0x414c39[_0x3e1e79(0x2fc)] *= this['BEM'], _0x414c39['BE'] += this['BE'], _0x414c39[_0x3e1e79(0x23c)] *= this[_0x3e1e79(0x23c)], _0x414c39['aff'] += this[_0x3e1e79(0x2b6)]; }), _0x414c39; }

function partSelector() { const _0x34f1ee = _0x40b288;
    $(dropHZ)['children']()[_0x34f1ee(0x1d0)](function(_0x3610cd) { const _0x48b398 = _0x34f1ee;
        this[_0x48b398(0x2cb)] === document['querySelector']('#monTable\x20>\x20tr:nth-child(2)\x20>\x20td:nth-child(1)')[_0x48b398(0x2cb)] && (dropHZ[_0x48b398(0x26b)] = _0x3610cd); }); }

function formatNumbers(_0x202734) { const _0x5b9c5d = _0x40b288; return _0x202734[_0x5b9c5d(0x29b)]()['replace'](/(\d)(?=(\d{3})+(?!\d))/g, _0x5b9c5d(0x181)); }