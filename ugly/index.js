let lastEvent="",comboTracker=[],buildKeys=0,testKeyCount=0,armorCount="";const dropHZ=document.getElementById("dropHZ"),dropWeapon=document.getElementById("dropWeapon"),weaponType=document.getElementById("dropWeaponType"),dropMon=document.getElementById("dropMonster"),dropQuest=document.getElementById("dropQuest"),weaponTypes=[["LightBowGun"],["GreatSword"],["ChargeBlade"],["InsectGlaive"],["SwordNShield"],["DualBlades"],["SwitchAxe"],["LongSword"],["Lance"],["HeavyBowGun"],["Bow"],["HuntingHorn"],["Gunlance"],["Hammer"]],registerServiceWorker=async()=>{if("serviceWorker"in navigator){await navigator.serviceWorker.getRegistration()||await navigator.serviceWorker.register("/sw.js",{scope:"/"});try{if("serviceWorker"in navigator)return;await navigator.serviceWorker.register("/sw.js",{scope:"/"})}catch(e){console.error(`Registration failed with ${e}`)}}};"serviceWorker"in navigator||registerServiceWorker();const getGrade=(e,t)=>e.includes("S")||t.includes("S")?"S":t<=e?t:e,info={};async function getInfo(){try{const e=window.location.href.slice(0,window.location.href.lastIndexOf("/"));weaponTypeSelect();const t=fetch(`${window.location.href.slice(0,window.location.href.lastIndexOf("/"))}/json/monster.json`).then((e=>e.json())).then((e=>{info.monster=e})),n=fetch(`${e}/json/rampage.json`).then((e=>e.json())).then((e=>{info.rampage=e})),o=fetch(`${e}/json/types.json`).then((e=>e.json())).then((e=>{info.types=e})),l=fetch(`${e}/json/skills.json`).then((e=>e.json())).then((e=>{info.skills=e})),a=fetch(`${e}/json/quest.json`).then((e=>e.json())).then((e=>{info.quest=e})),s=fetch(`${e}/json/LightBowGun.json`).then((e=>e.json())).then((e=>{info.LightBowGun=e})),i=fetch(`${e}/json/ammo.json`).then((e=>e.json())).then((e=>{info.ammo=e})),r=await Promise.all([s,o,n]).then((()=>{}));if(await Promise.all([t,l,a,i,r]).then((()=>{classChange(),document.querySelectorAll("#dropMonster>option").forEach(((e,t)=>{"Toadversary"===e.textContent&&(document.getElementById("dropMonster").selectedIndex=t)})),partSelect(),healthSelect(),monChart()})).then((()=>info)),/localhost|5500/.test(window.location.origin)){const e=document.createElement("script");e.src="setCreation.js",document.body.append(e);const t=document.createElement("script");t.src="setBuilderWorker.js",document.body.append(t)}weaponTypes.push("armor"),fetch(`${e}/json/charms.json`).then((e=>e.json())).then((e=>{const t=[],n=document.createDocumentFragment(),o=document.createDocumentFragment();for(let l=0,a=0;;){if(0===l){const t=document.createElement("option");t.value=Object.values(e)[a][0]?.grade,t.textContent=`${Object.keys(e)[a]} +${Object.values(e)[a][1]}`,n.appendChild(t);const l=document.createElement("option");l.value=Object.values(e)[a][0]?.grade,l.textContent=`${Object.keys(e)[a]} +${Object.values(e)[a][2]}`,o.appendChild(l)}if(++a===Object.keys(e).length){if(a=0,++l===Object.keys(e).length)break;1===l&&(document.getElementById("charm1Skill1")?.appendChild(n.cloneNode(!0)),document.getElementById("charm1Skill2")?.appendChild(o.cloneNode(!0)),document.getElementById("charm2Skill1")?.appendChild(n.cloneNode(!0)),document.getElementById("charm2Skill2")?.appendChild(o.cloneNode(!0)))}l!==a&&"Bludgeoner"!==Object.keys(e)[l]&&"Bludgeoner"!==Object.keys(e)[a]&&(null===info.types.Lvl4[Object.keys(e)[l]]||info.types.qurious[Object.keys(e)[l]]>=9||!info.types.qurious[Object.keys(e)[l]]||info.types.Lvl4[Object.keys(e)[l]]<2)&&(null===info.types.Lvl4[Object.keys(e)[a]]||info.types.qurious[Object.keys(e)[a]]>=9||!info.types.qurious[Object.keys(e)[a]]||info.types.Lvl4[Object.keys(e)[a]]<2)&&!info.types.decoLevels[0].some((t=>Object.keys(t)[0]===Object.keys(e)[l]))&&!info.types.decoLevels[0].some((t=>Object.keys(t)[0]===Object.keys(e)[a]))&&Object.values(e)[l][1]>=3&&Object.values(e)[a][2]>=2&&t.push({skills:{[Object.keys(e)[l]]:Object.values(e)[l][1],[Object.keys(e)[a]]:Object.values(e)[a][2]},grade:getGrade(Object.values(e)[l][0]?.grade,Object.values(e)[a][0]?.grade)})}info.charms=t})),weaponTypes.slice(1).forEach((t=>{fetch(`${e}/json/${t}.json`).then((e=>e.json())).then((e=>{info[t]=e}))}))}catch(e){console.error(e)}}getInfo();const getArmorTypes=()=>["helm","chest","arm","waist","leg"],timesUsed=(e,t=comboTracker,n=0)=>(t.forEach((t=>{t==e&&++n})),n);function dataCompile(e=window?.event){updateSelectedSkills(),/BowGun/.test(weaponType.value)?rangedDPS(e):meleeDPS(e)}const resetTable=e=>{let t=0,n=2;const o=document.querySelectorAll("#dpsBody>tr>td:nth-child(n+3)");for(;7!=++n||(n=2,++t!==e.length);)o[0].textContent=e[t][n]};function rangedDPS(e){document.querySelector("output.elementalAug").value=0,document.getElementById("elementalResult").value="+0",document.querySelector("output.sharpnessAug").value=0,document.getElementById("sharpnessResult").value="+0";const t=[],n=[];let o={},l=!0;const a=getWeaponMR();["Shot","Sever","Blunt","IgnoreHZV"].forEach((e=>{a[e]=getInitialStats(a,e)}));const s=getUsedAttacks();for(let i=0;i<Object.keys(s).length;i++){let r={...a[Object.values(s)[i].type],...Object.values(s)[i]};r=getDependantSkills(r),r=getRemainingSkills(r),r=damageCalculations(r),/Demon|Armor|Wyvern Blast|Glide|Wyvernsn|Guard/.test(r.attackName)?o.ticsAdjust=1:o=calculateAmmoFrames(r);const c=~~((~~r.efr+~~r.efe)*o.ticsAdjust),u=~~(~~r.rawCrit+~~r.eleCrit),d=~~(~~r.rawNon+~~r.eleNon),p=formatNumbers(~~(.99+document.getElementById("health").value/c));let m=/Stic|Slic/.test(r.attackName)?5+~~(.98+60/o.shotsPerMin)*~~(.99+document.getElementById("health").value/c):~~(.98+60/o.shotsPerMin)*~~(.99+document.getElementById("health").value/c);m=formatNumbers(m);const g=[`${~~r.rawNon} / ${~~r.rawCrit}`],h=[`${~~r.eleNon} / ${~~r.eleCrit}`],f=[`${~~d} / ${~~u}`],y=[r.attackName,g,h,f,c,"NaN%"===o.shotsPerGain||"0.00%"===o.shotsPerGain?"No Gain":o.shotsPerGain,/(\d{2},\d{3})/.test(p)?"N / A":p,/(\d{2},\d{3})/.test(m)?"N / A":m];t.push(y);const v=[r.attackName,r.rawMV,void 0===o.reloadSpeed?" N / A ":o.reloadSpeed,void 0===o.recoilSpeed?" N / A ":o.recoilSpeed,isNaN(o.clipSize)?"N / A":o.clipSize,r.ticsPer+1,void 0===o.shotsPerMinBase?" N / A ":o.shotsPerMinBase,void 0===o.shotsPerMin?" N / A ":o.shotsPerMin];if(n.push(v),l){buildDamageTable([["Stat","Raw","Affinity","Ele Pierce"],["Base",~~r.baseRaw,~~r.baseAff,~~(22*(1+r.raw/100))],["True",~~r.raw,~~(100*r.aff),~~((22*r.BEM+r.BE)*(1+r.raw/100))],["Total",~~(r.raw*getCritBoost(r.aff,r.Crit).PRM*r.PRM*r.augPRM),~~(100*r.aff),~~((22*r.BEM+r.BE)*(1+r.raw/100)*r.PEM*r.augPEM*getCritEle(r.aff,r.Crit).PEM)],["Effective",~~(r.raw*getCritBoost(r.aff,r.Crit).EFR*r.PRM*r.augPRM),~~(100*r.aff),~~((22*r.BEM+r.BE)*(1+r.raw/100)*r.PEM*r.augPEM*getCritEle(r.aff,r.Crit).EFE)]],"stats",e),l=!1}}t.splice(0,0,["Ammo Type","Raw","Element","Total","Effective","RPM Gain","Shots \n To Kill","Seconds \n To Kill"]),buildDamageTable(t,"dps",e),n.splice(0,0,["Ammo Type","rawMV","Reload","Recoil","Clip Size","Procs Per","RPM Base","Current RPM"]),buildDamageTable(n,"ammo",e)}function meleeDPS(e){const t=performance.now(),n=[["Combo","Attack Name","MV","Raw","Element","Total","Effective"]];let o=[0,0,0,0,0,0,0,0],l=-1,a={};Sharpness.selectedIndex;const s=getWeaponMR();["Shot","Sever","Blunt","IgnoreHZV"].forEach((e=>{s[e]=getInitialStats(s,e)})),Object.values(getUsedAttacks()).forEach((t=>{++l;let i={...t,...s[t.type]};if(i=getDependantSkills(i),/input/.test(e?.target?.className)&&"Combo Damage"===i.attackName&&(updateComboTracker(),updateComboDisplay()),"Combo Damage"===i.attackName&&(a="Bow"===weaponType.value?hitsPerColorSharp()[1]:getComboHitsAndSetSharpness(i.aff)),i=getRemainingSkills(i),i=damageCalculations(i),comboTracker.includes(l.toString())){Object.entries(a).filter((e=>e[1].length>0)).forEach((e=>{if(!timesUsed(l,e[1]))return;const{PRM:t,PEM:n}=!1===i.noSharpMod?info.skills.Sharpness[capital(e[0])]:{PRM:1,PEM:1},a=timesUsed(l,e[1]);o=[o[0]+=Number(~~(i.rawMV*a)),o[1]+=Number(~~(i.rawNon*t)*a),o[2]+=Number(~~(i.rawCrit*t)*a),o[3]+=Number(~~(i.eleNon*n)*a),o[4]+=Number(~~(i.eleCrit*n)*a),o[5]+=Number(~~(i.rawNon*t)*a+~~(i.eleNon*n)*a),o[6]+=Number(~~(i.rawCrit*t)*a+~~(i.eleCrit*n)*a),o[7]+=Number(~~(i.efr*t)*a+~~(i.efe*n)*a)]}))}let r=info.skills.Sharpness[Sharpness.selectedOptions[0].text];if("Bow"===weaponType.value&&"Shot"!==i.type)switch(BowCoating.selectedOptions[0].text){case"Power":r="1.35";break;case"Close Range":r="1.32";break;case"Close Range+":r="1.39"}const c=["replaceME",i.attackName,i.rawMV,`${formatNumbers(~~(i.rawNon*r.PRM))} / ${formatNumbers(~~(i.rawCrit*r.PRM))}`,`${formatNumbers(~~(i.eleNon*r.PEM))} / ${formatNumbers(~~(i.eleCrit*r.PEM))}`,`${formatNumbers(~~(i.rawNon*r.PRM)+~~(i.eleNon*r.PEM))} / ${formatNumbers(~~(i.rawCrit*r.PRM)+~~(i.eleCrit*r.PEM))}`,formatNumbers((~~(i.efe*r.PEM)+~~(i.efr*r.PRM))*(i.ticsPer+1))];if(n.push(c),l){const t="none"===lower(i.eleType)?0:i.ele;buildDamageTable([[["Stat"],["Raw"],["Affinity"],[i.eleType]],["Base",~~i.baseRaw,~~i.baseAff,i.baseEle],["True",~~i.raw,~~(100*i.aff),~~t],["Total",~~(i.raw*getCritBoost(i.aff,i.Crit).PRM*i.PRM*i.augPRM*r.PRM),~~(100*i.aff),~~(t*getCritEle(i.aff,i.Crit).PEM*i.PEM*i.augPEM*r.PEM)],["Effective",~~(i.raw*getCritBoost(i.aff,i.Crit).EFR*i.PRM*i.augEFR*r.PRM),~~(100*i.aff),~~(t*getCritEle(i.aff,i.Crit).EFE*i.PEM*i.augPEM*i.augEFR*r.PEM)]],"stats",e)}})),"Gunlance"===weaponType.value?(gunlanceShelling(n,o,e),console.log((performance.now()-t)/1e3),gunlanceShelling(532)):(n.splice(1,1,["replaceME","Combo Damage",`${formatNumbers(o[0])}`,`${formatNumbers(o[1])} / ${formatNumbers(o[2])}`,`${formatNumbers(o[3])} / ${formatNumbers(o[4])}`,`${formatNumbers(o[5])} / ${formatNumbers(o[6])}`,`${formatNumbers(o[7])}`]),buildDamageTable(n,"dps",e),console.log((performance.now()-t)/1e3),console.log(window.event))}function getRampageSkills(e={...info[weaponType.value].weapons[dropWeapon.value]}){for(let t=0;t<6;t++){const n=document.querySelectorAll("#weaponRampage>select")[t];if("none"===n.style.display)break;const o=info.rampage["Rampage-Up Skill"][n.value];if(void 0!==o)for(const t of Object.keys(o))e[t]+=o[t]}return/BowGun/.test(weaponType.value)||(e.eleType=/Fire|Water|Thunder|Ice|Dragon|Blase|Sleep|Poison|Para/.test(weaponRampage.children[1].value)?weaponRampage.children[1].value.match(/Fire|Water|Thunder|Ice|Dragon|Blase|Sleep|Poison|Para/)[0]:e.eleType),{...e}}const getWeaponMR=()=>{const e={...info[weaponType.value].weapons[dropWeapon.value]};if(/BowGun/.test(weaponType.value)&&("Power"===document.getElementById("BowgunBarrel")?.selectedOptions[0]?.textContent&&(e.baseRaw=~~(e.baseRaw*(document.getElementById("Tune-Up").selectedIndex<2?1.125:1.15))),"Long"===document.getElementById("BowgunBarrel")?.selectedOptions[0]?.textContent&&(e.baseRaw=~~(e.baseRaw*(document.getElementById("Tune-Up").selectedIndex<2?1.05:1.075)))),e.baseRaw+=Number(document.querySelector("output.attackAug").value)/2*5,document.getElementById("attackResult").value="+ "+Number(document.querySelector("output.attackAug").value)/2*5,e.aff+=document.querySelector("output.affinityAug").value/3*5,document.getElementById("affinityResult").value="+ "+document.querySelector("output.affinityAug").value/3*5,document.getElementById("rampageResult").textContent=document.querySelector("output.rampageAug").value>0?"+1":"+0","None"!==e.eleType&&0!==document.querySelector("output.elementalAug").value){let t=0;"GreatSword"===weaponType.value&&(t=[0,5,10,15,20,25,33][document.querySelector("output.elementalAug").value]),"lance"!==weaponType?.value&&"Gunlance"!==weaponType?.value||(t=[0,3,6,10,14,18,24][document.querySelector("output.elementalAug").value]),t||(t=[0,3,6,9,12,15,20][document.querySelector("output.elementalAug").value]),e.baseEle+=t,document.getElementById("elementalResult").value=`+ ${t}`}else document.querySelector("output.elementalAug").value=0;return e.baseAff=Number(e.aff),JSON.parse(JSON.stringify(e))},getRangedSkills=e=>(/Pierc/.test(e.attackName)?e.getSkills.push(info.skills.PierceUP[PierceUP.selectedIndex]):/Spread/.test(e.attackName)?e.getSkills.push(info.skills.SpreadUp[SpreadUp.selectedIndex]):/Normal|Rapid/.test(e.attackName)&&e.getSkills.push(info.skills.NormalRapidUp[NormalRapidUp.selectedIndex]),/RF+/.test(e.attackName)&&e.getSkills.push(info.skills.RapidFireUp[RapidFireUp.selectedIndex]),/Wyvern|Dragon Piercer/.test(e.attackName)&&e.getSkills.push(info.skills.SpecialAmmoBoost[SpecialAmmoBoost.selectedIndex]),/BowGun/.test(weaponType.value)&&("HeavyBowGun"===weaponType.value&&(/Sticky|Wyvern/.test(e.attackName)&&(e.augEFR*=info.skills.Bombardier[document.getElementById("Bombardier").selectedIndex][e.attackName.match("Sticky|Wyvern")[0]][1],e.augPRM*=info.skills.Bombardier[document.getElementById("Bombardier").selectedIndex][e.attackName.match("Sticky|Wyvern")[0]][0]),/snipe|heart|Cluster/.test(e.attackName)||(e.PRM*=info.skills.ChargeLevel[ChargeLevel.selectedIndex].PRM,e.NoEleBuff?e.baseEle*=info.skills.ChargeLevel[ChargeLevel.selectedIndex].PEM:e.PEM*=info.skills.ChargeLevel[ChargeLevel.selectedIndex].PEM)),"LightBowGun"===weaponType.value&&/Pierce|Spread|Normal/.test(e.attackName)&&document.getElementById("CriticalFirePower").selectedIndex>0&&(/Normal/.test(e.attackName)?e.PRM*=1.3:/Spread/.test(e.attackName)?e.PRM*=1.2:/Pierce/.test(e.attackName)&&(e.PRM*=1.1))),"Bow"!==weaponType.value||/Stake/.test(e.attackName)||e.getSkills.push(info.skills.BowCoating[BowCoating.selectedIndex]),getStats(e)),getMeleeSkills=e=>{if("LongSword"!==weaponType.value||/Helm Breaker|Serene/.test(e.attackName)?/Helm Breaker|Serene/.test(e.attackName)&&e.getSkills.push(/Helm Breaker/.test(e.attackName)?e.getSkills.push(info.skills.Helmbreaker[Helmbreaker.selectedIndex]):e.getSkills.push(info.skills.SerenePose[SerenePose.selectedIndex])):e.getSkills.push(info.skills.SpiritGauge[SpiritGauge.selectedIndex]),"GreatSword"===weaponType.value){const t=e.attackName.match(/Charged Slash|Rising Slash|Wide Slash|Strong Charged Slash|True Charged Slash|Rage Slash/);t&&document.getElementById("StrongarmStance").selectedIndex>0&&(e.PRM*=info.skills.StrongarmStance[t][0],e.PEM*=info.skills.StrongarmStance[t][1]),/(?<!Tackle )Lv[1-3]/.test(e.attackName)&&(e.rawMV*=Number(`1.${e.attackName.match(/(?<=Lv)[1-3]/)[0]}`),e.rawMV=e.rawMV.toFixed(1))}return"ChargeBlade"===weaponType.value&&(/3rd|(?<!Midair |Axe: )UED|(?<!Charged )Sword(?!.*Shield)/.test(e.attackName)||e.getSkills.push(info.skills.savageAxe[savageAxe.selectedIndex]),"Impact Phial"===e.phialType?e.getSkills.push(info.skills.impShieldCharge[impShieldCharge.selectedIndex]):e.getSkills.push(info.skills.eleShieldCharge[eleShieldCharge.selectedIndex])),getStats(e)};function getDependantSkills(e){return e.getSkills=[],"FireWaterIceThunderDragon".includes(e.eleType)&&document.querySelectorAll(`.${lower(e.eleType)}`).forEach((t=>{t.selectedIndex>0&&e.getSkills.push(info.skills[t.id][t.selectedIndex])})),weaponType.value.includes("Bow")?getRangedSkills(e):getMeleeSkills(e)}function getEnrage(){return"Enraged"===document.getElementById("dropEnraged").value?info.monster[dropMon.value]?.anger_data?.atk_rate:1}function getInitialStats(e,t){null===comboTracker[0]&&(comboTracker=[]),e.baseRaw+=!0===e.Draw?Number(document.getElementById("PunishingDraw").value):0,e.BR=0,e.BRM=1,e.PRM=1,e.BEM=1,e.BE=0,e.PEM=1;const n={};let o=[];return e.getSkills=[],Object.values(info.types[t]).forEach((t=>{document.getElementById([t])?.style.display.includes("none")||!document.getElementById([t]).selectedIndex||n[t]||e.getSkills.push(info.skills[t][document.getElementById(`${t}`).selectedIndex]),n[t]=1})),e.PRM*=document.getElementById("DemonAmmo").checked&&/(Sever|Blunt)/.test(e.type)?1.1:1,document.querySelectorAll("input.skillButton").forEach((t=>{t.checked&&info.skills[t.id]&&!n[t.id]?(e.getSkills.push(info.skills[t.id]),n[t.id]=1):info.skills[t.id]||console.log(t.id)})),document.getElementById("enrageDisplay").textContent=~~(100*getEnrage())+"%","Enraged"===document.getElementById("dropEnraged").value&&(o.push("Agitator"),e.PEM*=getEnrage(),e.PRM*=getEnrage()),"DualBlades"===weaponType.value&&(e.BEM*=info.skills.ArchdemonMode[document.getElementById("ArchdemonMode").selectedIndex].BEM,e.BEM*=/\[Feral Demon Mode\]/.test(e.attackName)?1:info.skills.DemonMode[document.getElementById("DemonMode").selectedIndex].BEM,e.BRM*=/\[Demon Mode\]/.test(e.attackName)?1:info.skills.FeralDemonMode[document.getElementById("FeralDemonMode").selectedIndex].BRM,e.aff+="Hellion Mode"===document.getElementById("weaponRampage0").value?20:0),"Bow"===weaponType.value&&(o=e.getSkills.concat("UpperCrit","HerculesDraw")),o.forEach((t=>{!n[t]&&document.getElementById([t]).selectedIndex&&(n[t]=1,e.getSkills.push(info.skills[t][document.getElementById([t]).selectedIndex]))})),getStats(e),"Kushala Daora Soul"===document.getElementById("weaponRampage0").value&&(e.aff+=15),getRawHZ(t)>=45&&(e.aff+=info.skills.WeaknessExploit[Math.min(0,document.getElementById("WeaknessExploit").selectedIndex)].aff),e.aff=Math.min(e.aff,100)/100,{...e}}function updateComboTracker(){if(document.getElementsByClassName("inputs")?.length&&!Number.isNaN(Number(window?.event?.target.id))&&"0"!==window?.event?.target.id){let e=document.querySelectorAll(".inputs")[window?.event?.target.id].value-timesUsed(window?.event?.target.id);for(;e>0;)comboTracker.push(window.event.target.id),--e;for(;e<0;)comboTracker.splice(comboTracker.lastIndexOf(window?.event?.target.id),1),++e}}function updateComboDisplay(){let e;document.querySelectorAll("li.comboHits").forEach((e=>e.remove())),comboTracker.forEach((t=>{e=document.createElement("li"),e.className=`${t} comboHits`,e.setAttribute("draggable","true"),e.textContent=document.querySelector(`td#b${[t]}>output`).textContent,document.getElementById("comboCountDisplay").append(e)}))}const getInitialSharpness=()=>{let e=10*document.getElementById("Handicraft").selectedIndex;const{sharpness:t,handicraft:n}=getWeaponMR(),o=document.querySelector("#augToggle > div:nth-child(5) > output.sharpnessAug").value/3*10;t.red-=o;const l=Object.values(t).indexOf(0)-1;t[Object.keys(t)[l]]+=o;for(let o=l;e;++o){const l=Math.min(e,n.shift());t[Object.keys(t)[o<0?6:o]]+=l,e-=l}return t};function applySharpnessSkills(e,t={...getInitialSharpness()}){let n=[];const o=info.skills.RazorSharp[document.getElementById("RazorSharp").selectedIndex].Sharp,l=info.skills.MastersTouch[document.getElementById("MastersTouch").selectedIndex].Sharp*e,a=e>0&&document.getElementById("MastersTouch").selectedIndex>0?sharpnessReduction(l)*sharpnessReduction(o):sharpnessReduction(o);return n=Object.entries(t).map((e=>~~(Number(e[1])*Number(a)))),n}function listOfAllComboHits(){let[...e]=comboTracker;if(void 0!==comboTracker[0]&&null!==comboTracker[0]){let t=document.getElementsByClassName("inputComboRepeat")[0].value;for(;t>1;)e=e.concat(comboTracker),--t;return e}}function getComboHitsAndSetSharpness(e=0){const[t,n,o]=hitsPerColorSharp(e);return document.getElementById("Sharpness").selectedIndex=6-t.lastIndexOf(0),t.forEach(((e,t)=>{document.querySelector("#sharpnessContainer").children[6-t].style.width=e/o*100+"%",document.querySelector("#sharpnessContainer").children[6-t].textContent=e<.1?"":~~e})),n}function hitsPerColorSharp(e=0,t=listOfAllComboHits()){const n={purple:[],white:[],blue:[],green:[],yellow:[],orange:[],red:[]},o="Bow"!==weaponType.value?applySharpnessSkills(e).reverse():[0,0,0,1,0,0,0,0],l=Object.values(o).reduce(((e,t)=>e+t));if(t){const e=Object.keys(getUsedAttacks());t.forEach((t=>{const l=e[t],a=getHitsPerTic(l,t);if("Gunlance"!==weaponType.value||t<27)for(let e=0;e<getAttacks()[l].ticsPer+1;e++)o[0]>.1?(n.purple.push(t),o[0]-=a):o[1]>.1?(n.white.push(t),o[1]-=a):o[2]>.1?(n.blue.push(t),o[2]-=a):o[3]>.1?(n.green.push(t),o[3]-=a):o[4]>.1?(n.yellow.push(t),o[4]-=a):o[5]>.1?(n.orange.push(t),o[5]-=a):o[6]>.1&&(n.red.push(t),o[6]-=a)}))}return[o,n,l]}function getHitsPerTic(e,t){return document.getElementById("ProtectivePolish").checked||"Bow"===weaponType.value?0:"Gunlance"!==weaponType.value||t>27?"DualBlades"!==weaponType.value?getAttacks()[e].hitsOfSharp:getAttacks()[e].hitsOfSharp/3:1}function getRemainingSkills(e,t=getWeaponMR()){[e.augEFR,e.augPRM,e.augPEM]=[1,1,1],e.augPEM*="Valstrax Soul"===document.getElementById("weaponRampage0").value&&"Dragon"===e.eleType?1.2:1,[e.augEFR,e.augPRM]="Dulling Strike"===document.getElementById("weaponRampage0").value&&Sharpness.selectedIndex<5?[1.02,1.2]:[e.augEFR,e.augPRM];const n=Object.values(info.monster[dropMon.value]?.species);n&&("Invalid"!==n[1]&&"Wyvern Exploit"===document.querySelector("#weaponRampage0").value||document.querySelector("#weaponRampage0").value.includes(n[2])||"Invalid"!==n[3]&&"Fanged Exploit"===document.querySelector("#weaponRampage0").value)&&(e.PRM*=1.05),/blight Exploit/.test(document.getElementById("weaponRampage0").value)&&(e.PRM*=1.1),"Magnamalo Soul"===document.getElementById("weaponRampage0").value&&(e.BR+=12),("IgnoreHZV"===e.type&&"LightBowGun"===weaponType.value||"ChargeBlade"===weaponType.value)&&(e.augEFR*=info.skills.Bombardier[document.getElementById("Bombardier").selectedIndex][1],e.augPRM*=info.skills.Bombardier[document.getElementById("Bombardier").selectedIndex][0],"SwitchAxe"===weaponType.value&&/Sword|ZSD|ED/.test(e.attackName)&&"Impact Phial"===e.phialType&&(e.BRM*=1.15),"SwitchAxe"===weaponType.value&&/Sword|Elemental|ED/.test(e.attackName)&&"Elemental Phial"===e.phialType&&(e.BEM*=1.45)),"None"!==e.eleType&&(e.PEM*=0===t.rampageSlots&&"Elemental Exploit"===document.getElementById("weaponRampage0").value&&getEleHZ(e.eleType)>=25?1.3:1,e.PEM*=0!==t.rampageSlots&&"Element Exploit"===document.getElementById("weaponRampage0").value&&getEleHZ(e.eleType)>=25&&"none"!==lower(e.eleType)?1.15:1,e.PEM*=getEleHZ(e.eleType)>=20&&"none"!==lower(e.eleType)?info.skills.ElementExploit[ElementExploit.selectedIndex].PEM:1),"ChargeBlade"!==weaponType.value&&"SwitchAxe"!==weaponType.value||(e.BRM*=/Morph Slash|Condensed Spinning|Up Roundslash/.test(e.attackName)?info.skills.RapidMorph[RapidMorph.selectedIndex].BRM:1),Sharpness.selectedIndex>0&&Bludgeoner.selectedIndex>0&&(e.BRM*=1===Bludgeoner.selectedIndex&&Sharpness.selectedIndex<4?[1.05]:[1],e.BRM*=2===Bludgeoner.selectedIndex&&Sharpness.selectedIndex<4?[1.1]:[1],e.BRM*=3===Bludgeoner.selectedIndex&&Sharpness.selectedIndex<5?[1.1]:[1]),!/Wyvern/.test(e.attackName)&&Object.keys(info.skills.ChargeMaster).includes(weaponType.value)&&!0===e.ChargeMaster?e.BEM*=info.skills.ChargeMaster[weaponType.value][ChargeMaster.selectedIndex].BEM:!0===e.ChargeMaster&&!0===e.NoEleBuff&&(e.baseEle*=/Wyvern/.test(e.attackName)?info.skills.ChargeMaster["HeavyBowGun Wyvern"][ChargeMaster.selectedIndex].BEM:info.skills.ChargeMaster[weaponType.value][ChargeMaster.selectedIndex].BEM);const o=[];return[o.PRM,o.PEM]=!1===e.noSharpMod&&/sever|blunt/.test(lower(e.type))?[JSON.parse(Sharpness.value).PRM,JSON.parse(Sharpness.value).PEM]:[1,1],e.PRM*=~~(25/o.PRM)>=getRawHZ(e.type)?info.skills.MindsEye[MindsEye.selectedIndex].PRM:1,0===t.rampageSlots&&"Brutal Strike"===document.getElementById("weaponRampage0").value&&e.aff<0?(e.efrMulti=1+-1*e.aff*.2*1.5- -1*e.aff*.8*.75,e.critBoost=1.5):0!==t.rampageSlots&&"Brutal Strike"===document.getElementById("weaponRampage0").value&&e.aff<0&&(e.efrMulti=1+-1*e.aff*.25*2- -1*e.aff*.75*.75,e.critBoost=1.5),"Shot"===e.type&&(e.augPRM*=info.skills.Marksman[Marksman.selectedIndex][0],e.augEFR*=info.skills.Marksman[Marksman.selectedIndex][1]),e.NoSneak||(e.augPRM*=info.skills.SneakAttack[SneakAttack.selectedIndex].PRM,e.augEFR*=info.skills.SneakAttack[SneakAttack.selectedIndex].PRM),{...e}}function getCritEle(e,t=!0){return t?{PEM:info.skills.CriticalElement[CriticalElement.selectedIndex].PEM,EFE:1+(info.skills.CriticalElement[CriticalElement.selectedIndex].PEM-1)*e}:{PEM:1,EFE:1}}function getCritBoost(e,t=!0){return t?{PRM:info.skills.CriticalBoost[CriticalBoost.selectedIndex].PRM,EFR:1+(info.skills.CriticalBoost[CriticalBoost.selectedIndex].PRM-1)*e}:{PRM:1,EFR:1}}function damageCalculations(e){if(!1===e.Raw)[e.raw,e.rawNon,e.efr,e.rawCrit]=[0,0,0,0];else{e.raw=Math.min(~~(~~(~~e.baseRaw*e.BRM+e.BR+.1)*(document.getElementById("HuntingHornAttack").checked?1.1:1)),2600);const t=e.raw*e.PRM*getRawHZ(lower(e.type))*e.rawMV/1e4;e.rawNon=~~(.5+Math.max(1,t*e.augPRM)),e.efr=~~(.5+Math.max(1,t*e.augEFR*getCritBoost(e.aff,e.Crit).EFR)),e.rawCrit=~~(.5+Math.max(1,t*e.augPRM*getCritBoost(e.aff,e.Crit).PRM))}if(Object.prototype.hasOwnProperty.call(e,"NoEleBuff")&&!0===e.NoEleBuff)[e.ele,e.eleNon,e.efe,e.eleCrit]=[e.baseEle,e.baseEle,e.baseEle,e.baseEle];else if(!1===e.Ele||"None"===e.eleType&&!/BowGun/.test(weaponType.value))[e.ele,e.eleNon,e.efe,e.eleCrit]=[0,0,0,0];else{e.eleAmmo=/BowGun/.test(weaponType.value)&&"None"!==e.eleType?1+e.raw/100:1,e.ele=~~(Math.min(e.baseEle*e.BEM+e.BE,365)*e.eleAmmo+.1);const t=e.ele*e.PEM*(getEleHZ(e.eleType)/100)*e.eleMV*e.augPEM;e.eleNon=~~(.5+Math.max(1,t)),e.efe=~~(.5+Math.max(1,t*getCritEle(e.aff,e.Crit).EFE)),e.eleCrit=~~(.5+Math.max(1,t*getCritEle(e.aff,e.Crit).PEM))}return{...e}}const sharpnessReduction=e=>1/(1-e);function gunlanceShelling(e,t,n,o){const l=new RegExp(`${getWeaponMR().shellingType} Lv${getWeaponMR().shellingLevel}`);let a=1,s=1;Object.entries(getAttacks()).forEach(((o,i)=>{if(l.test(o[0])){a=~~(o[1].rawMV*info.skills.Bombardier[document.getElementById("Bombardier").selectedIndex][0]*info.skills.Artillery[Artillery.selectedIndex].BRM),s=~~(o[1].rawMV*info.skills.Bombardier[document.getElementById("Bombardier").selectedIndex][1]*info.skills.Artillery[Artillery.selectedIndex].BRM);const l=["replaceME",o[0],0,`${a} / ${a}`,`${o[1].baseEle} / ${o[1].baseEle}`,`${(a+o[1].baseEle)*(o[1].ticsPer+1)} / ${(a+o[1].baseEle)*(o[1].ticsPer+1)}`,s,o[1].baseEle,(s+o[1].baseEle)*(o[1].ticsPer+1)];e.push(l),t[0]+=0,t[1]+=a*timesUsed(i+27),t[2]+=a*timesUsed(i+27),t[3]+=o[1].baseEle*timesUsed(i+27),t[4]+=o[1].baseEle*timesUsed(i+27),t[5]+=(a+o[1].baseEle)*(n.ticsPer+1)*timesUsed(i+27),t[6]+=(a+o[1].baseEle)*(n.ticsPer+1)*timesUsed(i+27),t[7]+=(s+o[1].baseEle)*(n.ticsPer+1)*timesUsed(i+27)}})),/Inputs|inputButton/.test(window?.event?.target.className)||buildDamageTable(e,"dps",o),c0.innerHTML=`${formatNumbers(t[0])}`,d0.innerHTML=`${formatNumbers(t[1])} / ${formatNumbers(t[2])}`,e0.innerHTML=`${formatNumbers(t[3])} / ${formatNumbers(t[4])}`,f0.innerHTML=`${formatNumbers(t[5])} / ${formatNumbers(t[6])}`,g0.innerHTML=`${formatNumbers(t[7])}`}function buildDamageTable(e,t){const n=document.getElementById("ammoTable").style.display,o=document.getElementById("dpsTable").style.display,l=/gray/.test(document.getElementById("filterCombo").className)?document.querySelectorAll(".a"):document.querySelectorAll(".a:not(.gray)");let a=0;const s=document.querySelector(`#${t}Head`),i=document.querySelector(`#${t}Body`),r=document.createElement("table"),c=document.createElement("thead");/BowGun/.test(weaponType.value)&&"stats"!==t?c.className="tableRowRanged":"stats"!==t&&(c.className="tableRowMelee"),c.id=`${t}Head`;const u=document.createElement("tr"),d=document.createElement("tbody");d.id=`${t}Body`;if(e.splice(0,1)[0].forEach((e=>{const t=document.createElement("th"),n=document.createTextNode(e);t.appendChild(n),u.appendChild(t)})),c.appendChild(u),s.replaceWith(c),e.forEach((e=>{const n=document.createElement("tr");/BowGun/.test(weaponType.value)&&"stats"!==t?n.className="tableRowRanged":"stats"!==t&&(n.className="tableRowMelee"),Object.values(e).forEach((e=>{if("replaceME"===e)if(document.getElementById("previousWeaponType").value===weaponType.value&&l.length>0&&(window?.event?.target===dropWeapon&&"ChargeBlade"!==weaponType.value||window?.event?.target!==dropWeapon)&&"BowChargePlus"!==window?.event?.target.id&&("Bow"===weaponType.value&&document.getElementById("previousWeapon").value===dropWeapon.value||"Bow"!==weaponType.value))n.appendChild(l[a]),++a;else{const e=document.createElement("td"),t=document.createElement("input");t.type="Number",t.className=`Combo skill ${a}`,t.Max=20,"Bow"===weaponType.value&&document.getElementById("previousWeapon").value!==dropWeapon.value&&(comboTracker=[],updateComboDisplay()),0===a?(t.id="inputComboRepeat",t.Min=1,t.value=1,t.className="inputComboRepeat hitsOfSharpInputs inputs"):(t.id=a,t.className="inputs hitsOfSharpInputs",t.Min=0,t.value=0),++a,e.appendChild(t),n.appendChild(e)}else{const t=document.createElement("td"),o=document.createTextNode(e);t.appendChild(o),n.appendChild(t)}})),d.appendChild(n),i.replaceWith(d)})),r.setAttribute("id",`${t}Table`),d.className=/(BowGun)/.test(weaponType.value)?"rangedTable":"meleeTable",document.getElementById("damageContainer").className=/(BowGun)/.test(weaponType.value)?"rangedContainer":"meleeContainer",document.getElementById("ammoTable").style.display=n,document.getElementById("dpsTable").style.display=o,"stats"!==t&&"ammo"!==t){const[e,...n]=/BowGun/.test(weaponType.value)?[a,"a","b","c","d","e","f","g","h"]:[a,"a","b","c","d","e","f","g"];/BowGun/.test(weaponType.value)&&!/BowGun/.test(document.getElementById("previousWeaponType").value)?document.querySelectorAll("#comboCountContainer").forEach((e=>e.style.display="none")):!/BowGun/.test(weaponType.value)&&/BowGun/.test(document.getElementById("previousWeaponType").value)&&document.querySelectorAll("#comboCountContainer").forEach((e=>e.style.display="")),document.getElementById("previousWeapon").value=dropWeapon.value,document.getElementById("previousWeaponType").value=weaponType.value;for(let o=0;o<e;++o)n.forEach((async(e,n)=>{document.getElementById(`${t}Body`).children[o].children[n].id=e+o,document.getElementById(`${t}Body`).children[o].children[n].className=`${e} ${o}`}));weaponType.value.includes("BowGun")||document.querySelectorAll(`tbody#${t}Body>tr>td:nth-child(2)`).forEach(((e,t)=>{const n=document.createElement("td");n.innerHTML=`<button type="button" aria-pressed="false" id="${t}" class="inputButton dec"\n                    >&#8681</button><button type="button" aria-pressed="false" id="${t}" class="inputButton inc">&#8679</button><output class="label">${e.textContent}</output>`,n.id=`b${t}`,n.className=`b ${t} inputContainer`,e.replaceWith(n)}))}/blue/.test(filterCombo.className)&&document.querySelectorAll(".a").forEach(((e,t)=>{"none"===document.querySelectorAll(`.${t}`)[0].style.display&&document.querySelectorAll(`.${t}`).forEach((e=>e.style.display="none"))}))}const setSpawn=async()=>{document.querySelectorAll("#spawnArea>output").forEach((async e=>e.remove())),info.quest[dropQuest.value].target.forEach((e=>{e.name===dropMon.value&&e.spawn.forEach((e=>{const t=document.createElement("output");t.textContent=`Spawn Area ${e.block} ${e.lot}%`,document.getElementById("spawnArea").append(t)}))}))};function monChartold(){if(setSpawn(),""!==dropQuest.value){let e=[];const t=/Bow/.test(weaponType.value)?"shot":"H"===weaponType.value[0]?"blunt":"sever",n=["Hit Zone","Sever","Blunt","Shot","Fire","Water","Thunder","Ice","Dragon"],o=document.createElement("table"),l=document.querySelector("#monTable"),a=document.createElement("tr");n.forEach((e=>{const t=document.createElement("th"),n=document.createTextNode(e);t.appendChild(n),a.appendChild(t)})),o.appendChild(a),e=Object.entries(info.monster[dropMon.value].parts).sort(((e,n)=>n[1][t]===e[1][t]&&"none"!==document.querySelector("#statsHead > tr > th:nth-child(4)").textContent?n[1][lower(document.querySelector("#statsHead > tr > th:nth-child(4)").textContent)]-e[1][lower(document.querySelector("#statsHead > tr > th:nth-child(4)").textContent)]:n[1][t]-e[1][t])),e.forEach((e=>{const t=document.createElement("tr"),n=[`${e[1].part} ${e[1].state}`].concat(Object.values(e[1]).splice(3,8));for(let e=0;e<9;++e){const o=document.createElement("td");0!==e&&(n[e]=WaterBlight.checked&&/1|2|3/.test(e)?Math.min(100,~~(Math.max(n[e],.63*n[e]+22.2)+3)):+n[e],+n[e]<14?o.setAttribute("class","F"):+n[e]<15?o.setAttribute("class","C"):+n[e]<45?o.setAttribute("class","B"):+n[e]<65?o.setAttribute("class","A"):+n[e]>=65&&o.setAttribute("class","S"),n[e]=~~n[e]);const l=document.createTextNode(n[e]);o.appendChild(l),t.appendChild(o)}o.appendChild(t)})),o.setAttribute("id","monTable"),l.replaceWith(o),Object.values(document.getElementById("monTableContainer").children).forEach((e=>{Object.values(e.children).forEach((e=>{e.className="tableRow"}))}))}}function monChart(){if(setSpawn(),""!==dropQuest.value){let e=[];const t=/Bow/.test(weaponType.value)?"shot":"H"===weaponType.value[0]?"blunt":"sever",n=["Hit Zone","Sever","Blunt","Shot","Fire","Water","Thunder","Ice","Dragon"],o=document.createElement("table"),l=document.querySelector("#monTable");e=Object.entries(info.monster[dropMon.value].parts).sort(((e,n)=>n[1][t]===e[1][t]&&"none"!==document.querySelector("#statsHead > tr > th:nth-child(4)").textContent?n[1][lower(document.querySelector("#statsHead > tr > th:nth-child(4)").textContent)]-e[1][lower(document.querySelector("#statsHead > tr > th:nth-child(4)").textContent)]:n[1][t]-e[1][t]));const a=document.createElement("tr");n.forEach((e=>{const t=document.createElement("th"),n=document.createTextNode(e);t.appendChild(n),a.appendChild(t)})),o.appendChild(a),e.forEach((e=>{const t=[`${e[1].part} ${e[1].state}`].concat(Object.values(e[1]).splice(3,8)),n=document.createElement("tr");for(let e=0;e<9;++e){const o=document.createElement("td");0!==e&&(t[e]=WaterBlight.checked&&/1|2|3/.test(e)?Math.min(100,~~(Math.max(t[e],.63*t[e]+22.2)+3)):+t[e],+t[e]<14?o.setAttribute("class","F"):+t[e]<15?o.setAttribute("class","C"):+t[e]<45?o.setAttribute("class","B"):+t[e]<65?o.setAttribute("class","A"):+t[e]>=65&&o.setAttribute("class","S"),t[e]=~~t[e]);const l=document.createTextNode(t[e]);o.appendChild(l),n.appendChild(o)}o.appendChild(n)})),o.setAttribute("id","monTable"),l.replaceWith(o)}}function classChange(){if(Object.keys(info)){switch(document.getElementsByClassName("inputs").length>0&&comboReset(),weaponType.value){case"DualBlades":info.skills.Burst=info.skills.BurstDualBlades;break;case"Bow":info.skills.Burst=info.skills.BurstBow;break;case"LightBowGun":case"HeavyBowGun":info.skills.Burst=info.skills.BurstBowGun;break;default:info.skills.Burst=info.skills.BurstStandard}info.skills.Bombardier=/Gun|Charge/.test(weaponType.value)?info.skills.BombardierSource[weaponType.value]:[],document.querySelectorAll(`.skill:not(.${weaponType.value})`).forEach((e=>e.selectedIndex=0)),document.querySelectorAll(".classSpecific").forEach((e=>{e.style.display="",e.parentElement.style.display="",e.className.includes(weaponType.value)?"BUTTON"===e.tagName||"TABLE"===e.tagName||"DIV"===e.tagName?e.style.display="":e.parentElement.style.display="":"BUTTON"===e.tagName||"TABLE"===e.tagName||"DIV"===e.tagName?e.style.display="none":e.parentElement.style.display="none"})),document.querySelectorAll("div").forEach((e=>{Object.values(e.children).some((t=>e.childElementCount<=3&&"SELECT"===t.tagName&&"none"!==e.style.display))&&e.classList.add("dropContainer")})),document.getElementById("weaponId").innerHTML="",document.getElementById("weaponId").innerHTML=weaponType.value,"ChargeBlade"===weaponType.value&&meleeElements()}}function meleeElements(){"Impact Phial"===getWeaponMR().phialType?(document.getElementById("impShieldCharge").parentNode.style='display:"',document.getElementById("eleShieldCharge").parentNode.style="display:none",document.getElementById("eleShieldCharge").selectedIndex=0):"Element Phial"===getWeaponMR().phialType&&(document.getElementById("impShieldCharge").parentNode.style="display:none",document.getElementById("impShieldCharge").selectedIndex=0,document.getElementById("eleShieldCharge").parentNode.style='display:""')}function resetSkills(){document.querySelectorAll("label.check").forEach((e=>e.checked=!1)),document.querySelectorAll(".skill").forEach((e=>e.selectedIndex=0))}function toggleAmmoTables(){document.getElementById("dpsTable").style.display=document.getElementById("dpsTable").style.display.includes("none")?"''":"none",document.getElementById("ammoTable").style=dpsTable.style.display.includes("none")?'""':"none"}function calculateAmmoFrames(e){let t=/Sub-Lv|Explosion| Procs|\(RF\+\d\)/g.test(e.attackName)?e.attackName.replace(/Sub-| Explosion| \(RF\+\d\) Procs| Procs| \(RF\+\d\)/g,""):e.attackName;t=/(?<!Lv)\d/.test(t)?`${t.slice(0,t.length-1)}Lv${t.slice(-1)}`:t;const n={};n.ammoIncrease=info.ammo.AmmoUp[t][AmmoUp.selectedIndex],n.recoilSpeed=info.ammo.recoil[t][Math.max(0,Math.min(5,e.recoil-1+document.getElementById("RecoilDown").selectedIndex+(info.skills.BowgunBarrel[document.getElementById("BowgunBarrel").selectedIndex??0].Silencer>0?document.getElementById("Tune-Up").selectedIndex+info.skills.BowgunBarrel[document.getElementById("BowgunBarrel").selectedIndex??0].Silencer:0)-(document.getElementById("CriticalFirePower").selectedIndex>0?2:0)))],n.recoilSpeed=/\(RF\+\d\)/.test(e.attackName)?`${n.recoilSpeed} ${e.attackName.match(/\(RF\+\d\)/)[0]}`:n.recoilSpeed,n.recoilFrames=info.ammo.recoil.frames[n.recoilSpeed],n.reloadSpeed=info.ammo.reload[t][Math.max(0,Math.min(8,e.reload+document.getElementById("ReloadSpeed").selectedIndex+info.skills.BowgunBarrel[document.getElementById("BowgunBarrel").selectedIndex??0].reload+(0===document.getElementById("BowgunBarrel")?.selectedIndex&&document.getElementById("Tune-Up").selectedIndex>0?1:0)-(document.getElementById("ElementalReload").selectedIndex>0?2:0)))],n.reloadFrames=info.ammo.reload.frames[n.reloadSpeed],n.clipSize=e.clipSize[e.isUsed]+n.ammoIncrease,n.spareShot=info.skills.SpareShot[SpareShot.selectedIndex]+Number(spareAdjust.value),/(?<!snipe.*)explosion/.test(t)&&document.getElementById("Bombardier").selectedIndex>0&&(n.spareShot+=info.skills.Bombardier[t.match(/Sticky|Wyvern/)[0]][2]);return n.shotsPerMinBase=shotsCheck(n.recoilFrames/30,n.reloadFrames/30,e.clipSize[e.isUsed],60),n.shotsPerMin=shotsCheck(n.recoilFrames/30,n.reloadFrames/30,n.clipSize,60,100/n.spareShot),n.shotsPerGain=`${Number.parseFloat(100*(n.shotsPerMin/n.shotsPerMinBase-1)).toFixed(2)}%`,n.ticsAdjust=e.ticsPer+1,/Pierce Lv|Pierce [1-3]/.test(t)?n.ticsAdjust*=JSON.parse(pierceAdjust.value)[0]:/Pierc/.test(t)&&(n.ticsAdjust*=JSON.parse(pierceAdjust.value)[1]),n}function comboReset(){document.getElementsByClassName("inputs").length&&(/BowGun/.test(document.getElementById("previousWeaponType").value)||""===document.getElementById("previousWeaponType").value||(document.querySelectorAll(".comboHits").forEach((e=>e.remove())),document.querySelectorAll("#dpsBody>tr:nth-child(1)>td:nth-child(n+3)").forEach((e=>e.value=0)),document.querySelectorAll(".inputs").forEach((e=>e.value=0)),document.querySelectorAll(".inputComboRepeat").forEach((e=>e.value=1)),comboTracker=[]))}function filterTableForComboAttacks(){document.querySelectorAll(".inputs").forEach(((e,t)=>{/blue/.test(filterCombo.className)&&("0"===e.value||e.style.display.includes("none"))?document.getElementsByClassName([t]).style.display="none":document.getElementsByClassName([t]).style.display="''"}))}function increaseComboCount(e){Number(document.querySelectorAll(".inputs")[e?.target.id].value)<20&&(++document.querySelectorAll(".inputs")[e?.target.id].value,dataCompile())}function decreaseComboCount(e){("0"===e?.target.id&&Number(document.querySelectorAll(".inputs")[e?.target.id].value)>1||Number(e?.target.id)>0&&Number(document.querySelectorAll(".inputs")[e?.target.id].value)>0)&&(--document.querySelectorAll(".inputs")[e?.target.id].value,dataCompile())}function saveState(e=[[],[],[],[],[],[]]){document.getElementsByTagName("select").forEach((t=>{e[0].push(t.selectedIndex)})),document.querySelectorAll("input.check").forEach((t=>{e[1].push(t.checked)})),document.getElementsByClassName("inputs").forEach((t=>{e[2].push(t.value)})),e[3].push(comboTracker),document.getElementsByClassName("scroll").forEach((t=>{e[4].push(t.className)})),e[5]="",document.querySelectorAll("output.augLabel").forEach((t=>e[5]+=t.textContent));const t=document.createElement("input");return t.setAttribute("value",JSON.stringify(e)),t.select(),t.setSelectionRange(0,99999),navigator.clipboard.writeText(t.value),e}function loadState(e,t=!1,n=window.event){const o=document.querySelectorAll("select");o[0].selectedIndex=e[0][0],classChange(),weaponSelect();for(let t=0;t<e[5].length;t++)document.querySelectorAll("output.augLabel")[t].textContent=e[5][t];o[3].selectedIndex=e[0][3],rampageSelect(),o[80].selectedIndex=e[0][document.querySelectorAll("select").length-10],document.getElementById("dropQuest").selectedIndex=1,partSelect(),healthSelect(),document.querySelectorAll("select").forEach(((t,n)=>{0!==n&&3!==n&&n!==document.querySelectorAll("select").length-10&&(t.selectedIndex=e[0][n])})),document.querySelectorAll("input.check").forEach(((t,n)=>{t.checked=e[1][n]})),document.querySelectorAll(".inputs").forEach(((t,n)=>{t.value=e[2][n]})),document.querySelectorAll(".scroll").forEach(((t,n)=>{t.className=e[4][n]})),info.skills.MailofHellfire=document.querySelectorAll("#redScroll").classList.contains("invis")?info.skills.MailofHellfireSource.blue:info.skills.MailofHellfireSource.red,info.skills.Dereliction=document.querySelectorAll("#redScroll").classList.contains("invis")?info.skills.DerelictionSource.blue:info.skills.DerelictionSource.red,[...comboTracker]=e[3][0],document.querySelectorAll("input:not(comboRepeat)").forEach((e=>{if(e.value>0){let t=document.querySelectorAll(".inputs")[e.id]?.value??0-timesUsed(e.id);for(;t>0;)comboTracker.push(e.id),--t;for(;t<0;)comboTracker.splice(comboTracker.lastIndexOf(e.id),1),++t}})),updateComboDisplay()}function weaponTypeSelect(){populateDropDowns(weaponTypes,weaponType)}function weaponSelect(){Object.values(dropWeapon.children).forEach((e=>e.remove()));let e=[];e=weaponFilter.className.includes("blue")?Object.entries(info[weaponType.value].weapons).filter((e=>e[1].rampageSlots>0&&e[1].baseRaw>=290)):Object.values(info[weaponType.value].weapons),e.forEach((e=>{const t=document.createElement("option");t.value=e[0],t.textContent=e[1].weapon,dropWeapon.append(t)}))}function rampageSelect(){const e=[],[...t]=getWeaponMR().decos;if(t.forEach(((n,o)=>{n>0&&(e.push(o+1),--n),t[o-1]>1?e.push(o):t[o+1]>1?(e.push(o+2),--t[o+1]):t[o-2]>2?(e.push(o-1),--t[o-2]):t[o+2]>2&&(e.push(o+3),--t[o+2])})),setDecoDisplay("weapon",e.reverse()),document.querySelectorAll("#weaponRampage>*").forEach((e=>e.style.display="none")),document.getElementById("weaponRampage0").style.display="",getWeaponMR().rampageSlots){const e=[];document.getElementById("rampImg").src=document.getElementById("rampImg").src.replace(/ramp\d/,`ramp${getWeaponMR().rampageSlots+(Number(document.querySelector("output.rampageAug").value)>0?1:0)}`),Object.keys(info.rampage.rampageDecos).forEach((t=>{Number(t.slice(-1))<=getWeaponMR().rampageSlots+(Number(document.querySelector("output.rampageAug").value)>0?1:0)&&e.push(info.rampage.rampageDecos[t])})),populateDropDowns(e,document.getElementById("weaponRampage0"))}else document.querySelectorAll("#weaponRampage>*").forEach((e=>e.selectedIndex=0)),document.querySelectorAll("#weaponRampage>*").forEach((e=>e.style.display="none")),document.getElementById("weaponRampage0").style.display="",/Rampage/.test(getWeaponMR().weapon)?info.rampage[getWeaponMR().weapon].Rampage.forEach(((e,t)=>{document.querySelector("#weaponRampage").children[t].style.display="",populateDropDowns(Object.values(e),document.querySelector("#weaponRampage").children[t])})):getWeaponMR().rampage.forEach((e=>{const t=document.createElement("option");t.value=info.rampage.keys2[e],t.textContent=info.rampage.keys2[e],document.getElementById("weaponRampage0").append(t)}))}function populateDropDowns(e,t,n=e){t?.childElementCount&&Object.values(t.children).forEach((async e=>e.remove())),e.forEach((async(e,o)=>{const l=document.createElement("option");l.value=n[o],l.textContent=e,t.append(l)}))}function monsterSelect(){populateDropDowns(Object.keys(info.monster),dropMon),dropMon.selectedIndex=Object.keys(info.monster).indexOf("Toadversary")}document.querySelectorAll("select.demon").forEach((e=>{e.addEventListener("change",(e=>{e?.target.selectedIndex>0&&(document.querySelectorAll(`.demon:not(#${e?.target.id})`)[0].selectedIndex=0,document.querySelectorAll(`.demon:not(#${e?.target.id})`)[1].selectedIndex=0)}))})),document.querySelectorAll(`#${dropWeapon.id}, #${weaponType.id}`).forEach((e=>{e.addEventListener("change",(()=>{"ChargeBlade"===weaponType.value&&classChange()}))})),document.querySelectorAll(`#${dropWeapon.id}, #${weaponType.id}`).forEach((e=>{e.addEventListener("change",(()=>{if("Bow"===weaponType.value){document.querySelectorAll("#BowCoating").forEach((e=>e.remove()));const e=[];getWeaponMR().coatings.forEach((t=>{const n=document.createElement("option");n.textContent=t,document.querySelectorAll("#BowCoating").append(n),e.push(info.skills[`${t}`])})),info.skills.BowCoating=e}}))})),document.addEventListener("keypress",(e=>{e.key===["b","u","i","l","d"][Math.min(4,buildKeys)]&&++buildKeys<4||(buildKeys<4?buildKeys=0:/0-9/.test(e.key)?armorCount+=+e.key:"Enter"===e.key&&(getSetBuilds(Math.max(Math.min(0===armorCount?7:armorCount,15),4)),armorCount=0,buildKeys=0))})),document.addEventListener("keypress",(e=>{if(!(e.key===["t","e","s","t"][Math.min(3,testKeyCount)]&&++testKeyCount<3))if("Enter"===e.key&&testKeyCount>=3)build("f"!==armorCount),armorCount="",testKeyCount=0;else{if(/t|f/.test(e.key)&&testKeyCount>=3)return void(armorCount=e.key);if(testKeyCount<3)return void(testKeyCount=0)}})),document.getElementById("BowChargePlus").addEventListener("change",(()=>{comboReset(),updateComboDisplay()})),document.querySelectorAll(".scroll").forEach((e=>{"IMG"!==e.tagName&&"BUTTON"!==e.tagName||e.addEventListener("mousedown",(e=>{Object.values(document.querySelectorAll("img.scroll")).forEach((e=>{e.classList.toggle("vis"),e.classList.toggle("invis")})),document.querySelector("img#redScroll")?.classList.contains("invis")?(info.skills.MailofHellfire=info.skills.MailofHellfireSource.blue,info.skills.Dereliction=info.skills.DerelictionSource.blue):(info.skills.MailofHellfire=info.skills.MailofHellfireSource.red,info.skills.Dereliction=info.skills.DerelictionSource.red)}))})),document.getElementById("weaponFilter").addEventListener("click",(e=>{e.target.classList.toggle("blue","gray")})),document.querySelectorAll("input.check").forEach((e=>e.addEventListener("mousedown",(e=>{if(/DemonDrug/.test(e?.target.id)&&("DemonDrug"===e?.target.id?document.getElementById("MegaDemonDrug").checked=!1:document.getElementById("DemonDrug").checked=!1),"filterCombo"!==e?.target.id){if("WaterBlight"===e?.target.id){const e=dropHZ.selectedIndex;monChart(),dropHZ.selectedIndex=e}}else e?.target===filterCombo&&filterTableForComboAttacks()})))),document.getElementById("damageTable").addEventListener("mousedown",(e=>{e.target.classList.contains("inputButton")&&(e.target?.classList.contains("dec")?decreaseComboCount(e):increaseComboCount(e),document.getElementById("comboCountContainer")?.classList.remove("augInvis"))})),document.querySelectorAll(".augButton").forEach((e=>e.addEventListener("mousedown",(e=>{let t=0;const n=document.getElementsByClassName(`${e.target.className.split(" ")[0]} augLabel`)[0];document.querySelectorAll(".augLabel").forEach((e=>{t+=Number(e.value)})),e.target.className.includes("inc")&&t+Number(e?.target.value)<=8&&((Number(n.value)+Number(e?.target.value)<=8&&!e.target.classList.contains("elementalAug")||Number(n.value)<6)&&!e.target.classList.contains("rampageAug")||4!==Number(n.value))?(document.getElementById("weaponQurious").textContent=`Remaining Augments ${8-t-Number(e?.target.value)}/8`,n.value=Number(n.value)+Number(e?.target.value)):e.target.classList.contains("dec")&&Number(n.value)>0&&(document.getElementById("weaponQurious").textContent=`Remaining Augments ${8-t+Number(e?.target.value)}/8`,n.value=Number(n.value)-Number(e?.target.value)),/ampage/.test(e?.target.className)&&rampageSelect(),e.target.classList.contains("sharpnessAug")&&getComboHitsAndSetSharpness(),dataCompile(e)})))),document.getElementById("weaponFilter").addEventListener("click",(()=>{rampageSelect()}));const getEleHZ=e=>info.monster[dropMon.value].parts[dropHZ.selectedIndex][lower(e)];function getRawHZ(e){return void 0===info.monster[dropMon.value].parts[dropHZ.selectedIndex][lower(e)]?100:WaterBlight.checked?Math.min(100,~~(Math.max(info.monster[dropMon.value].parts[dropHZ.selectedIndex][lower(e)],.63*info.monster[dropMon.value].parts[dropHZ.selectedIndex][lower(e)]+22.2)+3)):info.monster[dropMon.value].parts[dropHZ.selectedIndex][lower(e)]}const getUsedAttacks=(e=weaponType.value)=>{let t={};if("InsectGlaive"===weaponType.value)return t=Object.fromEntries(Object.entries(info.InsectGlaive.attacks).filter((e=>!/Sever|Blunt|Kinsect|Dust|Powder|Mark/.test(e)))),{...t};if("ChargeBlade"===weaponType.value){const e="Impact Phial"===getWeaponMR().phialType?"Element Phial|Elemental Phial":"Impact Phial",n=new RegExp(`${e}`);return t=Object.fromEntries(Object.entries(info.ChargeBlade.attacks).filter((e=>!n.test(e)))),{...t}}if("Bow"===weaponType.value){let e="";const n=1===document.getElementById("BowChargePlus").selectedIndex&&getWeaponMR().baseCharge<4?getWeaponMR().baseCharge+1:getWeaponMR().baseCharge;getWeaponMR().bowShot.forEach(((t,o)=>{o<n&&(e+=`|Lv${t.match("[1-5]")[0]} ${t.match("Normal|Rapid|Pierce|Spread")[0]}`)}));const o=new RegExp([e.slice(1)]);let l=Object.entries(info.Bow.attacks).filter((e=>o.test(e[0])));return l=[].concat(Object.entries(info.Bow.attacks).splice(0,1),l),l=l.concat(Object.entries(info.Bow.attacks).splice(136)),t=Object.fromEntries(l),{...t}}if("Gunlance"===weaponType.value)return t=Object.fromEntries(Object.entries(info.Gunlance.attacks).splice(0,27)),{...t};if("LightBowGun"===weaponType.value||"HeavyBowGun"===weaponType.value){let e=info.ammo.keys.map(((e,t)=>e.filter((e=>"LightBowGun"===weaponType.value&&getWeaponMR().isRapidFire.includes(t+1)?/RF\+/.test(e):getWeaponMR().clipSize[t+1]>0&&!/RF\+/.test(e))))).toString().split(/,+/);return e=e.concat(Object.keys(info.ammo).filter((e=>"LightBowGun"===weaponType.value?/lbg|Wyvern Blast(?! before)/.test(e):/hbg|Wyverns/.test(e)))),t=Object.fromEntries(Object.entries(info.ammo).filter((t=>timesUsed(t[0],e)>0))),{...t}}return{...info[e].attacks}},getAttacks=(e=weaponType.value)=>({...info[e].attacks}),getWeapon=()=>info[weaponType.value].weapons[dropWeapon.selectedIndex].rampageSlots>0?getWeaponMR():getRampageSkills();function partSelect(){document.querySelectorAll("#dropHZ>option").forEach((e=>e.remove()));const e=[];info.monster[dropMon.value].parts.forEach((t=>{e.push([`${t.part} ${t.state}`])})),populateDropDowns(e,dropHZ)}function questSelect(){document.querySelectorAll("#HR>option").forEach((e=>e.remove())),document.querySelectorAll("#MR>option").forEach((e=>e.remove()));Object.values(info.quest).filter((e=>{if(e.target.some((e=>e.name===dropMon.selectedOptions[0].textContent)))return e})).forEach((e=>{e.target.forEach((async(t,n)=>{if(t.name===dropMon.value){const t=document.createElement("option");t.value=e.quest,t.textContent=e.quest,document.getElementById(e.rank).append(t)}}))})),updateQuest(document.querySelectorAll("#MR>option")?.length>0?document.querySelectorAll("#MR>option")[0].textContent:document.querySelectorAll("#HR>option")[0].textContent),document.querySelectorAll("MR>option")?.length?document.getElementById("MR")?.classList.remove("augInvis"):document.getElementById("MR")?.classList.add("augInvis"),document.querySelectorAll("HR>option")?.length?document.getElementById("HR")?.classList.remove("augInvis"):document.getElementById("HR")?.classList.add("augInvis")}function healthSelect(){let e=1;switch(document.getElementById("players").selectedOptions[0].value){case"1p":e=1;break;case"2p":e=1.35;break;case"3p":e=1.7;break;case"4p":e=2}info.quest[dropQuest.value].target.forEach((t=>{if(t.name===dropMon.value){populateDropDowns(t.hp.map((t=>t*e)),document.getElementById("health"))}}))}function isUnique(e,t,n){return n.indexOf(e)===t}function showMenu(){document.querySelectorAll(".menu").forEach((e=>e.classList.remove("augInvis")));let e=document.querySelectorAll("#MR>option").length;document.getElementById("MR").parentElement.classList.toggle("augInvis",e);let t=document.querySelectorAll("#HR>option").length;document.getElementById("HR").parentElement.classList.toggle("augInvis",t)}function updateQuest(e){document.getElementById("dropQuest").selectedOptions[0].value=e,document.getElementById("dropQuest").selectedOptions[0].textContent=e,document.getElementById("questDiv")?.classList.add("augInvis")}const capitalAll=e=>e.replace(/(?<!\w)\w/g,(e=>e.toUpperCase())),capital=(e,t=0)=>e[t].toUpperCase()+e.slice(1),lower=e=>e[0].toLowerCase()+e.slice(1);function shotsCheck(e,t,n,o=60,l=0){let a=0;a+=l;let s=0,i=0;for(;s<=o;){for(let t=0;t<n;++t)s+=e,i+=s<=o?1:0,i>=a&&0!==l&&l!==1/0&&(--t,a+=l);s+=t}return i}function getHealthPools(e=[[],[],[],[]]){return quest=info.quest.filter((e=>e.quest===dropQuest.value)),quest.target[dropMon.value].hp.forEach((t=>{e[0].push(t),e[1].push(~~(1.35*t)),e[2].push(~~(1.7*t)),e[3].push(~~(2*t))})),e}function resetSkillDescription(){if(""!==lastEvent){if(lastEvent===document.getElementById("BowCoating")&&"Bow"!==weaponType.value)return;let e=[];Object.values(lastEvent.children).some((e=>"OPTGROUP"===e.tagName))?(e=document.querySelectorAll(`${lastEvent.id}>*>*`),e.splice(-2),e.splice(0,0,lastEvent[0])):e=Object.values(lastEvent.children),e.forEach(((e,t)=>{let n="";if(lastEvent===BowCoating)n=getWeaponMR().coatings[t];else if(lastEvent===document.getElementById("BowgunBarrel"))n=["----","Long","Power","Silencer","Guard-Up"][t];else if(lastEvent===Dereliction)n=["----","Lv-1-1","Lv-1-2","Lv-1-3","Lv-2-1","Lv-2-2","Lv-2-3","Lv-3-1","Lv-3-2","Lv-3-3"][t];else{let e=t+0;"OPTGROUP"===lastEvent.children[1].tagName&&0!==t&&(e="Burst"===lastEvent.id&&t>=2?t-1:t%3==0?3:t%3),n="Burst"===lastEvent.id&&1===t?"Base Bonus":`Lv-${e}`}e.textContent=0===t?"----":n})),lastEvent=""}}function setSkillDescriptions(e){e.classList.contains("skill")&&(info.skills[e.id].forEach(((t,n)=>{let o;if(0!==n)if("RecoilDown"===e.id||"ReloadSpeed"===e.id)o=`${e.id.slice(0,6)} ${e.id.slice(6)} +${n}`;else if("AmmoUp"===e.id||"SpareShot"===e.id){o=`${n}: ${("AmmoUp"===e.id?["No Change","Lv2 & Ele Ammo","Lv3 & Dragon Ammo"]:["Spare Shot +5%","Spare Shot +10%","Spare Shot +20%"])[n-1]}`}else if("Marksman"===e.id)o=`${n}: ${["Chance 20% Raw  + 5% EFR +1%","Chance 20% Raw+10% EFR +2%","Chance 60% Raw  + 5% EFR +3% ","Chance 40% Raw+10% EFR +4%"][n-1]}`;else if("Bombardier"===e.id)o="HeavyBowGun"!==weaponType.value?`${n}: Raw +${info.skills.Bombardier[n][0]}% EFR +${info.skills.Bombardier[n][1]}`:["Bombardier","1: Raw + 10% EFR + 10%","2: Sticky+10% Wyvern+15%","3: Raw + 20% EFR + 16%","4: Raw + 25% EFR + 17%"][n];else if("BowgunBarrel"===e.id)o=["Barrels","Long: Raw + 5%","Power: Raw + 12.5%","Silencer: Recoil Down +1","Shield: Guard Up"][n];else if("CriticalFirePower"===e.id)o=["-","Normal +30% Spread +20% Pierce +10% Recoil -2"][n];else{let l="";if(t.BR>0||t.PRM>1||t.BRM>1){if(l="Raw",t.BR>0&&(l+=/\d\.?\d/.test(t.BR)?`+${t.BR}`:` + ${t.BR}`),t.BRM>1){const e=/\.[1-8]/.test(100*(t.BRM-1))?(100*(t.BRM-1)).toFixed(1):(100*(t.BRM-1)).toFixed(0);l+=/\d\.?\d/.test(e)?`+${e}%`:` + ${e}%`}if(t.PRM>1){const n=/\.[1-8]/.test(100*(t.PRM-1))?(100*(t.PRM-1)).toFixed(1):(100*(t.PRM-1)).toFixed(0);l+="CriticalBoost"===e.id&&/\d\.?\d/.test(n-25)?`+${n-25}%`:"CriticalBoost"===e.id?` + ${n-25}%`:/\d\.?\d/.test(n)?`+${n}%`:` + ${n}%`}}let a="";if(t.BE>0||t.PEM>1||t.BEM>1){if(a="Ele",t.BE>0&&(a+=/\d\.?\d/.test(t.BE)?`+${t.BE}`:` + ${t.BE}`),t.BEM>1){const e=/\.[1-8]/.test(100*(t.BEM-1))?(100*(t.BEM-1)).toFixed(1):(100*(t.BEM-1)).toFixed(0);a+=/\d\.?\d/.test(e)?`+${e}%`:` + ${e}%`}if(t.PEM>1){const e=/\.[1-8]/.test(100*(t.PEM-1))?(100*(t.PEM-1)).toFixed(1):(100*(t.PEM-1)).toFixed(0);a+=/\d\.?\d/.test(e)?`+${e}%`:` + ${e}%`}}const s=t.aff>0&&/\d\.?\d/.test(t.aff)?`Aff+${t.aff}`:t.aff>0?`Aff + ${t.aff}`:"";if(l=Object.prototype.hasOwnProperty.call(t,"Sharp")&&t.Sharp<1?`Sharp +${100*t.Sharp}%`:l,l=Object.prototype.hasOwnProperty.call(t,"Sharp")&&t.Sharp>1?`Sharp +${t.Sharp}`:l,l=""===l&&""===a&&""===s?"No Change":l,e===BowCoating){o=`${getWeaponMR().coatings[n]}: ${[l,a,s].join(" ")}`}else{let t=n+0;"OPTGROUP"===e.children[1].tagName&&0!==n&&(t="Burst"===e.id&&n>=2?n-1:n%3==0?3:n%3),o=`${t}: ${[l,a,s].join(" ")}`}}else o=e.id;document.getElementById(e.id)[n].textContent=o})),lastEvent=e)}function getStats(e){return e.getSkills.forEach((t=>{e.BRM*=t.BRM,e.BR+=t.BR,e.PRM*=t.PRM,e.BEM*=t.BEM,e.BE+=t.BE,e.PEM*=t.PEM,e.aff+=t.aff})),{...e}}function partSelector(){document.querySelectorAll("dropHZ>*").forEach(((e,t)=>{e.textContent===document.querySelector("#monTable > tr:nth-child(2) > td:nth-child(1)").textContent&&(document.getElementById("dropHZ").selectedIndex=t)}))}function formatNumbers(e){return e.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1,")}document.querySelectorAll(".buildSkills").forEach((e=>e.addEventListener("mousedown",(e=>{(""===lastEvent||lastEvent!==e?.target||e.target.className.includes("augment"))&&(""!==lastEvent&&resetSkillDescription(),e.target.classList.contains("skill")&&setSkillDescriptions(e?.target),"INPUT"===e.target.tagName&&e.target.className.includes("skillInput")&&(lastEvent=e.target))})))),document.querySelectorAll("select.skill").forEach((e=>e.addEventListener("change",(e=>{resetSkillDescription(),e?.target.blur()}))));const createSkillSelections=(e,t=0,n=!0)=>{if("Skill Selector"===e)return;if(null!==document.getElementById(`${e}Select`))return void document.getElementById("dropSkills").after(document.getElementById(`${e}Select`));const o=document.createElement("div"),l=document.createElement("label");l.className=`label ${e} skillInput`,l.textContent=e;const a=document.createElement("output");a.className=`skillInput ${e}`,a.setAttribute("max",info.types.maxDeco[e]),a.setAttribute("min","0"),a.textContent=`Lv-${t}`;const s=document.createElement("button");s.type="button",s.setAttribute("aria-pressed","false"),s.id=`${e}Dec`,s.className=`skillInput ${e} dec`,s.innerHTML+="&#8681";const i=document.createElement("button");i.type="button",i.setAttribute("aria-pressed","false"),i.id=`${e}Inc`,i.className=`skillInput ${e} inc`,i.innerHTML+="&#8679",o.appendChild(l),o.appendChild(a),o.appendChild(s),o.appendChild(i),o.id=`${e}Select`,document.getElementById("dropSkills").after(o)},getSkillSelects=()=>{document.querySelectorAll("select.skill").forEach((e=>{e.selectedIndex>0&&createSkillSelections(e.id,e.selectedIndex)}))};document.getElementById("dropSkills")?.addEventListener("change",(e=>{document.getElementById(e.target.value)?.className.includes("classSpecific")&&!document.getElementById(e.target.value)?.className.includes(weaponType.value)||createSkillSelections(e.target.value,info.types.maxDeco[e.target.value])})),Object.values(document.getElementsByClassName("inc qurious")).forEach((e=>e.addEventListener("mousedown",(e=>{document.getElementById(`${e.target.classList[0]}Qurious`).classList.remove("augInvis")})))),Object.values(document.getElementsByClassName("dec qurious")).forEach((e=>e.addEventListener("mousedown",(e=>{document.getElementById(`${e.target.classList[0]}Qurious`).classList.add("augInvis")})))),document.querySelector("#weaponSelects > button.weapon.dec").addEventListener("mousedown",(()=>{document.getElementById("augToggle").classList.add("augInvis")})),document.getElementById("skillSelect").addEventListener("mousedown",(e=>{if(e.target.classList.contains("skillInput")){const t=e.target.className.split(" ")[1];let n=+document.querySelector(`output.${t}`)?.textContent.match(/(?<=Lv-)\d/)[0];"BUTTON"===e.target.tagName&&(e.target.className.includes("dec")&&(0===n?e.target.parentElement.remove():document.querySelector(`output.${t}`).textContent="Lv-"+(n-=1)),e.target.className.includes("inc")&&(document.querySelector(`output.${t}`).textContent=`Lv-${n<info.types.maxDeco[t]?n+=1:n}`)),document.getElementById("chest")?.childElementCount}}));const addPoints=([e,t])=>{document.querySelector(`output.${e}`)?document.querySelector(`output.${e}`).textContent=`Lv-${document.querySelector(`output.${e}`)?.textContent.match(/(?<=Lv-)\d/)[0]+t}`:createSkillSelections(e,t)},getCurrentArmorSkills=(e={})=>(Object.keys(info.armor).forEach((t=>{Object.values(document.querySelectorAll(`#${t}Skills>output`)).forEach((t=>{const n=t.value?.split(" ")[0],o=+t.value.slice(-2);o&&(e[n]?e[n]+=o:e[n]=o)}))})),e),getCurrentSelectedSkills=(e={})=>(Object.values(document.querySelectorAll("select.armorDisplay,select.charm")).map((t=>{const n=t.selectedOptions[0].textContent?.slice(0,-3).trim(),o=+t.selectedOptions[0].textContent?.slice(-2);o>0&&(e[n]?e[n]+=o:e[n]=o)})),e),updateSelectedSkills=()=>{let e=getCurrentSelectedSkills();return e=getCurrentArmorSkills(e),document.querySelectorAll("#raw select").forEach((t=>t.selectedIndex=e[t.id]?Math.min(e[t.id],info.types.maxDeco[t.id]?info.types.maxDeco[t.id]:info.skills[t.id].length-1):0)),e},resetPoints=(e,t=0)=>{Object.values(document.querySelectorAll(`#${e.id}>select`)).forEach((e=>e.selectedIndex=-1)),getRemainingPoints(e)},hideShowMenu=e=>{const t=e.className.split(" ")[0];e.className.includes("inc")?document.getElementById(`${t}Qurious`)?.classList.remove("augInvis"):document.getElementById(`${t}Qurious`).classList.add("augInvis")},setCharmsAvailableDecoSlots=e=>{const t=document.getElementById(1==+e.id.slice(-1)?`${e.id.slice(0,-1)}2`:`${e.id.slice(0,-1)}1`);e.selectedOptions[0].textContent.slice(0,-3)===t.selectedOptions[0].textContent.slice(0,-3)&&(t.selectedIndex=0);const n=[],o=getGrade(t?.value,e.value);if(o!==document.getElementById(`${e.id.slice(0,6)}Decos`).value){switch(document.getElementById(`${e.id.slice(0,6)}Decos`).value=o,o){case"S":n.push(2,1);break;case"A":n.push(3,1);break;default:n.push(3,2)}setDecoDisplay(e.id.slice(0,6),n)}},getRemainingPoints=(e,t=0)=>{const n=e.id.slice(0,-7);t+=info.armor[n][document.getElementById(n).value].quriousPoints;for(let n=0;n<6;n++){const o=document.querySelectorAll(`#${e.id}>select.augment`)[n];t+ +o.value<0&&(o.selectedIndex=0,document.querySelectorAll(`#${e.id}>select.augmentType`)[n].selectedIndex=0),t+=+o.value}return e.firstElementChild.textContent=`Remaining Points ${t}/${info.armor[n][document.getElementById(n).value].quriousPoints}`,t},setArmorSkillsDisplay=(e=Object.keys(info.armor))=>{Object.values(e).forEach((e=>{if(""===e)return;const t=document.getElementById(e);if(t){const n=[],[...o]=info.armor[t.id][t.value].decos;o.forEach(((e,t)=>{e>0&&(n.push(t+1),--e),o[t-1]>1?n.push(t):o[t+1]>1?(n.push(t+2),--o[t+1]):o[t-2]>2?(n.push(t-1),--o[t-2]):o[t+2]>2&&(n.push(t+3),--o[t+2])})),n.reverse();const l=document.querySelectorAll(`#${e}Qurious>select.augmentType`),a=document.querySelectorAll(`#${e}Qurious>select.augment`),s=JSON.parse(JSON.stringify(info.armor[t.id][t.value].skills));for(let e=0;e<6;++e)if(a?.length>1&&a[e].selectedIndex>0&&(2===l[e].selectedIndex||4===l[e].selectedIndex)){const t=a[e].selectedOptions[0].textContent.match(/^\S+/)[0];s[t]?s[t]+=l[e].selectedIndex-3:s[t]=1}else if(l?.length>1&&a[e].selectedIndex>0&&3===l[e].selectedIndex){let t=a[e].selectedIndex,o=0,l=-1;for(;t>0&&l<3;)if(l<2&&!n[l+1]&&(n[l+1]=0),0!==o){if(1===o&&n[l]<4){const e=Math.min(t,4-n[l]);n[l]+=e,t-=e}++l}else 3==++l?(o=1,l=0):0===n[l]&&(++n[l],--t)}t.nextElementSibling.textContent="",Object.entries(s).forEach((e=>t.nextElementSibling.innerHTML+=`<img class="armorImg armorDeco rampage" src="./icons/skill.png"><output>${e[0].match(/^\S+/)[0]} +${e[1]}</output>`)),t.nextElementSibling.id=`${e}Skills`,setDecoDisplay(e,n)}}))},ChangeAugmentOptions=e=>{const t=e.classList.contains("augmentType")?e:e.previousElementSibling,n=e.classList.contains("augmentType")?e.nextElementSibling:e,o=e.parentElement.id.slice(0,-7),l=n.selectedIndex;for(;n.firstChild;)n.removeChild(n?.firstChild);const a=document.createElement("option");a.value=0,a.textContent=" ---- ",n.appendChild(a);const s=getRemainingPoints(e.parentElement);switch(t.value){case"-Def":for(let e=1;e<=5;e+=2){const t=document.createElement("option");t.value=e,t.textContent=e,n.appendChild(t)}break;case"-Skill":document.querySelectorAll(`#${o}Skills>output`).forEach((e=>{const t=document.createElement("option");t.value=10,t.textContent=`${e.textContent.split("\n")[0].split(" ")[0]} 10`,t.classList.toggle("augInvis",+e.textContent.slice(-2)<=0),n.appendChild(t)}));break;case"+Skill":const e=document.querySelectorAll(`#${o}Skills>output`);Object.entries(info.types.qurious).forEach((t=>{const o=document.createElement("option");o.value=-t[1],o.textContent=`${t[0]} -${t[1]}`,o.classList.toggle("augInvis",t[1]>s||e.length>=5&&!Object.values(e).some((e=>e.textContent.includes(t[0])))),n.appendChild(o)}));break;case"+Slots":for(let e=1;e<=3;e++){const t=-6*e,o=document.createElement("option");o.value=t,o.textContent=`${e} Slot ${t}`,o.classList.toggle("augInvis",s<t),n.appendChild(o)}}e.className.includes("Type")?n.selectedIndex=0:n.selectedIndex=l},updateAugmentOptions=e=>{const t=e.classList.contains("augmentType")?e:e.previousElementSibling,n=e.classList.contains("augmentType")?e.nextElementSibling:e,o=e.parentElement.id.slice(0,-7),l=getRemainingPoints(n.parentElement),a=Object.values(document.querySelectorAll(`#${o}Skills>output`));switch(t.value){case"-Skill":a.forEach(((e,t)=>{const o=+e.textContent.split(" ")[1]<=0&&t+1!==n.selectedIndex;n.children[t+1]?.classList.toggle("augInvis",o),n.children[t+1].disabled=o}));break;case"+Slots":for(let e=1;e<=3;e++){let t=l-(isNaN(+n.value)?0:+n.value)<[0,6,12,18][e];n.children[e].classList.toggle("augInvis",t),n.children[e].disabled=t}break;case"+Skill":Object.values(n.children).forEach((e=>{let t=+e.value+(l-(isNaN(+n.value)?0:+n.value))>=0&&(a.length<5||a.some((t=>t.textContent.includes(e.textContent.split(" ")[0]))));e.classList.toggle("augInvis",!t),e.disabled=!t}))}},setDecoDisplay=(e,t)=>{const n=document.createElement("section");n.className="decoDisplay";const o=document.querySelector(`#${e}Decos`),l=Object.values(o?.children).map((e=>e.selectedIndex));t.forEach(((e,t)=>{const o=document.createElement("img");o.classList.add("armorImg","armorDeco",`lvl${e}`),o.src=`./icons/Lvl${e}.png`,n.appendChild(o);const l=document.createElement("select");l.classList.add("armorDisplay");const a=document.createElement("option");a.textContent=" ---- ",l.appendChild(a);let s=4;for(;--s>-1;){const t=document.createElement("Option");t.classList.add("optTitle"),t.textContent=`Lvl-${s+1} Decos`,e<=s&&(t.style.display="none",t.disabled=!0),l.appendChild(t),Object.values(info.types.decoLevels[s]).forEach((t=>{const n=document.createElement("option");n.value=`${s+1}`,n.textContent=`${Object.keys(t)} +${Object.values(t)}`,e<=s&&(n.style.display="none",n.disabled=!0),l.appendChild(n)}))}n.appendChild(l)})),o?.replaceWith(n),n.id=`${e}Decos`,Object.values(document.querySelector(`#${e}Decos`).children).map(((e,t)=>{e.childElementCount&&l[t]&&(e.selectedIndex="none"!==e.children[l[t]]?.style.display?l[t]:0)}))},getDrugIndex=e=>Object.values(document.getElementById("comboCountDisplay").children).indexOf(e);document.addEventListener("dragstart",(e=>{var t;e.dataTransfer.setData("text/plain",(t=e.target,Object.values(document.getElementById("comboCountDisplay").children).indexOf(t)))})),document.addEventListener("dragover",(e=>{e.preventDefault(),e.dataTransfer.dropEffect="move"})),document.addEventListener("drop",(e=>{e.preventDefault();const t=e.dataTransfer?.getData("text/plain");"comboCountDisplay"===e.target.parentElement.id&&e.target.before(Object.values(document.getElementById("comboCountDisplay")?.children)[+t]),comboTracker=Object.values(comboCountDisplay.children).map((e=>e.className.split(" ")[0]))}));const validator=(e,t=0)=>{const n=e.id.slice(0,-7);setArmorSkillsDisplay([n]);Object.values(document.querySelectorAll(`#${n}Skills>output`)).map((e=>{+e.textContent.slice(-2)<0&&Object.values(document.querySelectorAll(`#${n}Qurious>select.augment`)).filter((t=>!t.selectedOptions[0]?.textContent.includes(e.textContent.slice(0,-4))))})).forEach((e=>{e&&(e[e.length-1].selectedIndex=-1,e[e.length-1].previousSibling.selectedIndex=-1,setArmorSkillsDisplay([n]))})),t+=info.armor[n][document.getElementById(n).value].quriousPoints;for(let n=0;n<6;n++){const o=document.querySelectorAll(`#${e.id}>select.augment`)[n];t+ +o.value<0&&(o.selectedIndex=-1,document.querySelectorAll(`#${e.id}>select.augmentType`)[n].selectedIndex=-1),t+=+o.value}return e.firstElementChild.textContent=`Remaining Points ${t}/${info.armor[n][document.getElementById(n).value].quriousPoints}`,t};Object.values(document.querySelectorAll(".augmentType, .augment")).forEach((e=>e.addEventListener("change",(e=>{e.stopPropagation(),e.target?.className.includes("augment")&&(e.target.classList.contains("augmentType")?ChangeAugmentOptions(e.target):updateAugmentOptions(e.target),validator(e.target.parentElement),setArmorSkillsDisplay([e.target.parentElement.id.slice(0,-7)]),console.log("augChange"))})))),document.querySelectorAll("button").forEach((e=>e.addEventListener("mousedown",(e=>dataCompile(e))))),document.querySelectorAll("select,input").forEach((e=>e.addEventListener("change",(e=>dataCompile(e)))));const resetAugmentSelections=e=>{document.querySelectorAll(`#${e}Qurious select`).forEach((e=>e.selectedIndex=e.classList.contains("augmentType")?0:-1)),updateSelectedSkills()};document.querySelectorAll("select.augment,select.augmentType").forEach((e=>{e.addEventListener("mousedown",(e=>{if(!e.target.classList.contains("augmentType")){let t=e.target.selectedIndex;updateAugmentOptions(e.target),t>e.target.selectedIndex&&e.target.selectedIndex}e.target.previousElementSibling?.selectedIndex<1?Object.values(e.target.children).forEach((e=>e.disabled=!0)):Object.values(e.target.children).forEach((e=>e.disabled=!1))}))})),document.querySelectorAll("select.armor").forEach((e=>{e.addEventListener("change",(e=>{const t=e.target.className.split(" ")[0];document.querySelector(`section#${t}Qurious>output.currentPoints`).textContent=`Remaining Points ${info.armor[t][e.target.value].quriousPoints}/${info.armor[t][e.target.value].quriousPoints}`,setArmorSkillsDisplay([t])}))})),document.querySelectorAll("input, button:not(#setReturn button), select:not(#setReturn select)").forEach((e=>{e.addEventListener("change",(()=>updateSelectedSkills(e)))})),document.querySelector("#weaponSelects>#Qurious")?.addEventListener("mousedown",(()=>{document.getElementById("augToggle")?.classList.remove("augInvis")})),setTimeout((function(){document.querySelectorAll("option").forEach((e=>{e.disabled="none"===e.style.display}))}),100),weaponType.addEventListener("onchange",(()=>{weaponSelect(),classChange(),rampageSelect(),monChart(),partSelector(),comboReset()})),dropWeapon.addEventListener("change",(()=>rampageSelect())),document.querySelectorAll("select.menu").forEach((e=>e.addEventListener("change",(e=>{updateQuest(e.target.selectedOptions[0].value),monChart(),healthSelect()})))),document.getElementById("players")?.addEventListener("change",(()=>healthSelect())),dropQuest.addEventListener("change",(()=>{monChart(),healthSelect()})),dropMon.addEventListener("change",(()=>{partSelect(),questSelect(),healthSelect(),monChart()})),document.querySelector("#questButton").addEventListener("mousedown",(()=>showMenu())),Object.values(document.querySelectorAll("#searchAgain, #startSearch")).forEach((e=>e.addEventListener("change",(e=>getSetBuilds(7))))),Object.values(document.querySelectorAll(".armorImg+.charm")).forEach((e=>e.addEventListener("change",(e=>setCharmsAvailableDecoSlots(e.target))))),document.querySelector(".extraSkills").addEventListener("mousedown",(e=>{"BUTTON"===e.target.tagName&&addPoints(e.target.textContent.split(" +"))})),document.querySelector(".grid").addEventListener("mousedown",(e=>{if("BUTTON"===e.target.tagName){let e=document.querySelector("#setReturn > div.grid > div:nth-child(1) > button").parentElement,t=Object.values(document.querySelector("#setReturn > div.grid > div:nth-child(1) > button").parentElement.parentElement.children).indexOf(e)+1;equipBuild(t)}}));let newSkills={},totalCombos=0,timer=0,GlobalMap=new Map,workers=[],workerCount=0,GlobalFragment=document.createDocumentFragment(),totalSets=0;const getUsedDecoArr=e=>{const t=[[],[],[],[]];for(let n=0;n<e.length;n++)if(e[n][2]?.includes("Slot lvl")){const o=+e[n][2].slice(-1);for(;--e[n][3]>=0;)t[o-1].push(e[n][0])}return t},setUsedDecorations=e=>{document.querySelectorAll(".decoDisplay>img.armorDeco").forEach((t=>{e[t.className[22]-1]&&Object.values(t.nextElementSibling.children).some(((n,o)=>{if(+n.value<=t.className[22]&&n.textContent?.includes(e[t.className[22]-1][0]))return t.nextElementSibling.selectedIndex=o,e[t.className[22]-1].shift()}))}))},setAugmentSelect=(e,t)=>{for(let n=0;n<e.childElementCount;n++)if(e.children[n].textContent.includes(t)){e.selectedIndex=n,setArmorSkillsDisplay([e.id]);break}},setCharmSelects=e=>{const t=document.querySelector(`div.grid > div:nth-child(${e}) > select`).value.replace(/\//,"&").replace(/: /g," +").split(" & "),n=document.querySelectorAll("select.charm");for(let e=0;e<t.length;e++){const o=n[e];for(let n=0;n<o.options.length;n++)if(o.options[n].text===t[e]){o.selectedIndex=n,setCharmsAvailableDecoSlots(o);break}}},updateSelectedSkillsDisplay=()=>{const e=getCurrentSelectedSkills(),t=getCurrentArmorSkills(e),n=Object.entries(t).sort(),o=document.querySelector("#EquipedSkillDisplay output");let l="";n.forEach((([e,t])=>{l+=`${e}: ${t}<br>`})),o.innerHTML=l},equipBuild=e=>{const t=document.querySelector(`.grid>div:nth-child(${e})>select`).selectedIndex,{armors:n,usedSkills:o}=GlobalMap.get(e)[t];setCharmSelects(e);for(const[e,t]of n){setAugmentSelect(document.getElementById(t.type),e),l=t.type,document.querySelectorAll(`#${l}Qurious select`).forEach((e=>e.selectedIndex=e.classList.contains("augmentType")?0:-1)),updateSelectedSkills();const n=t.augs;let o=document.querySelectorAll(`#${t.type}Qurious>select.augmentType`),a=0;for(let e=0,l=n.length;e<l;e++){const l=o[a],s=n[e];if("-Skill"===Object.keys(s)[0]&&t.points>=5)t.points-=5,setAugmentSelect(l,"-Def"),ChangeAugmentOptions(l),setAugmentSelect(l.nextElementSibling,5),++a;else{if("-Def"===Object.keys(s)[0]&&t.points>=5){t.points-=5;continue}setAugmentSelect(l,Object.keys(s)[0]),++a,ChangeAugmentOptions(l),"-Skill"===l.selectedOptions[0].textContent?(setAugmentSelect(l.nextElementSibling,Object.keys(t.skills[0])[0]),0==--Object.values(t.skills[0])[0]&&t.skills.shift()):setAugmentSelect(l.nextElementSibling,Object.values(s)[0])}}validator(document.getElementById(`${t.type}Qurious`))}var l,a;a=getUsedDecoArr(o),document.querySelectorAll(".decoDisplay>img.armorDeco").forEach((e=>{a[e.className[22]-1]&&Object.values(e.nextElementSibling.children).some(((t,n)=>{if(+t.value<=e.className[22]&&t.textContent?.includes(a[e.className[22]-1][0]))return e.nextElementSibling.selectedIndex=n,a[e.className[22]-1].shift()}))})),updateSelectedSkillsDisplay(),dataCompile()},appendElements=async()=>{requestIdleCallback((()=>document.querySelector(".grid")?.append(GlobalFragment)))},setUsedDecos=e=>{["lvl4","lvl3","lvl2","lvl1"].forEach((t=>{const n=e.usedSkills.filter((e=>e[2]?.includes(t))),o=document.querySelectorAll(`.${t}`);for(let e=0;e<n.length;e++)for(let l=0;l<o[e].children.length;l++){o[e].children[l].value<=t&&o[e].children[l].textContent.includes(n[e][0])&&(o[e].selectedIndex=l);break}}))},getTotal=(e,t=info.types)=>{const{armorSkills:n,remainingSlots:o,quriousSkills:l}=e;for(let e=0;e<4;++e)t.decoLevels[e].forEach((t=>{if(o[e]){const[l,a]=Object.entries(t)[0];n[l]?n[l]+=a*o[e]:n[l]=a*o[e]}}));return Object.entries(t.qurious).forEach((e=>{l[e[1]/3-1]&&(n[e[0]]?n[e[0]]=n[e[0]]+l[e[1]/3-1]:n[e[0]]=l[e[1]/3-1])})),Object.entries(n).map((e=>[e[0],Math.min(e[1],t.maxDeco[e[0]]??info.skills[e[0]].length-1)])).sort()},expandText=e=>{Object.values(e.children).forEach((e=>e.textContent=e.value))},abbreviateText=e=>{const t=e=>{let t=e.replace(/[^A-Z1-9:& /,]/g,""),n=e.substring(0,3)+":";return 2===t.length?n:t};Object.values(e.children).forEach((e=>{let n=e.value.split(" ");for(let e=0;e<4;++e)n[3*e]=t(n[3*e]);e.textContent=n.join(" ")}))},setOutput=e=>{e.forEach((e=>{const t=document.createElement("button");t.textContent=`${e[0]} +${e[1]}`,document.querySelector(".extraSkills").append(t)})),console.log((performance.now()-timer)/1e3)},memo=new Map,getUsedCharm=e=>{const t=e=>{let t=e.replace(/[^A-Z1-9:& /,]/g,""),n=e.substring(0,3);return 1===t.length?n:t},n=[];return e.forEach((e=>{const o=GlobalMap.get("charms")[e.charmIndex].map((e=>Object.entries(e))),l=`${o[0][0][0]} ${o[0][0][1]} ${o[0][1][0]} ${o[0][1][1]} ${o[1][0][0]} ${o[1][0][1]} ${o[1][1][0]} ${o[1][1][1]}`;if(memo.has(l))n.push(memo.get(l));else{const e=[`${o[0][0][0]}: ${o[0][0][1]} & ${o[0][1][0]}: ${o[0][1][1]} / ${o[1][0][0]}: ${o[1][0][1]} & ${o[1][1][0]}: ${o[1][1][1]}`.replace(/,/g,""),`${t(o[0][0][0])}: ${o[0][0][1]} & ${t(o[0][1][0])}: ${o[0][1][1]} / ${t(o[1][0][0])}: ${o[1][0][1]} & ${t(o[1][1][0])}: ${o[1][1][1]}`];memo.set(l,e),n.push(e)}})),n},recieveMessage=e=>{for(let t=0;t<e.length;t++){const n=e[t];if(totalCombos+=n.length,++totalSets,GlobalMap.size<=100){GlobalMap.set(GlobalMap.size,n);const e=getUsedCharm(n),t=document.createDocumentFragment(),o=document.createElement("button");o.type="button",o.setAttribute("aria-pressed","false"),o.classList.add("equipBuild"),o.textContent="Equip Build",t.appendChild(o);for(let e=0;e<5;e++){const o=document.createElement("output");o.className=`armorImg ${["helm","chest","arm","waist","leg"][e]}`,t.appendChild(o);const l=document.createElement("span");l.textContent=n[0].armors[e][0],t.appendChild(l)}const l=document.createElement("select");l.classList.add("armorCharm"),l.setAttribute("title","charm1Skill1"),l.onmousedown=()=>{return e=l,void Object.values(e.children).forEach((e=>e.textContent=e.value));var e},l.onchange=()=>abbreviateText(l),l.onfocusout=()=>abbreviateText(l);const a=document.createElement("output");a.className="armorImg charm",t.appendChild(a),e.forEach((e=>{const t=document.createElement("option");t.value=e[0],t.textContent=e[1],l.appendChild(t)})),t.appendChild(l);const s=document.createElement("div");s.classList.add("setResult"),s.appendChild(t),GlobalFragment.append(s),21===GlobalMap.size?document.querySelector(".grid").append(GlobalFragment):(101===GlobalMap.size&&appendElements(),document.getElementById("setOutput").textContent=`Displayed ${GlobalMap.size-1} Builds / ${totalCombos} Combinations`)}}},getSkillReq=(e=[])=>(document.querySelectorAll(".buildSkills>div>.skill").forEach((t=>{t.selectedIndex>0&&e.push([t.id,t.selectedIndex])})),e),getSetRequirements=(e=info.types)=>{const t={},n={};return document.querySelectorAll("#skillSelect>div>output").forEach((o=>{+o.textContent.match(/(?<=Lv-)\d/)[0]>0&&(t[o.className.split(" ")[1]]=-o.textContent.match(/(?<=Lv-)\d/)[0],n[o.className.split(" ")[1]]={lvl:e.decos[o.className.split(" ")[1]]??5,lvl4:e.Lvl4[o.className.split(" ")[1]]??0,max:e.maxDeco[o.className.split(" ")[1]]-+o.textContent.match(/(?<=Lv-)\d/)[0],qurious:(e.qurious[o.className.split(" ")[1]]??60)/3})})),{skills:Object.fromEntries(Object.entries(t).sort(((e,t)=>n[t[0]].qurious-n[e[0]].qurious||n[t[0]].lvl-n[e[0]].lvl||n[e[0]].lvl4-n[t[0]].lvl4))),skillInfo:n}},getArmorInfo=()=>new Map(Object.entries(JSON.parse(JSON.stringify(info.armor))));function applyArmorFilter(e,t,n,o=getArmorInfo()){n=document.getElementById("filterLimit")?.value||n;const l={},a=[1,5,5,6],s=[0,0,0,0];Object.entries(e).forEach((e=>{t[e[0]].lvl<3||2===t[e[0]].lvl?s[3]+=~~(e[1]/2):4===t[e[0]].lvl4&&(s[3]+=2),1===t[e[0]].lvl?s[0]+=e[1]:3===t[e[0]].lvl&&(s[2]+=e[1])})),a[0]=s[0]<-5?.75:0,a[2]=s[2]<-3?6:5,a[3]=s[3]<-3?8:6;for(let e=0;e<5;e++){const t=["helm","waist","chest","arm","leg"][e];o.set(t,o.get(t).filter((e=>"MaleOnly"!==e.sex)))}return["helm","waist","chest","arm","leg"].forEach((s=>{l[s]=[],o.get(s).forEach((o=>{if(!o)return;o.fodder={};const i=o.skills,r=o.decos.join("");switch(!0){case"3000"===r:o.decos=[2,1,0,0],o.fodder.augs=[[{"+Slots":-6}],[]],o.quriousPoints-=6;break;case"2001"===r:o.decos=[1,1,0,1],o.fodder.augs=[[{"+Slots":-6}],[]],o.quriousPoints-=6;break;case"1001"===r||"2010"===r:o.decos=[1,1,0,1],o.fodder.augs=[[{"+Slots":-12}],[]],o.quriousPoints-=12;break;case"0002"===r:o.decos=[0,1,0,2],o.fodder.augs=[[{"+Slots":-12}],[]],o.quriousPoints-=12;break;case"1020"===r:o.decos=[0,1,0,2],o.fodder.augs=[[{"+Slots":-18}],[]],o.quriousPoints-=18;break;case"1002"===r:o.decos=[0,1,0,2],o.fodder.augs=[[{"+Slots":-6}],[]],o.quriousPoints-=6;break;case 13===o.quriousTable:o.decos=[1,1,0,1],o.fodder.augs=[[{def:5},{def:5},{def:5},{"+Slots":-18},{"+Slots":-6}],[]],o.quriousPoints-=24;break;default:o.fodder={points:0,augCount:3,augs:[[],[]]}}if(document.getElementById("StormSoul").selectedIndex>3){const e=4===document.getElementById("StormSoul").selectedIndex?1:2;for(const n of i)t[n].qurious<6&&(i[n]+=e)}let c=o.decos[0]*a[0]+o.decos[1]*a[1]+o.decos[2]*a[2]+o.decos[3]*a[3],u=0;for(let n=0;n<Object.keys(i).length;n++)if(e[Object.keys(i)[n]])20===t[Object.keys(i)[n]].qurious&&5===t[Object.keys(i)[n]].lvl?(o.setBonus={[Object.keys(i)[n]]:Object.values(i)[n]},c+=30*Math.min(-1*e[Object.keys(i)[n]],i[Object.keys(i)[n]])):c+=Math.min(-1*e[Object.keys(i)[n]],i[Object.keys(i)[n]])*t[Object.keys(i)[n]].qurious==20?4:t[Object.keys(i)[n]].qurious;else if(13!==o.quriousTable){u+=Object.values(i)[n],o.fodder.fodderCount||(o.fodder.fodderCount=0),o.fodder.fodderCount+=Object.values(i)[n],o.fodder.skills||(o.fodder.skills=[]);for(let e=0;e<Object.values(i)[n];e++)o.fodder.skills.push({[Object.keys(i)[n]]:1})}if(13===o.quriousTable)o.totalQuriousPoints=15+o.quriousPoints,o.armorRating=c;else switch(u){case 0:o.totalQuriousPoints=15+o.quriousPoints,o.fodder.augs[0]=[{"-Def":5},{"-Def":5},{"-Def":5}].concat(o.fodder.augs[0]),o.armorRating=c+~~(Math.min(15*o.quriousAugs,o.totalQuriousPoint)/3);break;case 1:o.totalQuriousPoints=20+o.quriousPoints,o.fodder.augs[0]=[{"-Skill":10},{"-Def":5},{"-Def":5}].concat(o.fodder.augs[0]),o.armorRating=c+~~(Math.min(15*o.quriousAugs,o.totalQuriousPoints)/3);break;case 2:o.totalQuriousPoints=25+o.quriousPoints,o.fodder.augs[0]=[{"-Skill":10},{"-Skill":10},{"-Def":5}].concat(o.fodder.augs[0]),o.armorRating=c+~~(Math.min(15*o.quriousAugs,o.totalQuriousPoints)/3);break;default:o.totalQuriousPoints=30+o.quriousPoints,o.fodder.augs[0]=[{"-Skill":10},{"-Skill":10},{"-Skill":10}].concat(o.fodder.augs[0]),o.armorRating=c+~~(Math.min(15*o.quriousAugs,o.totalQuriousPoints)/3)}const d=(e,t=!0)=>{t&&l[s].pop(),o.fodder.type=s,o.quriousPoints=o.totalQuriousPoints+0,o.totalQuriousPoints=~~(o.totalQuriousPoints/3),l[s].splice(e,0,{...o,...i})};if(!l[s][0])return o.fodder.type=s,o.quriousPoints=o.totalQuriousPoints+0,o.totalQuriousPoints=~~(o.totalQuriousPoints/3),void l[s].push({...o,...i});if(o.armorRating>(l[s].length===n?l[s][n-1].armorRating:10)){for(let e=0;e<l[s].length;e++)if(o.armorRating>l[s][e].armorRating)return void d(e);l[s].length<n&&d(l[s].length-1,!1)}}))})),l}const getCharms=(e,t,n=[])=>{const{charms:o}=info;let l=Object.values(o).filter((n=>Object.keys(n.skills).every((n=>e[n]&&t[n].lvl4<3)))),a=-1;return GlobalMap.set("charms",[]),l.forEach(((e,t)=>{const[o,s]=Object.keys(e.skills);for(let o=t+1;o<Object.keys(l).length;o++){const[t,s]=Object.keys(l[o].skills);GlobalMap.get("charms")[++a]=[e.skills,l[o].skills];const i={...e.skills};i[t]?i[t]+=l[o].skills[t]:i[t]=l[o].skills[t],i[s]?i[s]+=l[o].skills[s]:i[s]=l[o].skills[s],n.push(i)}})),console.log(n.length),[-1,n.length,n]},getCheckedSkills=(e=[])=>{const t=document.getElementsByClassName("skillButton").forEach((n=>{t[i].checked&&e.push,info.skills[t.id]}));return e},getSetBuilds=(e=7)=>{try{timer=performance.now(),workerCount=2;let t=window.location.hostname.includes(".0.0.")?"setBuilderWorker.js":"./ugly/onlineWorker.js";for(let e=0;e<workerCount;e++)workers[e]=new Worker(t);workers.forEach((e=>e.addEventListener("message",(e=>{if(!e.data[1]&&GlobalMap.size<102&&e.data[0][0]?recieveMessage(e.data[0]):e.data[1]&&GlobalMap.size<102&&e.data[0].sets[0]&&recieveMessage(e.data[0].sets),e.data[1]){e.target.terminate(),newSkills.remainingSlots=[Math.max(newSkills?.remainingSlots[0],e.data[0].remainingSlots[0]),Math.max(newSkills?.remainingSlots[1],e.data[0].remainingSlots[1]),Math.max(newSkills?.remainingSlots[2],e.data[0].remainingSlots[2]),Math.max(newSkills?.remainingSlots[3],e.data[0].remainingSlots[3])];for(const t in e.data[0].quriousSkills)newSkills.quriousSkills[t]=Math.max(newSkills.quriousSkills[t],e.data[0].quriousSkills[t]);for(const[t,n]of Object.entries(e.data[0].armorSkills))newSkills.armorSkills[t]?newSkills.armorSkills[t]=Math.max(newSkills.armorSkills[t],n):newSkills.armorSkills[t]=n;0==--workerCount&&(getTotal(newSkills).forEach((e=>{const t=document.createElement("button");t.textContent=`${e[0]} +${e[1]}`,document.querySelector(".extraSkills").append(t)})),console.log((performance.now()-timer)/1e3),document.getElementById("extraOutput").textContent=`Found ${totalSets} Builds / ${totalCombos} Combinations`,console.log([totalCombos,GlobalMap]),GlobalMap.size<101&&(appendElements(),document.getElementById("setOutput").textContent=`Displayed ${GlobalMap.size-1} Builds / ${totalCombos} Combinations`))}})))),document.getElementById("setReturn")?.classList.remove("augInvis"),document.querySelectorAll(".extraSkills>button").forEach((e=>e.remove()));const n=getSetRequirements();n.thisWeapon=getWeaponMR().decos,GlobalMap=new Map,n.theseCharms=getCharms(n.skills,n.skillInfo),n.setRequirements=Object.entries(n.skills),n.armors=applyArmorFilter(n.skills,n.skillInfo,e),n.requires={};for(let e=0,t=0;++t!==Object.values(n.armors)[e].length||(t=0,5!=++e);){const o=n.armors[Object.keys(n.armors)[e]][t];o?.setBonus&&n.skills[Object.keys(o.setBonus)[0]]&&(n.requires[Object.keys(o.setBonus)[0]]?n.requires[Object.keys(o.setBonus)[0]].push(Object.keys(n.armors)[e],t,Object.values(o.setBonus)[0]):n.requires[Object.keys(o.setBonus)[0]]=[Object.keys(n.armors)[e],t,Object.values(o.setBonus)[0]])}const o={waist:-1,helm:0,chest:0,arm:0,leg:0,work:[-1,workers.length]},l=[],a=e=>{e:for(;++o.waist<e||(o.waist=0,++o.helm<e||(o.helm=0,++o.chest<e||(o.chest=0,++o.arm<e||(o.arm=0,++o.leg!==e))));)l.push([o.waist,o.helm,o.chest,o.arm,o.leg])};a(e);const s=e**5;for(let e=0;e<workers.length;++e)e===workers.length-1?n.permutations=l:n.permutations=l.splice(0,s/workers.length),workers[e].postMessage(n);Object.values(document.getElementsByClassName("grid")[0].children).forEach((e=>e.remove())),Object.values(document.getElementsByClassName("extraSkills")[0].children).forEach((e=>e.remove())),newSkills={remainingSlots:[0,0,0,0],armorSkills:{},quriousSkills:[0,0,0,0,0]},totalCombos=0,totalSets=0}catch(e){console.error(e)}},build=(e=!0)=>{const t=document.createElement("div");if(t.id="skillSelect",t.classList.add("dropContainer"),t.innerHTML='\n\t\t\t\t\t<button type="button" id="startSearch" aria-pressed="false" class="blue" onclick="getSetBuilds()">\n\t\t\t\t\t\tFind Builds\n\t\t\t\t\t</button>\n\t\t\t\t\t<select itemtype="search" name="Skill Select" title="Skill Select" id="dropSkills">\n\t\t\t\t\t\t<option>Skill Selector</option>\n\t\t\t\t\t\t<option value="AttackBoost">Attack Boost</option>\n\t\t\t\t\t\t<option value="Agitator">Agitator</option>\n\t\t\t\t\t\t<option value="PeakPerformance">Peak Performance</option>\n\t\t\t\t\t\t<option value="Resentment">Resentment</option>\n\t\t\t\t\t\t<option value="Resuscitate">Resuscitate</option>\n\t\t\t\t\t\t<option value="CriticalEye">Critical Eye</option>\n\t\t\t\t\t\t<option value="CriticalBoost">Critical Boost</option>\n\t\t\t\t\t\t<option value="WeaknessExploit">Weakness Exploit</option>\n\t\t\t\t\t\t<option value="LatentPower">Latent Power</option>\n\t\t\t\t\t\t<option value="MaximumMight">Maximum Might</option>\n\t\t\t\t\t\t<option value="CriticalElement">Critical Element</option>\n\t\t\t\t\t\t<option value="MastersTouch">Masters Touch</option>\n\t\t\t\t\t\t<option value="FireAttack">Fire Attack</option>\n\t\t\t\t\t\t<option value="WaterAttack">Water Attack</option>\n\t\t\t\t\t\t<option value="IceAttack">Ice Attack</option>\n\t\t\t\t\t\t<option value="ThunderAttack">Thunder Attack</option>\n\t\t\t\t\t\t<option value="DragonAttack">Dragon Attack</option>\n\t\t\t\t\t\t<option value="PoisonAttack">Poison Attack</option>\n\t\t\t\t\t\t<option value="ParalysisAttack">Paralysis Attack</option>\n\t\t\t\t\t\t<option value="SleepAttack">Sleep Attack</option>\n\t\t\t\t\t\t<option value="BlastAttack">Blast Attack</option>\n\t\t\t\t\t\t<option value="Handicraft">Handicraft</option>\n\t\t\t\t\t\t<option value="RazorSharp">Razor Sharp</option>\n\t\t\t\t\t\t<option value="SpareShot">Spare Shot</option>\n\t\t\t\t\t\t<option value="ProtectivePolish">Protective Polish</option>\n\t\t\t\t\t\t<option value="Mind\'sEye">Mind\'s Eye</option>\n\t\t\t\t\t\t<option value="Ballistics">Ballistics</option>\n\t\t\t\t\t\t<option value="Bludgeoner">Bludgeoner</option>\n\t\t\t\t\t\t<option value="BowChargePlus">Bow Charge Plus</option>\n\t\t\t\t\t\t<option value="Focus">Focus</option>\n\t\t\t\t\t\t<option value="PowerProlonger">Power Prolonger</option>\n\t\t\t\t\t\t<option value="MarathonRunner">Marathon Runner</option>\n\t\t\t\t\t\t<option value="Constitution">Constitution</option>\n\t\t\t\t\t\t<option value="StaminaSurge">Stamina Surge</option>\n\t\t\t\t\t\t<option value="Guard">Guard</option>\n\t\t\t\t\t\t<option value="GuardUp">Guard Up</option>\n\t\t\t\t\t\t<option value="OffensiveGuard">Offensive Guard</option>\n\t\t\t\t\t\t<option value="CriticalDraw">Critical Draw</option>\n\t\t\t\t\t\t<option value="PunishingDraw">Punishing Draw</option>\n\t\t\t\t\t\t<option value="QuickSheathe">Quick Sheathe</option>\n\t\t\t\t\t\t<option value="Slugger">Slugger</option>\n\t\t\t\t\t\t<option value="StaminaThief">Stamina Thief</option>\n\t\t\t\t\t\t<option value="AffinitySliding">Affinity Sliding</option>\n\t\t\t\t\t\t<option value="HornMaestro">Horn Maestro</option>\n\t\t\t\t\t\t<option value="Artillery">Artillery</option>\n\t\t\t\t\t\t<option value="LoadShells">Load Shells</option>\n\t\t\t\t\t\t<option value="SpecialAmmoBoost">Special Ammo Boost</option>\n\t\t\t\t\t\t<option value="NormalRapidUp">Normal/Rapid Up</option>\n\t\t\t\t\t\t<option value="PierceUP">Pierce Up</option>\n\t\t\t\t\t\t<option value="SpreadUp">Spread Up</option>\n\t\t\t\t\t\t<option value="AmmoUp">AmmoUp</option>\n\t\t\t\t\t\t<option value="ReloadSpeed">Reload Speed</option>\n\t\t\t\t\t\t<option value="RecoilDown">Recoil Down</option>\n\t\t\t\t\t\t<option value="Steadiness">Steadiness</option>\n\t\t\t\t\t\t<option value="RapidFireUp">Rapid Fire Up</option>\n\t\t\t\t\t\t<option value="DefenseBoost">Defense Boost</option>\n\t\t\t\t\t\t<option value="DivineBlessing">Divine Blessing</option>\n\t\t\t\t\t\t<option value="RecoveryUp">Recovery Up</option>\n\t\t\t\t\t\t<option value="RecoverySpeed">Recovery Speed</option>\n\t\t\t\t\t\t<option value="SpeedEating">Speed Eating</option>\n\t\t\t\t\t\t<option value="Earplugs">Earplugs</option>\n\t\t\t\t\t\t<option value="Windproof">Windproof</option>\n\t\t\t\t\t\t<option value="TremorResistance">Tremor Resistance</option>\n\t\t\t\t\t\t<option value="BubblyDance">Bubbly Dance</option>\n\t\t\t\t\t\t<option value="EvadeWindow">Evade Window</option>\n\t\t\t\t\t\t<option value="EvadeExtender">Evade Extender</option>\n\t\t\t\t\t\t<option value="FireResistance">Fire Resistance</option>\n\t\t\t\t\t\t<option value="WaterResistance">Water Resistance</option>\n\t\t\t\t\t\t<option value="IceResistance">Ice Resistance</option>\n\t\t\t\t\t\t<option value="ThunderResistance">Thunder Resistance</option>\n\t\t\t\t\t\t<option value="DragonResistance">Dragon Resistance</option>\n\t\t\t\t\t\t<option value="BlightResistance">Blight Resistance</option>\n\t\t\t\t\t\t<option value="PoisonResistance">Poison Resistance</option>\n\t\t\t\t\t\t<option value="ParalysisResistance">Paralysis Resistance</option>\n\t\t\t\t\t\t<option value="SleepResistance">Sleep Resistance</option>\n\t\t\t\t\t\t<option value="StunResistance">Stun Resistance</option>\n\t\t\t\t\t\t<option value="MuckResistance">Muck Resistance</option>\n\t\t\t\t\t\t<option value="BlastResistance">Blast Resistance</option>\n\t\t\t\t\t\t<option value="Botanist">Botanist</option>\n\t\t\t\t\t\t<option value="Geologist">Geologist</option>\n\t\t\t\t\t\t<option value="Partbreaker">Partbreaker</option>\n\t\t\t\t\t\t<option value="CaptureMaster">Capture Master</option>\n\t\t\t\t\t\t<option value="CarvingMaster">Carving Master</option>\n\t\t\t\t\t\t<option value="GoodLuck">Good Luck</option>\n\t\t\t\t\t\t<option value="SpeedSharpening">Speed Sharpening</option>\n\t\t\t\t\t\t<option value="Bombardier">Bombardier</option>\n\t\t\t\t\t\t<option value="Mushroomancer">Mushroomancer</option>\n\t\t\t\t\t\t<option value="ItemProlonger">Item Prolonger</option>\n\t\t\t\t\t\t<option value="Wide-Range">Wide-Range</option>\n\t\t\t\t\t\t<option value="FreeMeal">Free Meal</option>\n\t\t\t\t\t\t<option value="Heroics">Heroics</option>\n\t\t\t\t\t\t<option value="Fortify">Fortify</option>\n\t\t\t\t\t\t<option value="FlinchFree">Flinch Free</option>\n\t\t\t\t\t\t<option value="JumpMaster">Jump Master</option>\n\t\t\t\t\t\t<option value="CarvingPro">Carving Pro</option>\n\t\t\t\t\t\t<option value="HungerResistance">Hunger Resistance</option>\n\t\t\t\t\t\t<option value="LeapofFaith">Leap of Faith</option>\n\t\t\t\t\t\t<option value="Diversion">Diversion</option>\n\t\t\t\t\t\t<option value="MasterMounter">Master Mounter</option>\n\t\t\t\t\t\t<option value="ChameleosBlessing">Chameleos Blessing</option>\n\t\t\t\t\t\t<option value="KushalaBlessing">Kushala Blessing</option>\n\t\t\t\t\t\t<option value="TeostraBlessing">Teostra Blessing</option>\n\t\t\t\t\t\t<option value="Dragonheart">Dragonheart</option>\n\t\t\t\t\t\t<option value="WirebugWhisperer">Wirebug Whisperer</option>\n\t\t\t\t\t\t<option value="WallRunner">Wall Runner</option>\n\t\t\t\t\t\t<option value="Counterstrike">Counterstrike</option>\n\t\t\t\t\t\t<option value="RapidMorph">Rapid Morph</option>\n\t\t\t\t\t\t<option value="HellfireCloak">Hellfire Cloak</option>\n\t\t\t\t\t\t<option value="WindAlignment">Wind Alignment</option>\n\t\t\t\t\t\t<option value="ThunderAlignment">Thunder Alignment</option>\n\t\t\t\t\t\t<option value="Stormsoul">Stormsoul</option>\n\t\t\t\t\t\t<option value="BloodRite">Blood Rite</option>\n\t\t\t\t\t\t<option value="Dereliction">Dereliction</option>\n\t\t\t\t\t\t<option value="Furious">Furious</option>\n\t\t\t\t\t\t<option value="MailofHellfire">Mail of Hellfire</option>\n\t\t\t\t\t\t<option value="Coalescence">Coalescence</option>\n\t\t\t\t\t\t<option value="Bloodlust">Bloodlust</option>\n\t\t\t\t\t\t<option value="Defiance">Defiance</option>\n\t\t\t\t\t\t<option value="SneakAttack">Sneak Attack</option>\n\t\t\t\t\t\t<option value="AdrenalineRush">Adrenaline Rush</option>\n\t\t\t\t\t\t<option value="Redirection">Redirection</option>\n\t\t\t\t\t\t<option value="Spiribird\'sCall">Spiribird\'s Call</option>\n\t\t\t\t\t\t<option value="ChargeMaster">Charge Master</option>\n\t\t\t\t\t\t<option value="Foray">Foray</option>\n\t\t\t\t\t\t<option value="Tune-Up">Tune-Up</option>\n\t\t\t\t\t\t<option value="Grinder(S)">Grinder (S)</option>\n\t\t\t\t\t\t<option value="BladescaleHone">Bladescale Hone</option>\n\t\t\t\t\t\t<option value="WallRunner(Boost)">Wall Runner (Boost)</option>\n\t\t\t\t\t\t<option value="QuickBreath">Quick Breath</option>\n\t\t\t\t\t\t<option value="ElementExploit">Element Exploit</option>\n\t\t\t\t\t\t<option value="Burst">Burst</option>\n\t\t\t\t\t\t<option value="Guts">Guts</option>\n\t\t\t\t\t\t<option value="StatusTrigger">Status Trigger</option>\n\t\t\t\t\t\t<option value="IntrepidHeart">Intrepid Heart</option>\n\t\t\t\t\t\t<option value="BuildupBoost">Buildup Boost</option>\n\t\t\t\t\t\t<option value="Embolden">Embolden</option>\n\t\t\t\t\t\t<option value="WindMantle">Wind Mantle</option>\n\t\t\t\t\t\t<option value="PowderMantle">Powder Mantle</option>\n\t\t\t\t\t\t<option value="Berserk">Berserk</option>\n\t\t\t\t\t\t<option value="Strife">Strife</option>\n    \t\t\t\t\t</select><div id="DerelictionSelect"><label class="label Dereliction skillInput">Dereliction</label><output class="skillInput Dereliction" max="3" min="0">Lv-1</output><button type="button" aria-pressed="false" id="DerelictionDec" class="skillInput Dereliction dec">⇁</button><button type="button" aria-pressed="false" id="DerelictionInc" class="skillInput Dereliction inc">⇀</button></div><div id="RapidFireUpSelect"><label class="label RapidFireUp skillInput">RapidFireUp</label><output class="skillInput RapidFireUp" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="RapidFireUpDec" class="skillInput RapidFireUp dec">⇁</button><button type="button" aria-pressed="false" id="RapidFireUpInc" class="skillInput RapidFireUp inc">⇀</button></div><div id="PierceUpSelect"><label class="label PierceUP skillInput">PierceUP</label><output class="skillInput PierceUP" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="PierceUpDec" class="skillInput PierceUP dec">⇁</button><button type="button" aria-pressed="false" id="PierceUpInc" class="skillInput PierceUP inc">⇀</button></div><div id="CriticalElementSelect"><label class="label CriticalElement skillInput">CriticalElement</label><output class="skillInput CriticalElement" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="CriticalElementDec" class="skillInput CriticalElement dec">⇁</button><button type="button" aria-pressed="false" id="CriticalElementInc" class="skillInput CriticalElement inc">⇀</button></div><div id="MaximumMightSelect"><label class="label MaximumMight skillInput">MaximumMight</label><output class="skillInput MaximumMight" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="MaximumMightDec" class="skillInput MaximumMight dec">⇁</button><button type="button" aria-pressed="false" id="MaximumMightInc" class="skillInput MaximumMight inc">⇀</button></div><div id="LatentPowerSelect"><label class="label LatentPower skillInput">LatentPower</label><output class="skillInput LatentPower" max="5" min="0">Lv-5</output><button type="button" aria-pressed="false" id="LatentPowerDec" class="skillInput LatentPower dec">⇁</button><button type="button" aria-pressed="false" id="LatentPowerInc" class="skillInput LatentPower inc">⇀</button></div><div id="WeaknessExploitSelect"><label class="label WeaknessExploit skillInput">WeaknessExploit</label><output class="skillInput WeaknessExploit" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="WeaknessExploitDec" class="skillInput WeaknessExploit dec">⇁</button><button type="button" aria-pressed="false" id="WeaknessExploitInc" class="skillInput WeaknessExploit inc">⇀</button></div><div id="CriticalBoostSelect"><label class="label CriticalBoost skillInput">CriticalBoost</label><output class="skillInput CriticalBoost" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="CriticalBoostDec" class="skillInput CriticalBoost dec">⇁</button><button type="button" aria-pressed="false" id="CriticalBoostInc" class="skillInput CriticalBoost inc">⇀</button></div><div id="CriticalEyeSelect"><label class="label CriticalEye skillInput">CriticalEye</label><output class="skillInput CriticalEye" max="7" min="0">Lv-7</output><button type="button" aria-pressed="false" id="CriticalEyeDec" class="skillInput CriticalEye dec">⇁</button><button type="button" aria-pressed="false" id="CriticalEyeInc" class="skillInput CriticalEye inc">⇀</button></div><div id="ResuscitateSelect"><label class="label Resuscitate skillInput">Resuscitate</label><output class="skillInput Resuscitate" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="ResuscitateDec" class="skillInput Resuscitate dec">⇁</button><button type="button" aria-pressed="false" id="ResuscitateInc" class="skillInput Resuscitate inc">⇀</button></div><div id="ResentmentSelect"><label class="label Resentment skillInput">Resentment</label><output class="skillInput Resentment" max="5" min="0">Lv-5</output><button type="button" aria-pressed="false" id="ResentmentDec" class="skillInput Resentment dec">⇁</button><button type="button" aria-pressed="false" id="ResentmentInc" class="skillInput Resentment inc">⇀</button></div><div id="PeakPerformanceSelect"><label class="label PeakPerformance skillInput">PeakPerformance</label><output class="skillInput PeakPerformance" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="PeakPerformanceDec" class="skillInput PeakPerformance dec">⇁</button><button type="button" aria-pressed="false" id="PeakPerformanceInc" class="skillInput PeakPerformance inc">⇀</button></div><div id="AgitatorSelect"><label class="label Agitator skillInput">Agitator</label><output class="skillInput Agitator" max="5" min="0">Lv-5</output><button type="button" aria-pressed="false" id="AgitatorDec" class="skillInput Agitator dec">⇁</button><button type="button" aria-pressed="false" id="AgitatorInc" class="skillInput Agitator inc">⇀</button></div><div id="AttackBoostSelect"><label class="label AttackBoost skillInput">AttackBoost</label><output class="skillInput AttackBoost" max="7" min="0">Lv-7</output><button type="button" aria-pressed="false" id="AttackBoostDec" class="skillInput AttackBoost dec">⇁</button><button type="button" aria-pressed="false" id="AttackBoostInc" class="skillInput AttackBoost inc">⇀</button></div>\n\t\t\t\t\t<button type="button" aria-pressed="false" class="blue" id="resetSkills" onclick="resetSkills()">\n\t\t\t\t\t\tReset Skills\n\t\t\t\t\t</button>\n\t\t\t\t',document.getElementById("skillSelect").replaceWith(t),e){return getSetBuilds()}};