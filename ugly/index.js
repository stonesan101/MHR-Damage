let lastEvent="",comboTracker=[],buildKeys=0,testKeyCount=0,armorCount="";const dropHZ=document.getElementById("dropHZ"),dropWeapon=document.getElementById("dropWeapon"),weaponType=document.getElementById("dropWeaponType"),dropMon=document.getElementById("dropMonster"),dropQuest=document.getElementById("dropQuest"),weaponTypes=[["LightBowGun"],["GreatSword"],["ChargeBlade"],["InsectGlaive"],["SwordNShield"],["DualBlades"],["SwitchAxe"],["LongSword"],["Lance"],["HeavyBowGun"],["Bow"],["HuntingHorn"],["Gunlance"],["Hammer"]],updateSelectedSkillsDisplay=()=>{const e=getCurrentSelectedSkills(),t=getCurrentArmorSkills(e),n=Object.entries(t).sort(),l=document.querySelector("#EquipedSkillDisplay output");let o="";n.forEach((([e,t])=>{o+=`${e}: ${+t}<br>`})),l.innerHTML=o},getGrade=(e,t)=>e.includes("S")||t.includes("S")?"S":t<=e?t:e,info={};async function getInfo(){try{const e=window.location.href.slice(0,window.location.href.lastIndexOf("/"));weaponTypeSelect();const t=fetch(`${window.location.href.slice(0,window.location.href.lastIndexOf("/"))}/json/monster.json`).then((e=>e.json())).then((e=>{info.monster=e})),n=fetch(`${e}/json/rampage.json`).then((e=>e.json())).then((e=>{info.rampage=e})),l=fetch(`${e}/json/types.json`).then((e=>e.json())).then((e=>{info.types=e})),o=fetch(`${e}/json/skills.json`).then((e=>e.json())).then((e=>{info.skills=e})),a=fetch(`${e}/json/quest.json`).then((e=>e.json())).then((e=>{info.quest=e})),s=fetch(`${e}/json/LightBowGun.json`).then((e=>e.json())).then((e=>{info.LightBowGun=e})),r=fetch(`${e}/json/ammo.json`).then((e=>e.json())).then((e=>{info.ammo=e})),i=await Promise.all([s,l,n]).then((()=>{}));if(await Promise.all([t,o,a,r,i]).then((()=>{classChange(),document.querySelectorAll("#dropMonster>option").forEach(((e,t)=>{"Toadversary"===e.textContent&&(document.getElementById("dropMonster").selectedIndex=t)}))})).then((()=>info)),document.getElementsByTagName("SCRIPT")[1].src.includes("backup.js")){weaponTypes.push("mhrice");const e=document.createElement("script");e.src="utilities.js",document.body.append(e);const t=document.createElement("script");t.src="qurious.js",document.body.append(t);const n=document.createElement("script");n.src="setCreation.js",document.body.append(n);const l=document.createElement("script");l.src="setBuilderWorker.js",document.body.append(l)}weaponTypes.push("armor"),fetch(`${e}/json/charms.json`).then((e=>e.json())).then((e=>{const t=[],n=document.createDocumentFragment();for(let l=0,o=0;;){if(0===l){const t=document.createElement("option");t.value=Object.values(e)[o][0]?.grade,t.textContent=`${Object.keys(e)[o]} +${Object.values(e)[o][1]}`,n.appendChild(t)}if(++o===Object.keys(e).length){if(o=0,++l===Object.keys(e).length)break;1===l&&(document.getElementById("charmSkill1")?.appendChild(n.cloneNode(!0)),document.getElementById("charmSkill2")?.appendChild(n.cloneNode(!0)))}l!==o&&"Bludgeoner"!==Object.keys(e)[l]&&"Bludgeoner"!==Object.keys(e)[o]&&(null===info.types.Lvl4[Object.keys(e)[l]]||info.types.qurious[Object.keys(e)[l]]>=9||!info.types.qurious[Object.keys(e)[l]]||info.types.Lvl4[Object.keys(e)[l]]<2)&&(null===info.types.Lvl4[Object.keys(e)[o]]||info.types.qurious[Object.keys(e)[o]]>=9||!info.types.qurious[Object.keys(e)[o]]||info.types.Lvl4[Object.keys(e)[o]]<3)&&!info.types.decoLevels[0].some((t=>Object.keys(t)[0]===Object.keys(e)[l]))&&!info.types.decoLevels[0].some((t=>Object.keys(t)[0]===Object.keys(e)[o]))&&Object.values(e)[l][1]>=3&&Object.values(e)[o][2]>=2&&t.push({skills:{[Object.keys(e)[l]]:Object.values(e)[l][1],[Object.keys(e)[o]]:Object.values(e)[o][2]},grade:getGrade(Object.values(e)[l][0]?.grade,Object.values(e)[o][0]?.grade)})}info.charms=t})),weaponTypes.slice(1).forEach((t=>{fetch(`${e}/json/${t}.json`).then((e=>e.json())).then((e=>{info[t]=e})).then((()=>{info.armor&&(armorSelect(),updateSelectedSkills(window.event))}))}))}catch(e){console.error(e)}}getInfo();const getArmorTypes=()=>["helm","chest","arm","waist","leg"],timesUsed=(e,t=comboTracker,n=0)=>(t.forEach((t=>{t==e&&++n})),n);function dataCompile(e=window?.event){updateSelectedSkills(),/BowGun/.test(weaponType.value)?rangedDPS(e):meleeDPS(e)}const resetTable=e=>{let t=0,n=2;const l=document.querySelectorAll("#dpsBody>tr>td:nth-child(n+3)");for(;7!=++n||(n=2,++t!==e.length);)l[0].textContent=e[t][n]};function rangedDPS(e){document.querySelector("output.elementalAug").value=0,document.getElementById("elementalResult").value="+0",document.querySelector("output.sharpnessAug").value=0,document.getElementById("sharpnessResult").value="+0";const t=[],n=[];let l={},o=!0;const a=getWeaponMR();["Shot","Sever","Blunt","IgnoreHZV"].forEach((e=>{a[e]=getInitialStats(a,e)}));const s=getUsedAttacks();for(let e=0;e<Object.keys(s).length;e++){let r={...a[Object.values(s)[e].type],...Object.values(s)[e]};r=getDependantSkills(r),r=getRemainingSkills(r),r=damageCalculations(r),/Demon|Armor|Wyvern Blast|Glide|Wyvernsn|Guard/.test(r.attackName)?l.ticsAdjust=1:l=calculateAmmoFrames(r);const i=~~((~~r.efr+~~r.efe)*l.ticsAdjust),c=~~(~~r.rawCrit+~~r.eleCrit),u=~~(~~r.rawNon+~~r.eleNon),d=formatNumbers(~~(.99+document.getElementById("health").value/i));let m=/Stic|Slic/.test(r.attackName)?5+~~(.98+60/l.shotsPerMin)*~~(.99+document.getElementById("health").value/i):~~(.98+60/l.shotsPerMin)*~~(.99+document.getElementById("health").value/i);m=formatNumbers(m);const p=[`${~~r.rawNon} / ${~~r.rawCrit}`],g=[`${~~r.eleNon} / ${~~r.eleCrit}`],f=[`${~~u} / ${~~c}`],h=[r.attackName,p,g,f,i,"NaN%"===l.shotsPerGain||"0.00%"===l.shotsPerGain?"No Gain":l.shotsPerGain,/(\d{2},\d{3})/.test(d)?"N / A":d,/(\d{2},\d{3})/.test(m)?"N / A":m];t.push(h);const y=[r.attackName,r.rawMV,void 0===l.reloadSpeed?" N / A ":l.reloadSpeed,void 0===l.recoilSpeed?" N / A ":l.recoilSpeed,isNaN(l.clipSize)?"N / A":l.clipSize,r.ticsPer+1,void 0===l.shotsPerMinBase?" N / A ":l.shotsPerMinBase,void 0===l.shotsPerMin?" N / A ":l.shotsPerMin];if(n.push(y),o){createTable([["Stat","Raw","Ele Pierce"],["Base",~~r.baseRaw,~~(22*(1+r.raw/100))],["True",~~r.raw,~~((22*r.BEM+r.BE)*(1+r.raw/100))],["eTrue",~~(r.raw*getCritBoost(r.aff,r.Crit).PRM*r.PRM*r.augPRM),~~((22*r.BEM+r.BE)*(1+r.raw/100)*r.PEM*r.augPEM*getCritEle(r.aff,r.Crit).PEM)],["EFR/EFE",~~(r.raw*getCritBoost(r.aff,r.Crit).EFR*r.PRM*r.augPRM),~~((22*r.BEM+r.BE)*(1+r.raw/100)*r.PEM*r.augPEM*getCritEle(r.aff,r.Crit).EFE)],["Critical"].concat(Number(getCritBoost(r.aff).EFR).toFixed(3),Number(getCritEle(r.aff).EFE).toFixed(2)),["Affinity",~~(100*r.aff)]]),o=!1}}t.splice(0,0,["Ammo Type","Raw","Element","Total","Effective","RPM Gain","Shots \n To Kill","Seconds \n To Kill"]),buildDamageTable(t,"dps",e),n.splice(0,0,["Ammo Type","rawMV","Reload","Recoil","Clip Size","Procs Per","RPM Base","Current RPM"]),buildDamageTable(n,"ammo",e)}function meleeDPS(e){const t=performance.now(),n=[["Combo","Attack Name","MV","Raw","Element","Total","Effective"]];let l=[0,0,0,0,0,0,0,0],o=-1,a={};Sharpness.selectedIndex;const s=getWeaponMR();["Shot","Sever","Blunt","IgnoreHZV"].forEach((e=>{s[e]=getInitialStats(s,e)})),Object.values(getUsedAttacks()).forEach((t=>{++o;let r={...t,...s[t.type]};if(r=getDependantSkills(r),/input/.test(e?.target?.className)&&"Combo Damage"===r.attackName&&(updateComboTracker(),updateComboDisplay()),"Combo Damage"===r.attackName&&(a="Bow"===weaponType.value?hitsPerColorSharp()[1]:getComboHitsAndSetSharpness(r.aff)),r=getRemainingSkills(r),r=damageCalculations(r),comboTracker.includes(o.toString())){Object.entries(a).filter((e=>e[1].length>0)).forEach((e=>{if(!timesUsed(o,e[1]))return;const{PRM:t,PEM:n}=!1===r.noSharpMod?info.skills.Sharpness[capital(e[0])]:{PRM:1,PEM:1},a=timesUsed(o,e[1]);l=[l[0]+=Number(~~(r.rawMV*a)),l[1]+=Number(~~(r.rawNon*t)*a),l[2]+=Number(~~(r.rawCrit*t)*a),l[3]+=Number(~~(r.eleNon*n)*a),l[4]+=Number(~~(r.eleCrit*n)*a),l[5]+=Number(~~(r.rawNon*t)*a+~~(r.eleNon*n)*a),l[6]+=Number(~~(r.rawCrit*t)*a+~~(r.eleCrit*n)*a),l[7]+=Number(~~(r.efr*t)*a+~~(r.efe*n)*a)]}))}let i=info.skills.Sharpness[Sharpness.selectedOptions[0].text];if("Bow"===weaponType.value&&"Shot"!==r.type)switch(BowCoating.selectedOptions[0].text){case"Power":i="1.35";break;case"Close Range":i="1.32";break;case"Close Range+":i="1.39"}const c=["replaceME",r.attackName,r.rawMV,`${formatNumbers(~~(r.rawNon*i.PRM))} / ${formatNumbers(~~(r.rawCrit*i.PRM))}`,`${formatNumbers(~~(r.eleNon*i.PEM))} / ${formatNumbers(~~(r.eleCrit*i.PEM))}`,`${formatNumbers(~~(r.rawNon*i.PRM)+~~(r.eleNon*i.PEM))} / ${formatNumbers(~~(r.rawCrit*i.PRM)+~~(r.eleCrit*i.PEM))}`,formatNumbers((~~(r.efe*i.PEM)+~~(r.efr*i.PRM))*(r.ticsPer+1))];n.push(c);const u="none"===lower(r.eleType)?0:r.ele;createTable([[["Stat"],["Raw"],[r.eleType]],["Base",~~r.baseRaw,r.baseEle],["True",~~r.raw,~~u],["eTrue",~~(r.raw*getCritBoost(r.aff,r.Crit).PRM*r.PRM*r.augPRM*i.PRM),~~(u*getCritEle(r.aff,r.Crit).PEM*r.PEM*r.augPEM*i.PEM)],["EFR/EFE",~~(r.raw*getCritBoost(r.aff,r.Crit).EFR*r.PRM*r.augEFR*i.PRM),~~(u*getCritEle(r.aff,r.Crit).EFE*r.PEM*r.augPEM*r.augEFR*i.PEM)],["Critical"].concat(Number(getCritBoost(r.aff).EFR).toFixed(3),Number(getCritEle(r.aff).EFE).toFixed(2)),["Sharp."].concat(Object.values(Object.values(info.skills.Sharpness)[8-Sharpness.selectedIndex])),["Affinity",~~(100*r.aff)]])})),"Gunlance"===weaponType.value?(gunlanceShelling(n,l,e),console.log((performance.now()-t)/1e3),gunlanceShelling(532)):(n.splice(1,1,["replaceME","Combo Damage",`${formatNumbers(l[0])}`,`${formatNumbers(l[1])} / ${formatNumbers(l[2])}`,`${formatNumbers(l[3])} / ${formatNumbers(l[4])}`,`${formatNumbers(l[5])} / ${formatNumbers(l[6])}`,`${formatNumbers(l[7])}`]),buildDamageTable(n,"dps",e),console.log((performance.now()-t)/1e3),console.log(window.event))}function getRampageSkills(e={...info[weaponType.value].weapons[dropWeapon.value]}){for(let t=0;t<6;t++){const n=document.querySelectorAll("#weaponRampage>select")[t];if("none"===n.style.display)break;const l=info.rampage["Rampage-Up Skill"][n.value];if(void 0!==l)for(const t of Object.keys(l))e[t]+=l[t]}return/BowGun/.test(weaponType.value)||(e.eleType=/Fire|Water|Thunder|Ice|Dragon|Blase|Sleep|Poison|Para/.test(weaponRampage.children[1].value)?weaponRampage.children[1].value.match(/Fire|Water|Thunder|Ice|Dragon|Blase|Sleep|Poison|Para/)[0]:e.eleType),{...e}}const getWeaponMR=()=>{const e={...info[weaponType.value].weapons[dropWeapon.value]};/BowGun/.test(weaponType.value)&&("Power"===document.getElementById("BowgunBarrel")?.selectedOptions[0]?.textContent&&(e.baseRaw=~~(e.baseRaw*(document.getElementById("Tune-Up").selectedIndex<2?1.125:1.15))),"Long"===document.getElementById("BowgunBarrel")?.selectedOptions[0]?.textContent&&(e.baseRaw=~~(e.baseRaw*(document.getElementById("Tune-Up").selectedIndex<2?1.05:1.075)))),e.baseRaw+=+document.querySelector("output.attackAug + output").value.slice(-2);let t=+document.querySelector("output.affinityAug + output").value.slice(-2);if(e.elementalAug+=+document.querySelector("output.elementalAug + output").value.slice(-2),e.aff?e.aff+=t:e.aff=t,"None"!==e.eleType){let t=0;t="GreatSword"===weaponType.value?[0,5,10,15,20,25,33,43][info.augIndex.elementalAug]:"lance"===weaponType?.value||"Gunlance"===weaponType?.value?[0,3,6,10,14,18,24,32][info.augIndex.elementalAug]:[0,3,6,9,12,15,20,27][info.augIndex.elementalAug],e.baseEle+=t,document.getElementById("elementalResult").value=`+ ${t}`}else document.querySelector("output.elementalAug").value=0;return e.baseAff=e.aff,JSON.parse(JSON.stringify(e))},getRangedSkills=e=>(/Pierc/.test(e.attackName)?e.getSkills.push(info.skills.PierceUp[document.getElementById("PierceUp").selectedIndex]):/Spread/.test(e.attackName)?e.getSkills.push(info.skills.SpreadUp[document.getElementById("SpreadUp").selectedIndex]):/Normal|Rapid/.test(e.attackName)&&e.getSkills.push(info.skills.NormalRapidUp[document.getElementById("NormalRapidUp").selectedIndex]),/RF+/.test(e.attackName)&&e.getSkills.push(info.skills.RapidFireUp[document.getElementById("RapidFireUp").selectedIndex]),/Wyvern|Dragon Piercer/.test(e.attackName)&&e.getSkills.push(info.skills.SpecialAmmoBoost[document.getElementById("SpecialAmmoBoost").selectedIndex]),/BowGun/.test(weaponType.value)&&("HeavyBowGun"===weaponType.value&&(/Sticky|Wyvern/.test(e.attackName)&&(e.augEFR*=info.skills.Bombardier[document.getElementById("Bombardier").selectedIndex][e.attackName.match("Sticky|Wyvern")[0]][1],e.augPRM*=info.skills.Bombardier[document.getElementById("Bombardier").selectedIndex][e.attackName.match("Sticky|Wyvern")[0]][0]),/snipe|heart|Cluster/.test(e.attackName)||(e.PRM*=info.skills.ChargeLevel[ChargeLevel.selectedIndex].PRM,e.NoEleBuff?e.baseEle*=info.skills.ChargeLevel[ChargeLevel.selectedIndex].PEM:e.PEM*=info.skills.ChargeLevel[ChargeLevel.selectedIndex].PEM)),"LightBowGun"===weaponType.value&&/Pierce|Spread|Normal/.test(e.attackName)&&document.getElementById("CriticalFirePower").selectedIndex>0&&(/Normal/.test(e.attackName)?e.PRM*=1.3:/Spread/.test(e.attackName)?e.PRM*=1.2:/Pierce/.test(e.attackName)&&(e.PRM*=1.1))),"Bow"!==weaponType.value||/Stake/.test(e.attackName)||e.getSkills.push(info.skills.BowCoating[BowCoating.selectedIndex]),getStats(e)),getMeleeSkills=e=>{if("LongSword"!==weaponType.value||/Helm Breaker|Serene/.test(e.attackName)?/Helm Breaker|Serene/.test(e.attackName)&&e.getSkills.push(/Helm Breaker/.test(e.attackName)?e.getSkills.push(info.skills.Helmbreaker[Helmbreaker.selectedIndex]):e.getSkills.push(info.skills.SerenePose[SerenePose.selectedIndex])):e.getSkills.push(info.skills.SpiritGauge[SpiritGauge.selectedIndex]),"GreatSword"===weaponType.value){const t=e.attackName.match(/Charged Slash|Rising Slash|Wide Slash|Strong Charged Slash|True Charged Slash|Rage Slash/);t&&document.getElementById("StrongarmStance").selectedIndex>0&&(e.PRM*=info.skills.StrongarmStance[t][0],e.PEM*=info.skills.StrongarmStance[t][1]),/(?<!Tackle )Lv[1-3]/.test(e.attackName)&&(e.rawMV*=Number(`1.${e.attackName.match(/(?<=Lv)[1-3]/)[0]}`),e.rawMV=e.rawMV.toFixed(1))}return"ChargeBlade"===weaponType.value&&(/3rd|(?<!Midair |Axe: )UED|(?<!Charged )Sword(?!.*Shield)/.test(e.attackName)||e.getSkills.push(info.skills.savageAxe[savageAxe.selectedIndex]),"Impact Phial"===e.phialType?e.getSkills.push(info.skills.impShieldCharge[impShieldCharge.selectedIndex]):e.getSkills.push(info.skills.eleShieldCharge[eleShieldCharge.selectedIndex])),getStats(e)};function getDependantSkills(e){return e.getSkills=[],"FireWaterIceThunderDragon".includes(e.eleType)&&document.querySelectorAll(`.${lower(e.eleType)}`).forEach((t=>{t.selectedIndex>0&&e.getSkills.push(info.skills[t.id][t.selectedIndex])})),weaponType.value.includes("Bow")?getRangedSkills(e):getMeleeSkills(e)}function getEnrage(){return"Enraged"===document.getElementById("dropEnraged").value?info.monster[dropMon.value]?.anger_data:1}const getWeaknessExploit=e=>e>=45?info.skills.WeaknessExploit[Math.min(0,document.getElementById("WeaknessExploit").selectedIndex)].aff:0;function getInitialStats(e,t){null===comboTracker[0]&&(comboTracker=[]),e.baseRaw+=!0===e.Draw?Number(document.getElementById("PunishingDraw").value):0,e.BR=0,e.BRM=1,e.PRM=1,e.BEM=1,e.BE=0,e.PEM=1;const n={};let l=[];return e.getSkills=[],Object.values(info.types[t]).forEach((t=>{document.getElementById([t])?.style.display.includes("none")||!document.getElementById([t]).selectedIndex||n[t]||e.getSkills.push(info.skills[t][document.getElementById([t]).selectedIndex]),n[t]=1})),e.PRM*=document.getElementById("DemonAmmo").checked&&/(Sever|Blunt)/.test(e.type)?1.1:1,document.querySelectorAll("input.skillButton").forEach((t=>{t.checked&&info.skills[t.id]&&!n[t.id]?(e.getSkills.push(info.skills[t.id]),n[t.id]=1):info.skills[t.id]||console.log(t.id)})),document.getElementById("enrageDisplay").textContent=~~(100*getEnrage())+"%","Enraged"===document.getElementById("dropEnraged").value&&(l.push("Agitator"),e.PEM*=getEnrage(),e.PRM*=getEnrage()),"DualBlades"===weaponType.value&&(e.BEM*=info.skills.ArchdemonMode[document.getElementById("ArchdemonMode").selectedIndex].BEM,e.BEM*=/\[Feral Demon Mode\]/.test(e.attackName)?1:info.skills.DemonMode[document.getElementById("DemonMode").selectedIndex].BEM,e.BRM*=/\[Demon Mode\]/.test(e.attackName)?1:info.skills.FeralDemonMode[document.getElementById("FeralDemonMode").selectedIndex].BRM,e.aff+="Hellion Mode"===document.getElementById("weaponRampage0").value?20:0),"Bow"===weaponType.value&&(l=l.concat("UpperCrit","HerculesDraw")),l.forEach((t=>{!n[t]&&document.getElementById([t]).selectedIndex&&(n[t]=1,e.getSkills.push(info.skills[t][document.getElementById([t]).selectedIndex]))})),getStats(e),"Kushala Daora Soul"===document.getElementById("weaponRampage0").value&&(e.aff+=15),e.aff+=getRawHZ(t)>=45?info.skills.WeaknessExploit[Math.min(0,document.getElementById("WeaknessExploit").selectedIndex)].aff:0,e.aff=Math.min(e.aff,100)/100,{...e}}function updateComboTracker(){if(document.getElementsByClassName("inputs")?.length&&!Number.isNaN(Number(window?.event?.target.id))&&"0"!==window?.event?.target.id){let e=document.querySelectorAll(".inputs")[window?.event?.target.id].value-timesUsed(window?.event?.target.id);for(;e>0;)comboTracker.push(window.event.target.id),--e;for(;e<0;)comboTracker.splice(comboTracker.lastIndexOf(window?.event?.target.id),1),++e}}function updateComboDisplay(){let e;document.querySelectorAll("li.comboHits").forEach((e=>e.remove())),comboTracker.forEach((t=>{e=document.createElement("li"),e.className=`${t} comboHits`,e.setAttribute("draggable","true"),e.textContent=document.querySelector(`td#b${[t]}>output`).textContent,document.getElementById("comboCountDisplay").append(e)}))}const getInitialSharpness=()=>{let e=10*document.getElementById("Handicraft").selectedIndex;const{sharpness:t,handicraft:n}=getWeaponMR(),l=10*info.augIndex.sharpnessAug;t.red-=l;const o=-1===Object.values(t).indexOf(0)?6:Object.values(t).indexOf(0)-1;t[Object.keys(t)[o]]+=l;for(let l=o;e;++l){const o=Math.min(e,n.shift());t[Object.keys(t)[l<0?6:l]]+=o,e-=o}return t};function applySharpnessSkills(e,t={...getInitialSharpness()}){let n=[];const l=info.skills.RazorSharp[document.getElementById("RazorSharp").selectedIndex].Sharp,o=info.skills.MastersTouch[document.getElementById("MastersTouch").selectedIndex].Sharp*e,a=e>0&&document.getElementById("MastersTouch").selectedIndex>0?sharpnessReduction(o)*sharpnessReduction(l):sharpnessReduction(l);return n=Object.entries(t).map((e=>~~(Number(e[1])*Number(a)))),n}function listOfAllComboHits(){let[...e]=comboTracker;if(void 0!==comboTracker[0]&&null!==comboTracker[0]){let t=document.getElementsByClassName("inputComboRepeat")[0].value;for(;t>1;)e=e.concat(comboTracker),--t;return e}}function getComboHitsAndSetSharpness(e=0){const[t,n,l]=hitsPerColorSharp(e);return document.getElementById("Sharpness").selectedIndex=6-t.lastIndexOf(0),t.forEach(((e,t)=>{document.querySelector("#sharpnessContainer").children[6-t].style.width=e/l*100+"%",document.querySelector("#sharpnessContainer").children[6-t].textContent=e<.1?"":~~e})),n}function hitsPerColorSharp(e=0,t=listOfAllComboHits()){const n={purple:[],white:[],blue:[],green:[],yellow:[],orange:[],red:[]},l="Bow"!==weaponType.value?applySharpnessSkills(e).reverse():[0,0,0,1,0,0,0,0],o=Object.values(l).reduce(((e,t)=>e+t));if(t){const e=Object.keys(getUsedAttacks());let o=0;const a=Object.keys(n),s=getAttacks();e:for(let r of t){const t=e[r];let i=s[t].ticsPer+1,c=getHitsPerTic(s[t].hitsOfSharp,r);if("Gunlance"!==weaponType.value||r<27)for(;i--;){if(l[o]<.1&&7==++o)break e;n[a[o]].push(r),l[o]-=c}}}return[l,n,o]}function getHitsPerTic(e,t){return document.getElementById("ProtectivePolish").checked||"Bow"===weaponType.value?0:"Gunlance"!==weaponType.value||t>27?"DualBlades"!==weaponType.value?e:e/3:1}function getRemainingSkills(e,t=getWeaponMR()){[e.augEFR,e.augPRM,e.augPEM]=[1,1,1],e.augPEM*="Valstrax Soul"===document.getElementById("weaponRampage0").value&&"Dragon"===e.eleType?1.2:1,[e.augEFR,e.augPRM]="Dulling Strike"===document.getElementById("weaponRampage0").value&&Sharpness.selectedIndex<5?[1.02,1.2]:[e.augEFR,e.augPRM];const n=Object.values(info.monster[dropMon.value]?.species);n&&("Invalid"!==n[1]&&"Wyvern Exploit"===document.querySelector("#weaponRampage0").value||document.querySelector("#weaponRampage0").value.includes(n[2])||"Invalid"!==n[3]&&"Fanged Exploit"===document.querySelector("#weaponRampage0").value)&&(e.PRM*=1.05),/blight Exploit/.test(document.getElementById("weaponRampage0").value)&&(e.PRM*=1.1),"Magnamalo Soul"===document.getElementById("weaponRampage0").value&&(e.BR+=12),("IgnoreHZV"===e.type&&"LightBowGun"===weaponType.value||"ChargeBlade"===weaponType.value)&&(e.augEFR*=info.skills.Bombardier[document.getElementById("Bombardier").selectedIndex][1],e.augPRM*=info.skills.Bombardier[document.getElementById("Bombardier").selectedIndex][0],"SwitchAxe"===weaponType.value&&/Sword|ZSD|ED/.test(e.attackName)&&"Impact Phial"===e.phialType&&(e.BRM*=1.15),"SwitchAxe"===weaponType.value&&/Sword|Elemental|ED/.test(e.attackName)&&"Elemental Phial"===e.phialType&&(e.BEM*=1.45)),"None"!==e.eleType&&(e.PEM*=0===t.rampageSlots&&"Elemental Exploit"===document.getElementById("weaponRampage0").value&&getEleHZ(e.eleType)>=25?1.3:1,e.PEM*=0!==t.rampageSlots&&"Element Exploit"===document.getElementById("weaponRampage0").value&&getEleHZ(e.eleType)>=25&&"none"!==lower(e.eleType)?1.15:1,e.PEM*=getEleHZ(e.eleType)>=20&&"none"!==lower(e.eleType)?info.skills.ElementExploit[ElementExploit.selectedIndex].PEM:1),"ChargeBlade"!==weaponType.value&&"SwitchAxe"!==weaponType.value||(e.BRM*=/Morph Slash|Condensed Spinning|Up Roundslash/.test(e.attackName)?info.skills.RapidMorph[RapidMorph.selectedIndex].BRM:1),Sharpness.selectedIndex>0&&Bludgeoner.selectedIndex>0&&(e.BRM*=1===Bludgeoner.selectedIndex&&Sharpness.selectedIndex<4?[1.05]:[1],e.BRM*=2===Bludgeoner.selectedIndex&&Sharpness.selectedIndex<4?[1.1]:[1],e.BRM*=3===Bludgeoner.selectedIndex&&Sharpness.selectedIndex<5?[1.1]:[1]),!/Wyvern/.test(e.attackName)&&Object.keys(info.skills.ChargeMaster).includes(weaponType.value)&&!0===e.ChargeMaster?e.BEM*=info.skills.ChargeMaster[weaponType.value][ChargeMaster.selectedIndex].BEM:!0===e.ChargeMaster&&!0===e.NoEleBuff&&(e.baseEle*=/Wyvern/.test(e.attackName)?info.skills.ChargeMaster["HeavyBowGun Wyvern"][ChargeMaster.selectedIndex].BEM:info.skills.ChargeMaster[weaponType.value][ChargeMaster.selectedIndex].BEM);const l=[];return[l.PRM,l.PEM]=!1===e.noSharpMod&&/sever|blunt/.test(lower(e.type))?[JSON.parse(Sharpness.value).PRM,JSON.parse(Sharpness.value).PEM]:[1,1],e.PRM*=~~(25/l.PRM)>=getRawHZ(e.type)?info.skills.MindsEye[MindsEye.selectedIndex].PRM:1,0===t.rampageSlots&&"Brutal Strike"===document.getElementById("weaponRampage0").value&&e.aff<0?(e.efrMulti=1+-1*e.aff*.2*1.5- -1*e.aff*.8*.75,e.critBoost=1.5):0!==t.rampageSlots&&"Brutal Strike"===document.getElementById("weaponRampage0").value&&e.aff<0&&(e.efrMulti=1+-1*e.aff*.25*2- -1*e.aff*.75*.75,e.critBoost=1.5),"Shot"===e.type&&(e.augPRM*=info.skills.Marksman[Marksman.selectedIndex][0],e.augEFR*=info.skills.Marksman[Marksman.selectedIndex][1]),e.NoSneak||(e.augPRM*=info.skills.SneakAttack[SneakAttack.selectedIndex].PRM,e.augEFR*=info.skills.SneakAttack[SneakAttack.selectedIndex].PRM),{...e}}function getCritEle(e,t=!0){return t?{PEM:info.skills.CriticalElement[CriticalElement.selectedIndex].PEM,EFE:1+(info.skills.CriticalElement[CriticalElement.selectedIndex].PEM-1)*e}:{PEM:1,EFE:1}}function getCritBoost(e,t=!0){return t?{PRM:info.skills.CriticalBoost[CriticalBoost.selectedIndex].PRM,EFR:1+(info.skills.CriticalBoost[CriticalBoost.selectedIndex].PRM-1)*e}:{PRM:1,EFR:1}}function damageCalculations(e){if(!1===e.Raw)[e.raw,e.rawNon,e.efr,e.rawCrit]=[0,0,0,0];else{e.raw=Math.min(~~(~~(~~e.baseRaw*e.BRM+e.BR+.1)*(document.getElementById("HuntingHornAttack").checked?1.1:1)),2600);const t=e.raw*e.PRM*getRawHZ(lower(e.type))*e.rawMV/1e4;e.rawNon=~~(.5+Math.max(1,t*e.augPRM)),e.efr=~~(.5+Math.max(1,t*e.augEFR*getCritBoost(e.aff,e.Crit).EFR)),e.rawCrit=~~(.5+Math.max(1,t*e.augPRM*getCritBoost(e.aff,e.Crit).PRM))}if(Object.prototype.hasOwnProperty.call(e,"NoEleBuff")&&!0===e.NoEleBuff)[e.ele,e.eleNon,e.efe,e.eleCrit]=[e.baseEle,e.baseEle,e.baseEle,e.baseEle];else if(!1===e.Ele||"None"===e.eleType&&!/BowGun/.test(weaponType.value))[e.ele,e.eleNon,e.efe,e.eleCrit]=[0,0,0,0];else{e.eleAmmo=/BowGun/.test(weaponType.value)&&"None"!==e.eleType?1+e.raw/100:1,e.ele=~~(Math.min(e.baseEle*e.BEM+e.BE,365)*e.eleAmmo+.1);const t=e.ele*e.PEM*(getEleHZ(e.eleType)/100)*e.eleMV*e.augPEM;e.eleNon=~~(.5+Math.max(1,t)),e.efe=~~(.5+Math.max(1,t*getCritEle(e.aff,e.Crit).EFE)),e.eleCrit=~~(.5+Math.max(1,t*getCritEle(e.aff,e.Crit).PEM))}return{...e}}const sharpnessReduction=e=>1/(1-e);function gunlanceShelling(e,t,n,l){const o=new RegExp(`${getWeaponMR().shellingType} Lv${getWeaponMR().shellingLevel}`);let a=1,s=1;Object.entries(getAttacks()).forEach(((l,r)=>{if(o.test(l[0])){a=~~(l[1].rawMV*info.skills.Bombardier[document.getElementById("Bombardier").selectedIndex][0]*info.skills.Artillery[Artillery.selectedIndex].BRM),s=~~(l[1].rawMV*info.skills.Bombardier[document.getElementById("Bombardier").selectedIndex][1]*info.skills.Artillery[Artillery.selectedIndex].BRM);const o=["replaceME",l[0],0,`${a} / ${a}`,`${l[1].baseEle} / ${l[1].baseEle}`,`${(a+l[1].baseEle)*(l[1].ticsPer+1)} / ${(a+l[1].baseEle)*(l[1].ticsPer+1)}`,s,l[1].baseEle,(s+l[1].baseEle)*(l[1].ticsPer+1)];e.push(o),t[0]+=0,t[1]+=a*timesUsed(r+27),t[2]+=a*timesUsed(r+27),t[3]+=l[1].baseEle*timesUsed(r+27),t[4]+=l[1].baseEle*timesUsed(r+27),t[5]+=(a+l[1].baseEle)*(n.ticsPer+1)*timesUsed(r+27),t[6]+=(a+l[1].baseEle)*(n.ticsPer+1)*timesUsed(r+27),t[7]+=(s+l[1].baseEle)*(n.ticsPer+1)*timesUsed(r+27)}})),/Inputs|inputButton/.test(window?.event?.target.className)||buildDamageTable(e,"dps",l),c0.innerHTML=`${formatNumbers(t[0])}`,d0.innerHTML=`${formatNumbers(t[1])} / ${formatNumbers(t[2])}`,e0.innerHTML=`${formatNumbers(t[3])} / ${formatNumbers(t[4])}`,f0.innerHTML=`${formatNumbers(t[5])} / ${formatNumbers(t[6])}`,g0.innerHTML=`${formatNumbers(t[7])}`}function createTable(e){let t=document.createElement("table"),n="";for(let t=0;t<e.length;t++){n+="<tr>";for(let l=0;l<e[t].length;l++)n+="<td>"+e[t][l]+"</td>";n+="</tr>"}t.innerHTML=n,document.querySelector("#statsTableDiv").replaceChildren(t)}function buildDamageTable(e,t){const n=!document.getElementById("ammoTable").classList.contains("augInvis")&&!weaponType.value.includes("BowGun"),l=document.getElementById("dpsTable").classList.contains("augInvis")||!weaponType.value.includes("BowGun"),o=/gray/.test(document.getElementById("filterCombo").className)?document.querySelectorAll(".a"):document.querySelectorAll(".a:not(.gray)");let a=0;const s=document.querySelector(`#${t}Head`),r=document.querySelector(`#${t}Body`),i=document.createElement("table"),c=document.createElement("thead");/BowGun/.test(weaponType.value)&&"stats"!==t?c.className="tableRowRanged":"stats"!==t&&(c.className="tableRowMelee"),c.id=`${t}Head`;const u=document.createElement("tr"),d=document.createElement("tbody");d.id=`${t}Body`;if(e.splice(0,1)[0].forEach((e=>{const t=document.createElement("th"),n=document.createTextNode(e);t.appendChild(n),u.appendChild(t)})),c.appendChild(u),s.replaceWith(c),e.forEach((e=>{const n=document.createElement("tr");/BowGun/.test(weaponType.value)&&"stats"!==t?n.className="tableRowRanged":"stats"!==t&&(n.className="tableRowMelee"),Object.values(e).forEach((e=>{if("replaceME"===e)if(document.getElementById("previousWeaponType").value===weaponType.value&&o.length>0&&(window?.event?.target===dropWeapon&&"ChargeBlade"!==weaponType.value||window?.event?.target!==dropWeapon)&&"BowChargePlus"!==window?.event?.target.id&&("Bow"===weaponType.value&&document.getElementById("previousWeapon").value===dropWeapon.value||"Bow"!==weaponType.value))n.appendChild(o[a]),++a;else{const e=document.createElement("td"),t=document.createElement("input");t.type="Number",t.className=`Combo skill ${a}`,t.Max=20,"Bow"===weaponType.value&&document.getElementById("previousWeapon").value!==dropWeapon.value&&(comboTracker=[],updateComboDisplay()),0===a?(t.id="inputComboRepeat",t.Min=1,t.value=1,t.className="inputComboRepeat hitsOfSharpInputs inputs"):(t.id=a,t.className="inputs hitsOfSharpInputs",t.Min=0,t.value=0),++a,e.appendChild(t),n.appendChild(e)}else{const t=document.createElement("td"),l=document.createTextNode(e);t.appendChild(l),n.appendChild(t)}})),d.appendChild(n),r.replaceWith(d)})),i.setAttribute("id",`${t}Table`),d.className=/(BowGun)/.test(weaponType.value)?"rangedTable":"meleeTable",document.getElementById("damageContainer").className=/(BowGun)/.test(weaponType.value)?"rangedContainer":"meleeContainer",document.getElementById("ammoTable").classList.toggle("augInvis",n),document.getElementById("dpsTable").classList.toggle("augInvis",!l),/BowGun/.test(weaponType.value)||document.getElementById("ammoTable").classList.add("augInvis"),"stats"!==t&&"ammo"!==t){const[e,...n]=/BowGun/.test(weaponType.value)?[a,"a","b","c","d","e","f","g","h"]:[a,"a","b","c","d","e","f","g"];/BowGun/.test(weaponType.value)&&!/BowGun/.test(document.getElementById("previousWeaponType").value)?document.querySelectorAll("#comboCountContainer").forEach((e=>e.style.display="none")):!/BowGun/.test(weaponType.value)&&/BowGun/.test(document.getElementById("previousWeaponType").value)&&document.querySelectorAll("#comboCountContainer").forEach((e=>e.style.display="")),document.getElementById("previousWeapon").value=dropWeapon.value,document.getElementById("previousWeaponType").value=weaponType.value;for(let l=0;l<e;++l)n.forEach(((e,n)=>{document.getElementById(`${t}Body`).children[l].children[n].id=e+l,document.getElementById(`${t}Body`).children[l].children[n].className=`${e} ${l}`}));weaponType.value.includes("BowGun")||document.querySelectorAll(`tbody#${t}Body>tr>td:nth-child(2)`).forEach(((e,t)=>{const n=document.createElement("td");n.innerHTML=`<button type="button" aria-pressed="false" id="${t}" class="inputButton dec"\n >&#8681</button><button type="button" aria-pressed="false" id="${t}" class="inputButton inc">&#8679</button><output class="label">${e.textContent}</output>`,n.id=`b${t}`,n.className=`b ${t} inputContainer`,e.replaceWith(n)}))}/blue/.test(filterCombo.className)&&document.querySelectorAll(".a").forEach(((e,t)=>{"none"===document.querySelectorAll(`.${t}`)[0].style.display&&document.querySelectorAll(`.${t}`).forEach((e=>e.style.display="none"))}))}const setSpawn=()=>{document.querySelectorAll("#spawnArea>output").forEach((e=>e.remove())),info.quest[dropQuest.value].target.forEach((e=>{e.name===dropMon.value&&e.spawn.forEach((e=>{const t=document.createElement("output");t.textContent=`Spawn Area ${e.block} ${e.lot}%`,document.getElementById("spawnArea").append(t)}))}))};function monChartold(){if(setSpawn(),""!==dropQuest.value){let e=[];const t=/Bow/.test(weaponType.value)?"shot":"H"===weaponType.value[0]?"blunt":"sever",n=["Hit Zone","Sever","Blunt","Shot","Fire","Water","Thunder","Ice","Dragon"],l=document.createElement("table"),o=document.querySelector("#monTable"),a=document.createElement("tr");n.forEach((e=>{const t=document.createElement("th"),n=document.createTextNode(e);t.appendChild(n),a.appendChild(t)})),l.appendChild(a),e=Object.entries(info.monster[dropMon.value].parts).sort(((e,n)=>n[1][t]===e[1][t]&&"none"!==document.querySelector("#statsHead > tr > th:nth-child(4)").textContent?n[1][lower(document.querySelector("#statsHead > tr > th:nth-child(4)").textContent)]-e[1][lower(document.querySelector("#statsHead > tr > th:nth-child(4)").textContent)]:n[1][t]-e[1][t])),e.forEach((e=>{const t=document.createElement("tr"),n=[`${e[1].part} ${e[1].state}`].concat(Object.values(e[1]).splice(3,8));for(let e=0;e<9;++e){const l=document.createElement("td");0!==e&&(n[e]=WaterBlight.checked&&/1|2|3/.test(e)?Math.min(100,~~(Math.max(n[e],.63*n[e]+22.2)+3)):+n[e],+n[e]<14?l.setAttribute("class","F"):+n[e]<15?l.setAttribute("class","C"):+n[e]<45?l.setAttribute("class","B"):+n[e]<65?l.setAttribute("class","A"):+n[e]>=65&&l.setAttribute("class","S"),n[e]=~~n[e]);const o=document.createTextNode(n[e]);l.appendChild(o),t.appendChild(l)}l.appendChild(t)})),l.setAttribute("id","monTable"),o.replaceWith(l),Object.values(document.getElementById("monTableContainer").children).forEach((e=>{Object.values(e.children).forEach((e=>{e.className="tableRow"}))}))}}function monChart(){if(setSpawn(),""!==dropQuest.value){const e=/Bow/.test(weaponType.value)?"shot":"H"===weaponType.value[0]?"blunt":"sever",t=["Hit Zone","Sever","Blunt","Shot","Fire","Water","Thunder","Ice","Dragon"],n=document.createElement("table"),l=document.querySelector("#monTable");let o=info.monster[dropMon.value].parts.sort(((t,n)=>n[e]===t[e]&&getWeaponMR().eleType?n[getWeaponMR().eleType]-t[getWeaponMR().eleType]:n[e]-t[e]));const a=document.createElement("tr");t.forEach((e=>{const t=document.createElement("th"),n=document.createTextNode(e);t.appendChild(n),a.appendChild(t)})),n.appendChild(a),o.forEach((e=>{const l=document.createElement("tr");for(let n=0;n<9;++n){let o=0===n?`${e.part} ${e.state}`:e[lower(t[n])];const a=document.createElement("td");0!==n&&(o=WaterBlight.checked&&n<4?Math.min(100,~~(Math.max(o,.63*o+22.2)+3)):+o,+o<14?a.setAttribute("class","F"):+o<15?a.setAttribute("class","C"):+o<45?a.setAttribute("class","B"):+o<65?a.setAttribute("class","A"):+o>=65&&a.setAttribute("class","S"),o=~~o);const s=document.createTextNode(o);a.appendChild(s),l.appendChild(a)}n.appendChild(l)})),n.setAttribute("id","monTable"),l.replaceWith(n)}}function classChange(){if(Object.keys(info)){switch(document.getElementsByClassName("inputs").length>0&&comboReset(),weaponType.value){case"DualBlades":info.skills.Burst=info.skills.BurstDualBlades;break;case"Bow":info.skills.Burst=info.skills.BurstBow;break;case"LightBowGun":case"HeavyBowGun":info.skills.Burst=info.skills.BurstBowGun;break;default:info.skills.Burst=info.skills.BurstStandard}info.skills.Bombardier=/Gun|Charge/.test(weaponType.value)?info.skills.BombardierSource[weaponType.value]:[],document.querySelectorAll(`.skill:not(.${weaponType.value})`).forEach((e=>e.selectedIndex=0)),document.querySelectorAll(".classSpecific").forEach((e=>{e.style.display="",e.parentElement.style.display="",e.classList.contains(weaponType.value)?"BUTTON"===e.tagName||"DIV"===e.tagName?e.style.display="":e.parentElement.style.display="":"BUTTON"===e.tagName||"DIV"===e.tagName?e.style.display="none":e.parentElement.style.display="none"})),document.querySelectorAll("div").forEach((e=>{Object.values(e.children).some((t=>e.childElementCount<=3&&"SELECT"===t.tagName&&"none"!==e.style.display))&&e.classList.add("dropContainer")})),document.getElementById("weaponId").textContent=weaponType.value,"ChargeBlade"===weaponType.value&&meleeElements()}}function meleeElements(){"Impact Phial"===getWeaponMR().phialType?(document.getElementById("impShieldCharge").parentNode.style='display:"',document.getElementById("eleShieldCharge").parentNode.style="display:none",document.getElementById("eleShieldCharge").selectedIndex=0):"Element Phial"===getWeaponMR().phialType&&(document.getElementById("impShieldCharge").parentNode.style="display:none",document.getElementById("impShieldCharge").selectedIndex=0,document.getElementById("eleShieldCharge").parentNode.style='display:""')}function resetSkills(){document.querySelectorAll("#skillSelect>div").forEach((e=>e.remove()))}function toggleAmmoTables(){let e=document.getElementById("dpsTable").classList.contains("augInvis");document.getElementById("dpsTable").classList.toggle("augInvis",!e),document.getElementById("ammoTable").classList.toggle("augInvis",e)}function calculateAmmoFrames(e){let t=/Sub-Lv|Explosion| Procs|\(RF\+\d\)/g.test(e.attackName)?e.attackName.replace(/Sub-| Explosion| \(RF\+\d\) Procs| Procs| \(RF\+\d\)/g,""):e.attackName;t=/(?<!Lv)\d/.test(t)?`${t.slice(0,t.length-1)}Lv${t.slice(-1)}`:t;const n={};n.ammoIncrease=info.ammo.AmmoUp[t][AmmoUp.selectedIndex],n.recoilSpeed=info.ammo.recoil[t][Math.max(0,Math.min(5,e.recoil-1+document.getElementById("RecoilDown").selectedIndex+(info.skills.BowgunBarrel[document.getElementById("BowgunBarrel").selectedIndex??0].Silencer>0?document.getElementById("Tune-Up").selectedIndex+info.skills.BowgunBarrel[document.getElementById("BowgunBarrel").selectedIndex??0].Silencer:0)-(document.getElementById("CriticalFirePower").selectedIndex>0?2:0)))],n.recoilSpeed=/\(RF\+\d\)/.test(e.attackName)?`${n.recoilSpeed} ${e.attackName.match(/\(RF\+\d\)/)[0]}`:n.recoilSpeed,n.recoilFrames=info.ammo.recoil.frames[n.recoilSpeed],n.reloadSpeed=info.ammo.reload[t][Math.max(0,Math.min(8,e.reload+document.getElementById("ReloadSpeed").selectedIndex+info.skills.BowgunBarrel[document.getElementById("BowgunBarrel").selectedIndex??0].reload+(0===document.getElementById("BowgunBarrel")?.selectedIndex&&document.getElementById("Tune-Up").selectedIndex>0?1:0)-(document.getElementById("ElementalReload").selectedIndex>0?2:0)))],n.reloadFrames=info.ammo.reload.frames[n.reloadSpeed],n.clipSize=e.clipSize[e.isUsed]+n.ammoIncrease,n.spareShot=Math.max(0,info.skills.SpareShot[SpareShot.selectedIndex]+Number(spareAdjust.value)),/(?<!snipe.*)explosion/.test(t)&&document.getElementById("Bombardier").selectedIndex>0&&(n.spareShot+=info.skills.Bombardier[t.match(/Sticky|Wyvern/)[0]][2]);return n.shotsPerMinBase=shotsCheck(n.recoilFrames/30,n.reloadFrames/30,e.clipSize[e.isUsed],60),n.shotsPerMin=shotsCheck(n.recoilFrames/30,n.reloadFrames/30,n.clipSize,60,100/n.spareShot),n.shotsPerGain=`${Number.parseFloat(100*(n.shotsPerMin/n.shotsPerMinBase-1)).toFixed(2)}%`,n.ticsAdjust=e.ticsPer+1,/Pierce Lv|Pierce [1-3]/.test(t)?n.ticsAdjust*=JSON.parse(pierceAdjust.value)[0]:/Pierc/.test(t)&&(n.ticsAdjust*=JSON.parse(pierceAdjust.value)[1]),n}function comboReset(){document.getElementsByClassName("inputs").length&&(/BowGun/.test(document.getElementById("previousWeaponType").value)||""===document.getElementById("previousWeaponType").value||(document.querySelectorAll(".comboHits").forEach((e=>e.remove())),document.querySelectorAll("#dpsBody>tr:nth-child(1)>td:nth-child(n+3)").forEach((e=>e.value=0)),document.querySelectorAll(".inputs").forEach((e=>e.value=0)),document.querySelectorAll(".inputComboRepeat").forEach((e=>e.value=1)),comboTracker=[]))}function filterTableForComboAttacks(){document.querySelectorAll(".inputs").forEach(((e,t)=>{/blue/.test(filterCombo.className)&&("0"===e.value||e.style.display.includes("none"))?document.getElementsByClassName([t]).style.display="none":document.getElementsByClassName([t]).style.display="''"}))}function increaseComboCount(e){Number(document.querySelectorAll(".inputs")[e?.target.id].value)<20&&(++document.querySelectorAll(".inputs")[e?.target.id].value,dataCompile())}function decreaseComboCount(e){("0"===e?.target.id&&Number(document.querySelectorAll(".inputs")[e?.target.id].value)>1||Number(e?.target.id)>0&&Number(document.querySelectorAll(".inputs")[e?.target.id].value)>0)&&(--document.querySelectorAll(".inputs")[e?.target.id].value,dataCompile())}document.querySelectorAll("select.demon").forEach((e=>{e.addEventListener("change",(e=>{e?.target.selectedIndex>0&&(document.querySelectorAll(`.demon:not(#${e?.target.id})`)[0].selectedIndex=0,document.querySelectorAll(`.demon:not(#${e?.target.id})`)[1].selectedIndex=0)}))})),document.querySelectorAll(`#${dropWeapon.id}, #${weaponType.id}`).forEach((e=>{e.addEventListener("change",(e=>{e.target!==weaponType&&"ChargeBlade"!==weaponType.value||classChange()}))})),document.querySelectorAll(`#${dropWeapon.id}, #${weaponType.id}`).forEach((e=>{e.addEventListener("change",(()=>{if("Bow"===weaponType.value){document.querySelectorAll("#BowCoating>option").forEach((e=>e.remove()));const e=[];getWeaponMR().coatings.forEach((t=>{const n=document.createElement("option");n.textContent=t,document.getElementById("BowCoating").append(n),e.push(info.skills[t])})),info.skills.BowCoating=e}}))})),document.addEventListener("keypress",(e=>{e.key===["b","u","i","l","d"][Math.min(4,buildKeys)]&&++buildKeys<4||(buildKeys<4?buildKeys=0:/0-9/.test(e.key)?armorCount+=+e.key:"Enter"===e.key&&(getSetBuilds(Math.max(Math.min(0===armorCount?7:armorCount,15),4)),armorCount=0,buildKeys=0))})),document.addEventListener("keypress",(e=>{if(!(e.key===["t","e","s","t"][Math.min(3,testKeyCount)]&&++testKeyCount<3))if("Enter"===e.key&&testKeyCount>=3)build("f"!==armorCount),armorCount="",testKeyCount=0;else{if(/t|f/.test(e.key)&&testKeyCount>=3)return void(armorCount=e.key);if(testKeyCount<3)return void(testKeyCount=0)}})),document.getElementById("BowChargePlus").addEventListener("change",(()=>{comboReset(),updateComboDisplay()})),document.querySelectorAll(".scroll").forEach((e=>{"IMG"!==e.tagName&&"BUTTON"!==e.tagName||e.addEventListener("mousedown",(e=>{Object.values(document.querySelectorAll("img.scroll")).forEach((e=>{e.classList.toggle("vis"),e.classList.toggle("invis")})),document.querySelector("img#redScroll")?.classList.contains("invis")?(info.skills.MailofHellfire=info.skills.MailofHellfireSource.blue,info.skills.Dereliction=info.skills.DerelictionSource.blue):(info.skills.MailofHellfire=info.skills.MailofHellfireSource.red,info.skills.Dereliction=info.skills.DerelictionSource.red)}))})),document.getElementById("weaponFilter").addEventListener("click",(e=>{e.target.classList.toggle("blue","gray")})),document.querySelectorAll("input.check").forEach((e=>e.addEventListener("mousedown",(e=>{if(/DemonDrug/.test(e?.target.id)&&("DemonDrug"===e?.target.id?document.getElementById("MegaDemonDrug").checked=!1:document.getElementById("DemonDrug").checked=!1),"filterCombo"!==e?.target.id){if("WaterBlight"===e?.target.id){const e=dropHZ.selectedIndex;monChart(),dropHZ.selectedIndex=e}}else e?.target===filterCombo&&filterTableForComboAttacks()})))),info.augs={attackAug:[[0,0],[2,5],[4,10],[6,15],[8,20]],affinityAug:[[0,0],[3,5],[6,10],[8,15]],elementalAug:[[0,0],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0]],rampageAug:[[0,0],[3,1],[7,2]],sharpnessAug:[[0,0],[3,1],[5,2],[7,3]]},info.augIndex={attackAug:0,affinityAug:0,elementalAug:0,rampageAug:0,sharpnessAug:0},document.getElementById("damageTable").addEventListener("mousedown",(e=>{e.target.classList.contains("inputButton")&&(e.target?.classList.contains("dec")?decreaseComboCount(e):increaseComboCount(e),document.getElementById("comboCountContainer")?.classList.remove("augInvis"))}));const quriousAugsDec=e=>{let t=+document.getElementById("weaponQurious").value.slice(-3,-2),n=e.parentElement.querySelector("output.label"),l=info.augIndex[e.classList[0]];if(0===l)return;let o=t-(info.augs[e.classList[0]][l-1][0]-info.augs[e.classList[0]][l][0]);l=--info.augIndex[e.classList[0]],n.textContent=info.augs[e.classList[0]][l][0],n.nextElementSibling.textContent="+"+info.augs[e.classList[0]][l][1],document.getElementById("weaponQurious").textContent=`Remaining Augments ${9-o}/9`},quriousAugsInc=e=>{let t=info.augIndex[e.classList[0]];if(!info.augs[e.classList[0]][t+1])return;let n=0;Object.entries(info.augs).forEach((([e,t])=>n+=t[info.augIndex[e]][0]));let l=n+(info.augs[e.classList[0]][t+1][0]-info.augs[e.classList[0]][t][0]);if(l>9)return;let o=e.parentElement.querySelector("output.label");t=++info.augIndex[e.classList[0]],o.textContent=info.augs[e.classList[0]][t][0],o.nextElementSibling.textContent="+"+info.augs[e.classList[0]][t][1],document.getElementById("weaponQurious").textContent=`Remaining Augments ${9-l}/9`};function saveState(e=[[],[],[],[],[],[]]){document.getElementsByTagName("select").forEach((t=>{e[0].push(t.selectedIndex)})),document.querySelectorAll("input.check").forEach((t=>{e[1].push(t.checked)})),document.getElementsByClassName("inputs").forEach((t=>{e[2].push(t.value)})),e[3].push(comboTracker),document.getElementsByClassName("scroll").forEach((t=>{e[4].push(t.className)})),e[5]="",document.querySelectorAll("output.augLabel").forEach((t=>e[5]+=t.textContent));const t=document.createElement("input");return t.setAttribute("value",JSON.stringify(e)),t.select(),t.setSelectionRange(0,99999),navigator.clipboard.writeText(t.value),e}function loadState(e,t=!1,n=window.event){const l=document.querySelectorAll("select");l[0].selectedIndex=e[0][0],classChange(),weaponSelect();for(let t=0;t<e[5].length;t++)document.querySelectorAll("output.augLabel")[t].textContent=e[5][t];l[3].selectedIndex=e[0][3],rampageSelect(),l[80].selectedIndex=e[0][document.querySelectorAll("select").length-10],document.getElementById("dropQuest").selectedIndex=1,partSelect(),healthSelect(),document.querySelectorAll("select").forEach(((t,n)=>{0!==n&&3!==n&&n!==document.querySelectorAll("select").length-10&&(t.selectedIndex=e[0][n])})),document.querySelectorAll("input.check").forEach(((t,n)=>{t.checked=e[1][n]})),document.querySelectorAll(".inputs").forEach(((t,n)=>{t.value=e[2][n]})),document.querySelectorAll(".scroll").forEach(((t,n)=>{t.className=e[4][n]})),info.skills.MailofHellfire=document.querySelectorAll("#redScroll").classList.contains("invis")?info.skills.MailofHellfireSource.blue:info.skills.MailofHellfireSource.red,info.skills.Dereliction=document.querySelectorAll("#redScroll").classList.contains("invis")?info.skills.DerelictionSource.blue:info.skills.DerelictionSource.red,[...comboTracker]=e[3][0],document.querySelectorAll("input:not(comboRepeat)").forEach((e=>{if(e.value>0){let t=document.querySelectorAll(".inputs")[e.id]?.value??0-timesUsed(e.id);for(;t>0;)comboTracker.push(e.id),--t;for(;t<0;)comboTracker.splice(comboTracker.lastIndexOf(e.id),1),++t}})),updateComboDisplay()}function weaponTypeSelect(){populateDropDowns(weaponTypes,weaponType)}function weaponSelect(){Object.values(dropWeapon.children).forEach((e=>e.remove()));let e=[];e=weaponFilter.className.includes("blue")?Object.entries(info[weaponType.value].weapons).filter((e=>e[1].rampageSlots>0&&e[1].baseRaw>=290)):Object.values(info[weaponType.value].weapons),e.forEach((e=>{const t=document.createElement("option");t.value=e[0],t.textContent=e[1].weapon,dropWeapon.append(t)}))}function rampageSelect(){const e=[],[...t]=getWeaponMR().decos;if(t.forEach(((n,l)=>{n>0&&(e.push(l+1),--n),t[l-1]>1?e.push(l):t[l+1]>1?(e.push(l+2),--t[l+1]):t[l-2]>2?(e.push(l-1),--t[l-2]):t[l+2]>2&&(e.push(l+3),--t[l+2])})),setDecoDisplay("weapon",e.reverse()),document.querySelectorAll("#weaponRampage>*").forEach((e=>e.style.display="none")),document.getElementById("weaponRampage0").style.display="",getWeaponMR().rampageSlots){const e=[];document.getElementById("rampImg").src=document.getElementById("rampImg").src.replace(/ramp\d/,`ramp${Math.min(3,getWeaponMR().rampageSlots+info.augIndex.rampageAug)}`),Object.keys(info.rampage.rampageDecos).forEach((t=>{Number(t.slice(-1))<=Math.min(3,getWeaponMR().rampageSlots+info.augIndex.rampageAug)&&e.push(info.rampage.rampageDecos[t])})),populateDropDowns(e,document.getElementById("weaponRampage0"))}else document.querySelectorAll("#weaponRampage>*").forEach((e=>{e.selectedIndex=0,e.style.display="none"})),document.getElementById("weaponRampage0").style.display="",/Rampage/.test(getWeaponMR().weapon)?info.rampage[getWeaponMR().weapon].Rampage.forEach(((e,t)=>{document.querySelector("#weaponRampage").children[t].style.display="",populateDropDowns(Object.values(e),document.querySelector("#weaponRampage").children[t])})):getWeaponMR().rampage.forEach((e=>{const t=document.createElement("option");t.value=info.rampage.keys2[e],t.textContent=info.rampage.keys2[e],document.getElementById("weaponRampage0").append(t)}))}function populateDropDowns(e,t,n=e){t?.childElementCount&&Object.values(t.children).forEach((e=>e.remove())),e.forEach(((e,l)=>{const o=document.createElement("option");o.value=n[l],o.textContent=e,t.append(o)}))}function monsterSelect(){populateDropDowns(Object.keys(info.monster),dropMon),dropMon.selectedIndex=Object.keys(info.monster).indexOf("Toadversary")}document.querySelectorAll(".augButton.inc").forEach((e=>e.addEventListener("mousedown",(e=>quriousAugsInc(e.target))))),document.querySelectorAll(".augButton.dec").forEach((e=>e.addEventListener("mousedown",(e=>quriousAugsDec(e.target))))),document.querySelectorAll("#weaponFilter,button.rampageAug").forEach((e=>e.addEventListener("click",(()=>{rampageSelect()}))));const getEleHZ=e=>info.monster[dropMon.value].parts[dropHZ.selectedIndex][lower(e)];function getRawHZ(e){return void 0===info.monster[dropMon.value].parts[dropHZ.selectedIndex][lower(e)]?100:WaterBlight.checked?Math.min(100,~~(Math.max(info.monster[dropMon.value].parts[dropHZ.selectedIndex][lower(e)],.63*info.monster[dropMon.value].parts[dropHZ.selectedIndex][lower(e)]+22.2)+3)):info.monster[dropMon.value].parts[dropHZ.selectedIndex][lower(e)]}const getUsedAttacks=(e=weaponType.value)=>{let t={};if("InsectGlaive"===weaponType.value)return t=Object.fromEntries(Object.entries(info.InsectGlaive.attacks).filter((e=>!/Sever|Blunt|Kinsect|Dust|Powder|Mark/.test(e)))),{...t};if("ChargeBlade"===weaponType.value){const e="Impact Phial"===getWeaponMR().phialType?"Element Phial|Elemental Phial":"Impact Phial",n=new RegExp(`${e}`);return t=Object.fromEntries(Object.entries(info.ChargeBlade.attacks).filter((e=>!n.test(e)))),{...t}}if("Bow"===weaponType.value){let e="";const n=1===document.getElementById("BowChargePlus").selectedIndex&&getWeaponMR().baseCharge<4?getWeaponMR().baseCharge+1:getWeaponMR().baseCharge;getWeaponMR().bowShot.forEach(((t,l)=>{l<n&&(e+=`|Lv${t.match("[1-5]")[0]} ${t.match("Normal|Rapid|Pierce|Spread")[0]}`)}));const l=new RegExp([e.slice(1)]);let o=Object.entries(info.Bow.attacks).filter((e=>l.test(e[0])));return o=[].concat(Object.entries(info.Bow.attacks).splice(0,1),o),o=o.concat(Object.entries(info.Bow.attacks).splice(136)),t=Object.fromEntries(o),{...t}}if("Gunlance"===weaponType.value)return t=Object.fromEntries(Object.entries(info.Gunlance.attacks).splice(0,27)),{...t};if("LightBowGun"===weaponType.value||"HeavyBowGun"===weaponType.value){let e=info.ammo.keys.map(((e,t)=>e.filter((e=>"LightBowGun"===weaponType.value&&getWeaponMR().isRapidFire.includes(t+1)?/RF\+/.test(e):getWeaponMR().clipSize[t+1]>0&&!/RF\+/.test(e))))).toString().split(/,+/);return e=e.concat(Object.keys(info.ammo).filter((e=>"LightBowGun"===weaponType.value?/lbg|Wyvern Blast(?! before)/.test(e):/hbg|Wyverns/.test(e)))),t=Object.fromEntries(Object.entries(info.ammo).filter((t=>timesUsed(t[0],e)>0))),{...t}}return{...info[e].attacks}},getAttacks=(e=weaponType.value)=>({...info[e].attacks}),getWeapon=()=>info[weaponType.value].weapons[dropWeapon.selectedIndex].rampageSlots>0?getWeaponMR():getRampageSkills();function partSelect(){document.querySelectorAll("#dropHZ>option").forEach((e=>e.remove()));const e=[];info.monster[dropMon.value].parts.forEach((t=>{e.push([`${t.part} ${t.state}`])})),populateDropDowns(e,dropHZ)}function questSelect(){document.querySelectorAll("#HR>option").forEach((e=>e.remove())),document.querySelectorAll("#MR>option").forEach((e=>e.remove()));Object.values(info.quest).filter((e=>{if(e.target.some((e=>e.name===dropMon.selectedOptions[0].textContent)))return e})).forEach((e=>{e.target.forEach(((t,n)=>{if(t.name===dropMon.value){const t=document.createElement("option");t.value=e.quest,t.textContent=e.quest,document.getElementById(e.rank).append(t)}}))})),updateQuest(document.querySelectorAll("#MR>option")?.length>0?document.querySelectorAll("#MR>option")[0].textContent:document.querySelectorAll("#HR>option")[0].textContent),document.querySelectorAll("MR>option")?.length?document.getElementById("MR")?.classList.remove("augInvis"):document.getElementById("MR")?.classList.add("augInvis"),document.querySelectorAll("HR>option")?.length?document.getElementById("HR")?.classList.remove("augInvis"):document.getElementById("HR")?.classList.add("augInvis")}function healthSelect(){let e=1;switch(document.getElementById("players").selectedOptions[0].value){case"1p":e=1;break;case"2p":e=1.35;break;case"3p":e=1.7;break;case"4p":e=2}info.quest[dropQuest.value].target.forEach((t=>{if(t.name===dropMon.value){populateDropDowns(t.hp.map((t=>t*e)),document.getElementById("health"))}}))}function isUnique(e,t,n){return n.indexOf(e)===t}function showMenu(){document.querySelectorAll(".menu").forEach((e=>e.classList.remove("augInvis")));let e=document.querySelectorAll("#MR>option").length>0;document.getElementById("MR").parentElement.classList.toggle("augInvis",!e);let t=document.querySelectorAll("#HR>option").length>0;document.getElementById("HR").parentElement.classList.toggle("augInvis",!t)}function updateQuest(e){document.getElementById("dropQuest").selectedOptions[0].value=e,document.getElementById("dropQuest").selectedOptions[0].textContent=e,document.getElementById("questDiv")?.classList.add("augInvis")}const capitalAll=e=>e.replace(/(?<!\w)\w/g,(e=>e.toUpperCase())),capital=(e,t=0)=>e[t].toUpperCase()+e.slice(1),lower=e=>e[0].toLowerCase()+e.slice(1);function shotsCheck(e,t,n,l=60,o=0){let a=0;a+=o;let s=0,r=0;for(;s<=l;){for(let t=0;t<n;++t)s+=e,r+=s<=l?1:0,r>=a&&0!==o&&o!==1/0&&(--t,a+=o);s+=t}return r}function getHealthPools(e=[[],[],[],[]]){return quest=info.quest.filter((e=>e.quest===dropQuest.value)),quest.target[dropMon.value].hp.forEach((t=>{e[0].push(t),e[1].push(~~(1.35*t)),e[2].push(~~(1.7*t)),e[3].push(~~(2*t))})),e}function resetSkillDescription(){if(""!==lastEvent){if(lastEvent===document.getElementById("BowCoating")&&"Bow"!==weaponType.value)return;let e=[];Object.values(lastEvent.children).some((e=>"OPTGROUP"===e.tagName))?(e=document.querySelectorAll(`${lastEvent.id}>*>*`),e.splice(-2),e.splice(0,0,lastEvent[0])):e=Object.values(lastEvent.children),e.forEach(((e,t)=>{let n="";if(lastEvent===BowCoating)n=getWeaponMR().coatings[t];else if(lastEvent===document.getElementById("BowgunBarrel"))n=["----","Long","Power","Silencer","Guard-Up"][t];else if(lastEvent===Dereliction)n=["----","Lv-1-1","Lv-1-2","Lv-1-3","Lv-2-1","Lv-2-2","Lv-2-3","Lv-3-1","Lv-3-2","Lv-3-3"][t];else{let e=t+0;"OPTGROUP"===lastEvent.children[1].tagName&&0!==t&&(e="Burst"===lastEvent.id&&t>=2?t-1:t%3==0?3:t%3),n="Burst"===lastEvent.id&&1===t?"Base Bonus":`Lv-${e}`}e.textContent=0===t?"----":n})),lastEvent=""}}function setSkillDescriptions(e){e.classList.contains("skill")&&(info.skills[e.id].forEach(((t,n)=>{let l;if(0!==n)if("RecoilDown"===e.id||"ReloadSpeed"===e.id)l=`${e.id.slice(0,6)} ${e.id.slice(6)} +${n}`;else if("AmmoUp"===e.id||"SpareShot"===e.id){l=`${n}: ${("AmmoUp"===e.id?["No Change","Lv2 & Ele Ammo","Lv3 & Dragon Ammo"]:["Spare Shot +5%","Spare Shot +10%","Spare Shot +20%"])[n-1]}`}else if("Marksman"===e.id)l=`${n}: ${["Chance 20% Raw + 5% EFR +1%","Chance 20% Raw+10% EFR +2%","Chance 60% Raw + 5% EFR +3% ","Chance 40% Raw+10% EFR +4%"][n-1]}`;else if("Bombardier"===e.id)l="HeavyBowGun"!==weaponType.value?`${n}: Raw +${info.skills.Bombardier[n][0]}% EFR +${info.skills.Bombardier[n][1]}`:["Bombardier","1: Raw + 10% EFR + 10%","2: Sticky+10% Wyvern+15%","3: Raw + 20% EFR + 16%","4: Raw + 25% EFR + 17%"][n];else if("BowgunBarrel"===e.id)l=["Barrels","Long: Raw + 5%","Power: Raw + 12.5%","Silencer: Recoil Down +1","Shield: Guard Up"][n];else if("CriticalFirePower"===e.id)l=["-","Normal +30% Spread +20% Pierce +10% Recoil -2"][n];else{let o="";if(t.BR>0||t.PRM>1||t.BRM>1){if(o="Raw",t.BR>0&&(o+=/\d\.?\d/.test(t.BR)?`+${t.BR}`:` + ${t.BR}`),t.BRM>1){const e=/\.[1-8]/.test(100*(t.BRM-1))?(100*(t.BRM-1)).toFixed(1):(100*(t.BRM-1)).toFixed(0);o+=/\d\.?\d/.test(e)?`+${e}%`:` + ${e}%`}if(t.PRM>1){const n=/\.[1-8]/.test(100*(t.PRM-1))?(100*(t.PRM-1)).toFixed(1):(100*(t.PRM-1)).toFixed(0);o+="CriticalBoost"===e.id&&/\d\.?\d/.test(n-25)?`+${n-25}%`:"CriticalBoost"===e.id?` + ${n-25}%`:/\d\.?\d/.test(n)?`+${n}%`:` + ${n}%`}}let a="";if(t.BE>0||t.PEM>1||t.BEM>1){if(a="Ele",t.BE>0&&(a+=/\d\.?\d/.test(t.BE)?`+${t.BE}`:` + ${t.BE}`),t.BEM>1){const e=/\.[1-8]/.test(100*(t.BEM-1))?(100*(t.BEM-1)).toFixed(1):(100*(t.BEM-1)).toFixed(0);a+=/\d\.?\d/.test(e)?`+${e}%`:` + ${e}%`}if(t.PEM>1){const e=/\.[1-8]/.test(100*(t.PEM-1))?(100*(t.PEM-1)).toFixed(1):(100*(t.PEM-1)).toFixed(0);a+=/\d\.?\d/.test(e)?`+${e}%`:` + ${e}%`}}const s=t.aff>0&&/\d\.?\d/.test(t.aff)?`Aff+${t.aff}`:t.aff>0?`Aff + ${t.aff}`:"";if(o=Object.prototype.hasOwnProperty.call(t,"Sharp")&&t.Sharp<1?`Sharp +${100*t.Sharp}%`:o,o=Object.prototype.hasOwnProperty.call(t,"Sharp")&&t.Sharp>1?`Sharp +${t.Sharp}`:o,o=""===o&&""===a&&""===s?"No Change":o,e===BowCoating){l=`${getWeaponMR().coatings[n]}: ${[o,a,s].join(" ")}`}else{let t=n+0;"OPTGROUP"===e.children[1].tagName&&0!==n&&(t="Burst"===e.id&&n>=2?n-1:n%3==0?3:n%3),l=`${t}: ${[o,a,s].join(" ")}`}}else l=e.id;document.getElementById(e.id)[n].textContent=l})),lastEvent=e)}function getStats(e){return e.getSkills.forEach((t=>{e.BRM*=+t.BRM,e.BR+=+t.BR,e.PRM*=+t.PRM,e.BEM*=+t.BEM,e.BE+=+t.BE,e.PEM*=+t.PEM,e.aff+=+t.aff})),{...e}}function partSelector(){document.querySelectorAll("dropHZ>*").forEach(((e,t)=>{e.textContent===(info[weaponType.value].weapons[dropWeapon.selectedIndex].rampageSlots>0?getWeaponMR():getRampageSkills()).eleType&&(document.getElementById("dropHZ").selectedIndex=t)}))}function formatNumbers(e){return e.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1,")}document.querySelectorAll(".buildSkills").forEach((e=>e.addEventListener("mousedown",(e=>{(""===lastEvent||lastEvent!==e?.target||e.target.className.includes("augment"))&&(""!==lastEvent&&resetSkillDescription(),e.target.classList.contains("skill")&&setSkillDescriptions(e?.target),"INPUT"===e.target.tagName&&e.target.className.includes("skillInput")&&(lastEvent=e.target))})))),document.querySelectorAll("select.skill").forEach((e=>e.addEventListener("change",(e=>{resetSkillDescription(),e?.target.blur()}))));const createSkillSelections=(e,t=0,n=!0)=>{if("Skill Selector"===e)return;if(null!==document.getElementById(`${e}Select`))return void document.getElementById("dropSkills").after(document.getElementById(`${e}Select`));const l=document.createElement("div"),o=document.createElement("label");o.className=`label ${e} skillInput`,o.textContent=e;const a=document.createElement("output");a.className=`skillInput ${e}`,a.setAttribute("max",info.types.maxDeco[e]),a.setAttribute("min","0"),a.textContent=`Lv-${t}`;const s=document.createElement("button");s.type="button",s.setAttribute("aria-pressed","false"),s.id=`${e}Dec`,s.className=`skillInput ${e} dec`,s.innerHTML+="&#8681";const r=document.createElement("button");r.type="button",r.setAttribute("aria-pressed","false"),r.id=`${e}Inc`,r.className=`skillInput ${e} inc`,r.innerHTML+="&#8679",l.appendChild(o),l.appendChild(a),l.appendChild(s),l.appendChild(r),l.id=`${e}Select`,document.getElementById("dropSkills").after(l)},getSkillSelects=()=>{document.querySelectorAll("select.skill").forEach((e=>{e.selectedIndex>0&&createSkillSelections(e.id,e.selectedIndex)}))};document.getElementById("dropSkills")?.addEventListener("change",(e=>{document.getElementById(e.target.value)?.className.includes("classSpecific")&&!document.getElementById(e.target.value)?.className.includes(weaponType.value)||createSkillSelections(e.target.value,info.types.maxDeco[e.target.value])})),Object.values(document.getElementsByClassName("inc qurious")).forEach((e=>e.addEventListener("mousedown",(e=>{document.getElementById(`${e.target.classList[0]}Qurious`).classList.remove("augInvis")})))),Object.values(document.getElementsByClassName("dec qurious")).forEach((e=>e.addEventListener("mousedown",(e=>{document.getElementById(`${e.target.classList[0]}Qurious`).classList.add("augInvis")})))),document.querySelector("#weaponSelects > button.weapon.dec").addEventListener("mousedown",(()=>{document.getElementById("augToggle").classList.add("augInvis")})),document.getElementById("skillSelect").addEventListener("mousedown",(e=>{if(e.target.classList.contains("skillInput")){const t=e.target.className.split(" ")[1];let n=+document.querySelector(`output.${t}`)?.textContent.match(/(?<=Lv-)\d/)[0];"BUTTON"===e.target.tagName&&(e.target.classList.contains("dec")?0===n?e.target.parentElement.remove():document.querySelector(`output.${t}`).textContent="Lv-"+(n-=1):e.target.classList.contains("inc")&&(document.querySelector(`output.${t}`).textContent=`Lv-${n<info.types.maxDeco[t]?n+=1:n}`)),document.getElementById("chest")?.childElementCount}}));const addPoints=([e,t])=>{document.querySelector(`output.${e}`)?document.querySelector(`output.${e}`).textContent=`Lv-${Math.min(info.types.maxDeco[e],document.querySelector(`output.${e}`)?.textContent.match(/(?<=Lv-)\d/)[0]+ +t)}`:createSkillSelections(e,t)},getCurrentArmorSkills=(e={})=>(Object.keys(info.armor).forEach((t=>{Object.values(document.querySelectorAll(`#${t}Skills>output`)).forEach((t=>{const n=t.value?.split(" ")[0].split("\n")[0],l=+t.value.slice(-2);l&&(e[n]?e[n]+=l:e[n]=l)}))})),e),getCurrentSelectedSkills=(e={})=>(Object.values(document.querySelectorAll("select.armorDisplay,select.charm")).map((t=>{const n=t.selectedOptions[0].textContent?.slice(0,-3).trim(),l=+t.selectedOptions[0].textContent?.slice(-2);l>0&&(e[n]?e[n]+=l:e[n]=l)})),e),updateSelectedSkills=()=>{let e=getCurrentSelectedSkills();return e=getCurrentArmorSkills(e),document.querySelectorAll("#raw select").forEach((t=>t.selectedIndex=e[t.id]?Math.min(e[t.id],info.types.maxDeco[t.id]?info.types.maxDeco[t.id]:info.skills[t.id].length-1):0)),e};function armorSelect(){info.armor&&Object.entries(info.armor).forEach((e=>{let t="";const n=document.getElementById(e[0]);e[1].forEach(((e,n)=>t+=`<option value=${n}>${e.name}</option>`)),n.innerHTML=t}))}const resetPoints=(e,t=0)=>{Object.values(document.querySelectorAll(`#${e.id}>select`)).forEach((e=>e.selectedIndex=-1)),getRemainingPoints(e)},hideShowMenu=e=>{const t=e.className.split(" ")[0];e.className.includes("inc")?document.getElementById(`${t}Qurious`)?.classList.remove("augInvis"):document.getElementById(`${t}Qurious`).classList.add("augInvis")},setCharmsAvailableDecoSlots=e=>{const t=document.getElementById(1==+e.id.slice(-1)?`${e.id.slice(0,-1)}2`:`${e.id.slice(0,-1)}1`);e.selectedOptions[0].textContent.slice(0,-3)===t.selectedOptions[0].textContent.slice(0,-3)&&(t.selectedIndex=0);const n=[],l=getGrade(t?.value,e.value);if(l!==document.getElementById(`${e.id.slice(0,5)}Decos`).value){switch(document.getElementById(`${e.id.slice(0,5)}Decos`).value=l,l){case"S":n.push(2,1,1);break;case"A":n.push(3,1,1);break;default:n.push(3,2,1)}setDecoDisplay(e.id.slice(0,5),n)}},getArmor=e=>{for(let t=0;t<info.armor[e].length;t++)if(info.armor[e][t].name.includes(document.getElementById(e).selectedOptions[0].textContent))return info.armor[e][t]},getRemainingPoints=(e,t=0)=>{const n=e.id.slice(0,-7),l=getArmor(n);t+=l.quriousPoints;for(let n=0;n<6;n++){const l=document.querySelectorAll(`#${e.id}>select.augment`)[n];t+ +l.value<0&&(l.selectedIndex=0,document.querySelectorAll(`#${e.id}>select.augmentType`)[n].selectedIndex=0),t+=+l.value}return e.firstElementChild.textContent=`Remaining Points ${t}/${l.quriousPoints}`,t},setArmorSkillsDisplay=(e=Object.keys(info.armor))=>{Object.values(e).forEach((e=>{if(""===e)return;const t=document.getElementById(e);if(t){let n=getArmor(e);const l=[],[...o]=n.decos;o.forEach(((e,t)=>{e>0&&(l.push(t+1),--e),o[t-1]>1?l.push(t):o[t+1]>1?(l.push(t+2),--o[t+1]):o[t-2]>2?(l.push(t-1),--o[t-2]):o[t+2]>2&&(l.push(t+3),--o[t+2])})),l.reverse();const a=document.querySelectorAll(`#${e}Qurious>select.augmentType`),s=document.querySelectorAll(`#${e}Qurious>select.augment`),r=JSON.parse(JSON.stringify(n.skills));for(let e=0;e<6;++e)if(s?.length>1&&s[e].selectedIndex>0&&(2===a[e].selectedIndex||4===a[e].selectedIndex)){const t=s[e].selectedOptions[0].textContent.match(/^\S+/)[0];r[t]?r[t]+=a[e].selectedIndex-3:r[t]=1}else if(a?.length>1&&s[e].selectedIndex>0&&3===a[e].selectedIndex){let t=s[e].selectedIndex;for(let e=0,n=-1;t>0&&n<3;)if(n<2&&!l[n+1]&&(l[n+1]=0),0!==e){if(1===e&&l[n]<4){const e=Math.min(t,4-l[n]);l[n]+=e,t-=e}++n}else 3==++n?(e=1,n=0):0===l[n]&&(++l[n],--t)}t.nextElementSibling.textContent="",Object.entries(r).forEach((e=>t.nextElementSibling.innerHTML+=`<img class="armorImg armorDeco rampage" src="./icons/skill.png"><output>${e[0].match(/^\S+/)[0]} +${e[1]}</output>`)),t.nextElementSibling.id=`${e}Skills`,setDecoDisplay(e,l)}}))},ChangeDropdownOptions=e=>{const t=e.classList.contains("augmentType")?e:e.previousElementSibling,n=e.classList.contains("augmentType")?e.nextElementSibling:e,l=e.parentElement.id.slice(0,-7),o=n.selectedIndex;for(;n.firstChild;)n.removeChild(n?.firstChild);const a=document.createElement("option");a.value=0,a.textContent=" ---- ",n.appendChild(a);const s=getRemainingPoints(e.parentElement);switch(t.value){case"-Def":for(let e=1;e<=5;e+=2){const t=document.createElement("option");t.value=e,t.textContent=e,n.appendChild(t)}break;case"-Skill":document.querySelectorAll(`#${l}Skills>output`).forEach((e=>{const t=document.createElement("option");t.value=10,t.textContent=`${e.textContent.split("\n")[0].split(" ")[0]} 10`,t.classList.toggle("augInvis",+e.textContent.slice(-2)<=0),n.appendChild(t)}));break;case"+Skill":const e=document.querySelectorAll(`#${l}Skills>output`);Object.entries(info.types.qurious).forEach((t=>{const l=document.createElement("option");l.value=-t[1],l.textContent=`${t[0]} -${t[1]}`,l.classList.toggle("augInvis",t[1]>s||e.length>=5&&!Object.values(e).some((e=>e.textContent.includes(t[0])))),n.appendChild(l)}));break;case"+Slots":for(let e=1;e<=3;e++){const t=-6*e,l=document.createElement("option");l.value=t,l.textContent=`${e} Slot ${t}`,l.classList.toggle("augInvis",s<t),n.appendChild(l)}}e.className.includes("Type")?n.selectedIndex=0:n.selectedIndex=o},updateAugmentOptions=e=>{const t=e.classList.contains("augmentType")?e:e.previousElementSibling,n=e.classList.contains("augmentType")?e.nextElementSibling:e,l=e.parentElement.id.slice(0,-7),o=getRemainingPoints(n.parentElement),a=Object.values(document.querySelectorAll(`#${l}Skills>output`));switch(t.value){case"-Skill":a.forEach(((e,t)=>{if(!n.children[t+1])return;const l=+e.textContent.split(" ")[1]<=0&&t+1!==n.selectedIndex;n.children[t+1]?.classList.toggle("augInvis",l),n.children[t+1].disabled=l}));break;case"+Slots":for(let e=1;e<=3;e++){let t=o-(isNaN(+n.value)?0:+n.value)<[0,6,12,18][e];n.children[e].classList.toggle("augInvis",t),n.children[e].disabled=t}break;case"+Skill":Object.values(n.children).forEach((e=>{let t=+e.value+(o-(isNaN(+n.value)?0:+n.value))>=0&&(a.length<5||a.some((t=>t.textContent.includes(e.textContent.split(" ")[0]))));e.classList.toggle("augInvis",!t),e.disabled=!t}))}},setDecoDisplay=(e,t)=>{const n=document.createElement("section");n.className="decoDisplay";const l=document.querySelector(`#${e}Decos`),o=Object.values(l?.children).map((e=>e.selectedIndex));t.forEach(((e,t)=>{const l=document.createElement("img");l.classList.add("armorImg","armorDeco",`lvl${e}`),l.src=`./icons/Lvl${e}.png`,n.appendChild(l);const o=document.createElement("select");o.classList.add("armorDisplay");const a=document.createElement("option");a.textContent=" ---- ",o.appendChild(a);let s=4;for(;--s>-1;){const t=document.createElement("Option");t.classList.add("optTitle"),t.textContent=`Lvl-${s+1} Decos`,e<=s&&(t.style.display="none",t.disabled=!0),o.appendChild(t),Object.values(info.types.decoLevels[s]).forEach((t=>{const n=document.createElement("option");n.value=`${s+1}`,n.textContent=`${Object.keys(t)} +${Object.values(t)}`,e<=s&&(n.style.display="none",n.disabled=!0),o.appendChild(n)}))}n.appendChild(o)})),l?.replaceWith(n),n.id=`${e}Decos`,Object.values(document.querySelector(`#${e}Decos`).children).map(((e,t)=>{e.childElementCount&&o[t]&&(e.selectedIndex="none"!==e.children[o[t]]?.style.display?o[t]:0)}))},getDrugIndex=e=>Object.values(document.getElementById("comboCountDisplay").children).indexOf(e);document.addEventListener("dragstart",(e=>{var t;e.dataTransfer.setData("text/plain",(t=e.target,Object.values(document.getElementById("comboCountDisplay").children).indexOf(t)))})),document.addEventListener("dragover",(e=>{e.preventDefault(),e.dataTransfer.dropEffect="move"})),document.addEventListener("drop",(e=>{e.preventDefault();const t=e.dataTransfer?.getData("text/plain");"comboCountDisplay"===e.target.parentElement.id&&e.target.before(Object.values(document.getElementById("comboCountDisplay")?.children)[+t]),comboTracker=Object.values(comboCountDisplay.children).map((e=>e.className.split(" ")[0]))}));const validator=(e,t=0)=>{const n=e.id.slice(0,-7);setArmorSkillsDisplay([n]);const l=getArmor(n);Object.values(document.querySelectorAll(`#${n}Skills>output`)).map((e=>{+e.textContent.slice(-2)<0&&Object.values(document.querySelectorAll(`#${n}Qurious>select.augment`)).filter((t=>!t.selectedOptions[0]?.textContent.includes(e.textContent.slice(0,-4))))})).forEach((e=>{e&&(e[e.length-1].selectedIndex=-1,e[e.length-1].previousSibling.selectedIndex=-1,setArmorSkillsDisplay([n]))})),t+=l.quriousPoints;for(let n=0;n<6;n++){const l=document.querySelectorAll(`#${e.id}>select.augment`)[n];t+ +l.value<0&&(l.selectedIndex=-1,document.querySelectorAll(`#${e.id}>select.augmentType`)[n].selectedIndex=-1),t+=+l.value}return e.firstElementChild.textContent=`Remaining Points ${t}/${l.quriousPoints}`,t};Object.values(document.querySelectorAll(".augmentType, .augment")).forEach((e=>e.addEventListener("change",(e=>{e.stopPropagation(),e.target?.className.includes("augment")&&(e.target.classList.contains("augmentType")?ChangeDropdownOptions(e.target):updateAugmentOptions(e.target),validator(e.target.parentElement),setArmorSkillsDisplay([e.target.parentElement.id.slice(0,-7)]),updateSelectedSkillsDisplay(),console.log("augChange"))})))),document.querySelectorAll("button").forEach((e=>e.addEventListener("mousedown",(e=>dataCompile(e))))),document.querySelectorAll("select,input").forEach((e=>e.addEventListener("change",(e=>dataCompile(e)))));const resetAugmentSelections=e=>{document.querySelectorAll(`#${e}Qurious select`).forEach((e=>e.selectedIndex=e.classList.contains("augmentType")?0:-1)),updateSelectedSkills()};document.querySelectorAll("section.armorDisplay").forEach((e=>e.addEventListener("change",(e=>{"SELECT"===e.target.tagName&&updateSelectedSkillsDisplay()})))),document.querySelectorAll("select.augment,select.augmentType").forEach((e=>{e.addEventListener("mousedown",(e=>{if(!e.target.classList.contains("augmentType")){let t=e.target.selectedIndex;updateAugmentOptions(e.target),t>e.target.selectedIndex&&e.target.selectedIndex}e.target.previousElementSibling?.selectedIndex<1?Object.values(e.target.children).forEach((e=>e.disabled=!0)):Object.values(e.target.children).forEach((e=>e.disabled=!1)),updateSelectedSkillsDisplay()}))})),document.querySelectorAll("select.armor").forEach((e=>{e.addEventListener("change",(e=>{const t=e.target.className.split(" ")[0],n=getArmor(t);document.querySelector(`section#${t}Qurious>output.currentPoints`).textContent=`Remaining Points ${n.quriousPoints}/${n.quriousPoints}`,setArmorSkillsDisplay([t])}))})),document.querySelectorAll("input, button:not(#setReturn button), select:not(#setReturn select)").forEach((e=>{e.addEventListener("change",(()=>updateSelectedSkills(e)))})),document.querySelector("#weaponSelects>#Qurious")?.addEventListener("mousedown",(()=>{document.getElementById("augToggle")?.classList.remove("augInvis")})),setTimeout((function(){document.querySelectorAll("option").forEach((e=>{e.disabled="none"===e.style.display}))}),100),weaponType.addEventListener("change",(()=>{weaponSelect(),classChange(),rampageSelect(),monChart(),partSelector(),comboReset()})),dropWeapon.addEventListener("change",(()=>rampageSelect())),document.querySelectorAll("select.menu").forEach((e=>e.addEventListener("change",(e=>{updateQuest(e.target.selectedOptions[0].value),monChart(),healthSelect()})))),document.getElementById("players")?.addEventListener("change",(()=>healthSelect())),dropQuest.addEventListener("change",(()=>{monChart(),healthSelect()})),dropMon.addEventListener("change",(()=>{partSelect(),questSelect(),healthSelect(),monChart()})),document.querySelector("#questButton").addEventListener("mousedown",(()=>showMenu())),Object.values(document.querySelectorAll("#searchAgain, #startSearch")).forEach((e=>e.addEventListener("change",(()=>getSetBuilds(7))))),Object.values(document.querySelectorAll(".armorImg+.charm")).forEach((e=>e.addEventListener("change",(e=>setCharmsAvailableDecoSlots(e.target))))),document.querySelector(".extraSkills").addEventListener("mousedown",(e=>{"BUTTON"===e.target.tagName&&addPoints(e.target.textContent.split(" +"))})),document.querySelector(".grid").addEventListener("mousedown",(e=>{if("BUTTON"===e.target.tagName){let t=Object.values(document.querySelectorAll("div.grid > div.setResult")).indexOf(e.target.parentElement),n=GlobalMap.get(t)[e.target.parentElement.lastElementChild.selectedIndex],l={};n.usedSkills.slice(-2).forEach((e=>l[e[0]]=e[1])),equipBuild(n,l);const o={};n.usedSkills.forEach((e=>{const t=e[3]?e[1]*e[3]:e[1];o[e[0]]?o[e[0]]+=t:o[e[0]]=t})),console.log({build:n,charm:l,buildTest:o}),document.getElementById("setReturn").classList.add("augInvis"),dataCompile(),document.querySelectorAll(".extraSkills>button").forEach((e=>e.remove())),document.querySelectorAll(".grid>div").forEach((e=>e.remove())),GlobalMap.clear()}}));let newSkills={},totalCombos=0,timer=0,GlobalMap=new Map,workers=[],workerCount=0,GlobalFragment=document.createDocumentFragment(),totalSets=0;const getUsedDecoArr=e=>{const t=[[],[],[],[]];for(let n=0;n<e.length;n++)if(e[n][2]&&e[n][2]?.includes("Slot lvl")){const l=+e[n][2].slice(-1);let o=e[n][3];for(;--o>=0;)t[l-1].push(e[n][0])}return t},setAugmentAuto=(e,t)=>{let n=0;e.augs.forEach((l=>{let o=t[n],a=o.nextElementSibling,[s,r]=Object.entries(l)[0];if("-Skill"===s&&e.points>=5)e.points-=5,s="-Def";else if("-Def"===s&&e.points>=5)return void(e.points-=5);let i=0;switch(Object.values(a.children).forEach((e=>e.remove())),a.innerHTML+='<option value="0"> ---- </option>',s){case"-Def":o.selectedIndex=1;for(let e=3;e<=5;e+=2){const t=document.createElement("option");t.value=e,t.textContent=`-${e} Def`,a.appendChild(t)}a.selectedIndex=2;break;case"-Skill":o.selectedIndex=2;let t=document.querySelectorAll(`#${e.type}Skills>output`),n=Object.keys(e.skills.pop())[0];for(let e=0;e<t.length;e++){t[e].textContent.includes(n)&&(i=e);const l=document.createElement("option");l.value=10,l.textContent=`${t[e].textContent.split("\n")[0].split(" ")[0]} 10`,a.appendChild(l)}a.selectedIndex=i+1;break;case"+Skill":o.selectedIndex=4,Object.entries(info.types.qurious).forEach((([e,t],n)=>{e.includes(r)&&(i=n);const l=document.createElement("option");l.value=-t,l.textContent=`${e} -${t}`,a.appendChild(l)})),a.selectedIndex=i+1;break;case"+Slots":o.selectedIndex=3;for(let e=1;e<=3;e++){const t=-6*e,n=document.createElement("option");n.value=t,n.textContent=`${e} Slot ${t}`,a.appendChild(n)}a.selectedIndex=r/-6}++n}))},setUsedDecorations=e=>{document.querySelectorAll(".decoDisplay>img.armorDeco").forEach((t=>{e[t.className[22]-1]&&Object.values(t.nextElementSibling.children).some(((n,l)=>{if(+n.value<=t.className[22]&&n.textContent.includes(e[t.className[22]-1][0]))return t.nextElementSibling.selectedIndex=l,e[t.className[22]-1].shift()}))}))},setAugmentDropdown=(e,t)=>{for(let n=0;n<e.childElementCount;n++)if(e.children[n].textContent.includes(t))return e.selectedIndex=n,void setArmorSkillsDisplay([e.id])},setCharmSelects=e=>{let t=Object.keys(e);const n=document.querySelectorAll("select.charm");for(let e=0;e<t.length;e++){const l=n[e];for(let n=0;n<l.options.length;n++)if(l.options[n].textContent.includes(t[e])){l.selectedIndex=n,setCharmsAvailableDecoSlots(l);break}}},equipBuild=(e,t)=>{const{armors:n,usedSkills:l}=e;setCharmSelects(t);for(const[e,t]of n)setAugmentDropdown(document.getElementById(t.type),e),o=t.type,document.querySelectorAll(`#${o}Qurious select`).forEach((e=>e.selectedIndex=e.classList.contains("augmentType")?0:-1)),updateSelectedSkills(),setArmorSkillsDisplay([t.type]);var o,a;for(const e of n){let t=document.querySelectorAll(`#${e[1].type}Qurious>select.augmentType`);setAugmentAuto(e[1],t),validator(document.getElementById(`${e[1].type}Qurious`))}a=getUsedDecoArr(l),document.querySelectorAll(".decoDisplay>img.armorDeco").forEach((e=>{a[e.className[22]-1]&&Object.values(e.nextElementSibling.children).some(((t,n)=>{if(+t.value<=e.className[22]&&t.textContent.includes(a[e.className[22]-1][0]))return e.nextElementSibling.selectedIndex=n,a[e.className[22]-1].shift()}))})),updateSelectedSkillsDisplay()},appendElements=()=>{requestIdleCallback((()=>document.querySelector(".grid")?.append(GlobalFragment)))},setUsedDecos=e=>{["lvl4","lvl3","lvl2","lvl1"].forEach((t=>{const n=e.usedSkills.filter((e=>e[2].includes(t))),l=document.querySelectorAll(`.${t}`);for(let e=0;e<n.length;e++)for(let o=0;o<l[e].children.length;o++){l[e].children[o].value<=t&&l[e].children[o].textContent.includes(n[e][0])&&(l[e].selectedIndex=o);break}}))},getTotal=(e,t=info.types)=>{const n=getSetRequirements().skills,{armorSkills:l,remainingSlots:o,quriousSkills:a}=e;for(let e=0;e<4;++e)o[e]&&t.decoLevels[e].forEach((t=>{const[a,s]=Object.entries(t)[0];n[a]||(l[a]?l[a]+=+s*o[e]:l[a]=+s*o[e])}));return Object.entries(t.qurious).forEach((([e,t])=>{!n[e]&&a[t/3-1]&&(l[e]?l[e]=l[e]+a[t/3-1]:l[e]=a[t/3-1])})),Object.entries(l).map((e=>[e[0],Math.min(+e[1],t.maxDeco[e[0]]??info.skills[e[0]].length-1)])).sort()},expandText=e=>{Object.values(e.children).forEach((e=>e.textContent=e.value))},abbreviateText=e=>{Object.values(e.children).forEach((e=>e.textContent=memo.get(e.value.replace(/&\s+|:/g,""))))},setOutput=e=>{e.forEach((e=>{const t=document.createElement("button");t.textContent=`${e[0]} +${+e[1]}`,document.querySelector(".extraSkills").append(t)})),console.log((performance.now()-timer)/1e3)},memo=new Map,getUsedCharm=e=>{const t=e=>{let t=e.replace(/[^A-Z1-9:& /,]/g,""),n=e.substring(0,3);return 1===t.length?n:t},n=[];return e.forEach((e=>{const l=e.usedSkills.slice(-2),o=`${l[0][0]} ${l[0][1]} ${l[1][0]} ${l[1][1]}`;if(memo.has(o))n.push(memo.get(o));else{const e=[`${l[0][0]}: ${l[0][1]} & ${l[1][0]}: ${l[1][1]}`,`${t(l[0][0])}: ${l[0][1]} & ${t(l[1][0])}: ${l[1][1]}`];memo.set(o,e),n.push(e)}})),n},recieveMessage=(e,t)=>{for(let n=0;n<e.length;n++){const l=e[n];GlobalMap.set(GlobalMap.size,l);const o=getUsedCharm(l),a=document.createDocumentFragment(),s=document.createElement("button");s.type="button",s.setAttribute("aria-pressed","false"),s.classList.add("equipBuild"),s.textContent="Equip Build",a.appendChild(s);for(let e=0;e<5;e++){const t=document.createElement("output");t.className=`armorImg ${["helm","chest","arm","waist","leg"][e]}`,a.appendChild(t);const n=document.createElement("span");n.textContent=l[0].armors[e][0],a.appendChild(n)}const r=document.createElement("select");r.classList.add("armorCharm"),r.setAttribute("title","charmSkill1"),r.onmousedown=()=>{return e=r,void Object.values(e.children).forEach((e=>e.textContent=e.value));var e},r.onchange=()=>abbreviateText(r),r.onfocusout=()=>abbreviateText(r);const i=document.createElement("output");i.className="armorImg charm",a.appendChild(i),o.forEach((e=>{const t=document.createElement("option");t.value=e[0],t.textContent=e[1],r.appendChild(t)})),a.appendChild(r);const c=document.createElement("div");c.classList.add("setResult"),c.appendChild(a),GlobalFragment.append(c),!(GlobalMap.size%20||t)-1&&(document.querySelector(".grid").append(GlobalFragment),document.getElementById("setOutput").textContent=`Displayed ${GlobalMap.size-1} Builds / ${formatNumbers(totalCombos)} Combinations`)}},getSkillReq=(e=[])=>(document.querySelectorAll(".buildSkills>div>.skill").forEach((t=>{t.selectedIndex>0&&e.push([t.id,t.selectedIndex])})),e),getSetRequirements=(e=info.types)=>{const t={},n={};return document.querySelectorAll("#skillSelect>div>output").forEach((l=>{+l.textContent.match(/(?<=Lv-)\d/)[0]>0&&(t[l.className.split(" ")[1]]=-l.textContent.match(/(?<=Lv-)\d/)[0],n[l.className.split(" ")[1]]={lvl:e.decos[l.className.split(" ")[1]]??5,lvl4:e.Lvl4[l.className.split(" ")[1]]??0,max:e.maxDeco[l.className.split(" ")[1]]-+l.textContent.match(/(?<=Lv-)\d/)[0],qurious:(e.qurious[l.className.split(" ")[1]]??60)/3})})),{skills:Object.fromEntries(Object.entries(t).sort(((e,t)=>n[t[0]].qurious-n[e[0]].qurious||n[t[0]].lvl-n[e[0]].lvl||n[e[0]].lvl4-n[t[0]].lvl4))),skillInfo:n}};function applyArmorFilter(e,t,n){let l=new Map(Object.entries(JSON.parse(JSON.stringify(info.armor))));const o={},a=[1,5,5,6],s=[0,0,0,0];Object.entries(e).forEach((e=>{t[e[0]].lvl<3||2===t[e[0]].lvl?s[3]+=~~(e[1]/2):4===t[e[0]].lvl4&&(s[3]+=2),1===t[e[0]].lvl?s[0]+=e[1]:3===t[e[0]].lvl&&(s[2]+=e[1])})),a[0]=s[0]<-5?.75:0,a[2]=s[2]<-3?6:5,a[3]=s[3]<-3?8:6;for(let e=0;e<5;e++){const t=["helm","waist","chest","arm","leg"][e];l.set(t,l.get(t).filter((e=>"MaleOnly"!==e.sex)))}return["helm","waist","chest","arm","leg"].forEach((s=>{o[s]=[],l.get(s).forEach((l=>{if(!l)return;l.fodder={};const r=l.skills,i=l.decos.join("");switch(!0){case"3000"===i:l.decos=[2,1,0,0],l.fodder.augs=[[{"+Slots":-6}],[]],l.quriousPoints-=6;break;case"2001"===i:l.decos=[1,1,0,1],l.fodder.augs=[[{"+Slots":-6}],[]],l.quriousPoints-=6;break;case"1001"===i:case"2010"===i:l.decos=[1,1,0,1],l.fodder.augs=[[{"+Slots":-12}],[]],l.quriousPoints-=12;break;case"0002"===i:l.decos=[0,1,0,2],l.fodder.augs=[[{"+Slots":-12}],[]],l.quriousPoints-=12;break;case"1020"===i:l.decos=[0,1,0,2],l.fodder.augs=[[{"+Slots":-18}],[]],l.quriousPoints-=18;break;case"1002"===i:l.decos=[0,1,0,2],l.fodder.augs=[[{"+Slots":-6}],[]],l.quriousPoints-=6;break;case 13===l.quriousTable:l.decos=[1,1,0,1],l.fodder.augs=[[{def:5},{def:5},{def:5},{def:5},{"+Slots":-18},{"+Slots":-12}],[]],l.quriousPoints=0;break;default:l.fodder={points:0,augCount:3,augs:[[],[]]}}if(document.getElementById("StormSoul").selectedIndex>3){const e=4===document.getElementById("StormSoul").selectedIndex?1:2;for(const n of r)t[n].qurious<6&&(r[n]+=e)}let c=l.decos[0]*a[0]+l.decos[1]*a[1]+l.decos[2]*a[2]+l.decos[3]*a[3],u=0;for(let n=0;n<Object.keys(r).length;n++)if(e[Object.keys(r)[n]])20===t[Object.keys(r)[n]].qurious&&5===t[Object.keys(r)[n]].lvl?(l.setBonus={[Object.keys(r)[n]]:Object.values(r)[n]},c+=30*Math.min(-1*e[Object.keys(r)[n]],r[Object.keys(r)[n]])):c+=Math.min(-1*e[Object.keys(r)[n]],r[Object.keys(r)[n]])*t[Object.keys(r)[n]].qurious==20?4:t[Object.keys(r)[n]].qurious;else if(13!==l.quriousTable){u+=Object.values(r)[n],l.fodder.fodderCount||(l.fodder.fodderCount=0),l.fodder.fodderCount+=Object.values(r)[n],l.fodder.skills||(l.fodder.skills=[]);for(let e=0;e<Object.values(r)[n];e++)l.fodder.skills.push({[Object.keys(r)[n]]:1})}if(13===l.quriousTable)l.totalQuriousPoints=15+l.quriousPoints,l.armorRating=c;else switch(u){case 0:l.totalQuriousPoints=15+l.quriousPoints,l.fodder.augs[0]=[{"-Def":5},{"-Def":5},{"-Def":5}].concat(l.fodder.augs[0]),l.armorRating=c+~~(Math.min(15*l.quriousAugs,l.totalQuriousPoint)/3);break;case 1:l.totalQuriousPoints=20+l.quriousPoints,l.fodder.augs[0]=[{"-Skill":10},{"-Def":5},{"-Def":5}].concat(l.fodder.augs[0]),l.armorRating=c+~~(Math.min(15*l.quriousAugs,l.totalQuriousPoints)/3);break;case 2:l.totalQuriousPoints=25+l.quriousPoints,l.fodder.augs[0]=[{"-Skill":10},{"-Skill":10},{"-Def":5}].concat(l.fodder.augs[0]),l.armorRating=c+~~(Math.min(15*l.quriousAugs,l.totalQuriousPoints)/3);break;default:l.totalQuriousPoints=30+l.quriousPoints,l.fodder.augs[0]=[{"-Skill":10},{"-Skill":10},{"-Skill":10}].concat(l.fodder.augs[0]),l.armorRating=c+~~(Math.min(15*l.quriousAugs,l.totalQuriousPoints)/3)}const d=(e,t=!0)=>{t&&o[s].pop(),l.fodder.type=s,l.quriousPoints=l.totalQuriousPoints+0,l.totalQuriousPoints=~~(l.totalQuriousPoints/3),o[s].splice(e,0,{...l,...r})};if(!o[s][0])return l.fodder.type=s,l.quriousPoints=l.totalQuriousPoints+0,l.totalQuriousPoints=~~(l.totalQuriousPoints/3),void o[s].push({...l,...r});if(l.armorRating>(o[s].length===n?o[s][n-1].armorRating:10)){for(let e=0;e<o[s].length;e++)if(l.armorRating>o[s][e].armorRating)return void d(e);o[s].length<n&&d(o[s].length-1,!1)}}))})),Object.values(o).forEach((e=>{for(let t of Object.values(e)){t.skillCount=Object.keys(t.skills).length;for(let e=0;e<3;e++)t.sex[e]&&delete t.sex[e]}})),o}const getCharms=(e,t,n=[])=>{const{charms:l,types:o}=info;let a=Object.values(l).filter((t=>Object.keys(t.skills).every((t=>e[t]&&o.Lvl4[t]<3))));return GlobalMap.set("charms",[]),a.forEach((e=>{const t={...e.skills};n.push(t)})),n},getCheckedSkills=(e=[])=>(document.getElementsByClassName("skillButton").forEach((t=>{t.checked&&e.push(info.skills[t.id])})),e),getSetBuilds=(e=5)=>{try{timer=performance.now(),workerCount=4;let t=window.location.hostname.includes(".0.0.")?"setBuilderWorker.js":"./ugly/onlineWorker.js";for(let e=0;e<workerCount;e++)workers[e]=new Worker(t);workers.forEach((e=>e.addEventListener("message",(e=>{if(totalCombos+=e.data[2][1],totalSets+=e.data[2][0],GlobalMap.size<102&&e.data[0][0]&&recieveMessage(e.data[0],e.data[1]),e.data[1]){e.target.terminate();for(const t in e.data[1].remainingSlots)newSkills.remainingSlots[t]=Math.max(newSkills.remainingSlots[t],e.data[1].remainingSlots[t]);for(const t in e.data[1].quriousSkills)newSkills.quriousSkills[t]=Math.max(newSkills.quriousSkills[t],e.data[1].quriousSkills[t]);for(const[t,n]of Object.entries(e.data[1].armorSkills))newSkills.armorSkills[t]?newSkills.armorSkills[t]=Math.max(newSkills.armorSkills[t],n):newSkills.armorSkills[t]=n;0==--workerCount&&(getTotal(newSkills).forEach((e=>{const t=document.createElement("button");t.textContent=`${e[0]} +${+e[1]}`,document.querySelector(".extraSkills").append(t)})),console.log((performance.now()-timer)/1e3),document.getElementById("extraOutput").textContent=`Found ${formatNumbers(totalSets)} Builds / ${formatNumbers(totalCombos)} Combinations`,console.log([totalCombos,GlobalMap]),GlobalMap.size<101&&(document.querySelector(".grid").append(GlobalFragment),document.getElementById("setOutput").textContent=`Displayed ${GlobalMap.size} Builds / ${formatNumbers(totalCombos)} Combinations`))}}))));const n=getSetRequirements();n.thisWeapon=getWeaponMR().decos,n.theseCharms=getCharms(n.skills,n.skillInfo),n.armors=applyArmorFilter(n.skills,n.skillInfo,e);const l={};for(let e=0;e<5;++e)for(let t=0;t<Object.keys(n.armors)[e].length;++t){const o=Object.values(n.armors)[e][t];if(o.setBonus&&n.skills[Object.keys(o.setBonus)[0]]){let a=Object.keys(o.setBonus)[0];l[a]||(l[a]=[]),l[a].push(Object.keys(n.armors)[e],t,-1*Object.values(o.setBonus)[0])}}const o={helm:-1,chest:0,arm:0,waist:0,leg:0,work:[-1,workers.length]},a=[],s=e=>{const t=Object.keys(l).length;e:for(;++o.helm<e||(o.helm=0,++o.chest<e||(o.chest=0,++o.arm<e||(o.arm=0,++o.waist<e||(o.waist=0,++o.leg!==e))));){if(t)for(const e in l){let t=0,a=l[e],s=a.length-1;for(;a[s-1]===o[a[s-2]]&&(t+=a[s]),!((s-=3)<0););if(n.skills[e]<t)continue e}a.push([o.helm,o.chest,o.arm,o.waist,o.leg])}};s(e);for(const e in l)delete n[e];const r=a.length;for(let e=0;e<workers.length;++e)e===workers.length-1?n.permutations=a:n.permutations=a.splice(0,r/workers.length),workers[e].postMessage(n);GlobalMap.clear(),document.getElementById("setReturn").classList.remove("augInvis"),document.querySelectorAll(".extraSkills>button").forEach((e=>e.remove())),Object.values(document.getElementsByClassName("grid")[0].children).forEach((e=>e.remove())),newSkills={remainingSlots:[0,0,0,0],armorSkills:{},quriousSkills:[0,0,0,0,0]},totalCombos=0,totalSets=0}catch(e){console.error(e)}},build=(e=!0)=>{if(document.getElementById("skillSelect").innerHTML+='\n <div id="SpareShotSelect"><label class="label SpareShot skillInput">SpareShot</label><output class="skillInput SpareShot" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="SpareShotDec" class="skillInput SpareShot dec">⇩</button><button type="button" aria-pressed="false" id="SpareShotInc" class="skillInput SpareShot inc">⇧</button></div><div id="EvadeExtenderSelect"><label class="label EvadeExtender skillInput">EvadeExtender</label><output class="skillInput EvadeExtender" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="EvadeExtenderDec" class="skillInput EvadeExtender dec">⇩</button><button type="button" aria-pressed="false" id="EvadeExtenderInc" class="skillInput EvadeExtender inc">⇧</button></div><div id="RapidFireUpSelect"><label class="label RapidFireUp skillInput">RapidFireUp</label><output class="skillInput RapidFireUp" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="RapidFireUpDec" class="skillInput RapidFireUp dec">⇩</button><button type="button" aria-pressed="false" id="RapidFireUpInc" class="skillInput RapidFireUp inc">⇧</button></div><div id="PierceUpSelect"><label class="label PierceUp skillInput">PierceUp</label><output class="skillInput PierceUp" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="PierceUpDec" class="skillInput PierceUp dec">⇩</button><button type="button" aria-pressed="false" id="PierceUpInc" class="skillInput PierceUp inc">⇧</button></div><div id="ForaySelect"><label class="label Foray skillInput">Foray</label><output class="skillInput Foray" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="ForayDec" class="skillInput Foray dec">⇩</button><button type="button" aria-pressed="false" id="ForayInc" class="skillInput Foray inc">⇧</button></div><div id="DerelictionSelect"><label class="label Dereliction skillInput">Dereliction</label><output class="skillInput Dereliction" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="DerelictionDec" class="skillInput Dereliction dec">⇩</button><button type="button" aria-pressed="false" id="DerelictionInc" class="skillInput Dereliction inc">⇧</button></div><div id="CriticalEyeSelect"><label class="label CriticalEye skillInput">CriticalEye</label><output class="skillInput CriticalEye" max="7" min="0">Lv-7</output><button type="button" aria-pressed="false" id="CriticalEyeDec" class="skillInput CriticalEye dec">⇩</button><button type="button" aria-pressed="false" id="CriticalEyeInc" class="skillInput CriticalEye inc">⇧</button></div><div id="CriticalBoostSelect"><label class="label CriticalBoost skillInput">CriticalBoost</label><output class="skillInput CriticalBoost" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="CriticalBoostDec" class="skillInput CriticalBoost dec">⇩</button><button type="button" aria-pressed="false" id="CriticalBoostInc" class="skillInput CriticalBoost inc">⇧</button></div><div id="CounterstrikeSelect"><label class="label Counterstrike skillInput">Counterstrike</label><output class="skillInput Counterstrike" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="CounterstrikeDec" class="skillInput Counterstrike dec">⇩</button><button type="button" aria-pressed="false" id="CounterstrikeInc" class="skillInput Counterstrike inc">⇧</button></div><div id="CoalescenceSelect"><label class="label Coalescence skillInput">Coalescence</label><output class="skillInput Coalescence" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="CoalescenceDec" class="skillInput Coalescence dec">⇩</button><button type="button" aria-pressed="false" id="CoalescenceInc" class="skillInput Coalescence inc">⇧</button></div><div id="AgitatorSelect"><label class="label Agitator skillInput">Agitator</label><output class="skillInput Agitator" max="5" min="0">Lv-5</output><button type="button" aria-pressed="false" id="AgitatorDec" class="skillInput Agitator dec">⇩</button><button type="button" aria-pressed="false" id="AgitatorInc" class="skillInput Agitator inc">⇧</button></div><div id="AmmoUpSelect"><label class="label AmmoUp skillInput">AmmoUp</label><output class="skillInput AmmoUp" max="3" min="0">Lv-3</output><button type="button" aria-pressed="false" id="AmmoUpDec" class="skillInput AmmoUp dec">⇩</button><button type="button" aria-pressed="false" id="AmmoUpInc" class="skillInput AmmoUp inc">⇧</button></div><div id="AttackBoostSelect"><label class="label AttackBoost skillInput">AttackBoost</label><output class="skillInput AttackBoost" max="7" min="0">Lv-7</output><button type="button" aria-pressed="false" id="AttackBoostDec" class="skillInput AttackBoost dec">⇩</button><button type="button" aria-pressed="false" id="AttackBoostInc" class="skillInput AttackBoost inc">⇧</button></div>\n ',e){return getSetBuilds()}};
