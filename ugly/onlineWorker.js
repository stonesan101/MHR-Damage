const getDecos=([...a],c,d,g,k)=>{const f={remainingSkills:{},decosUsed:[]};(()=>{for(let h=0;h<c.length&&0<a[3];h++){const e=d[c[h][0]].lvl4;if(0!==e&&c[h][1]<=-e&&(1!==d[c[h][0]].lvl||0<=(k-=e))){const q=~~Math.min(a[3],-c[h][1]/e);a[3]-=q;c[h][1]+=e*q;f.decosUsed.push([c[h][0],e,"Slot lvl4",q])}}})();f.check=((h=-1)=>{for(let [u,x]of c){++h;if(0<=x)continue;let m;switch(d[u].lvl){case 1:m=Math.min(-x,a[0]);break;case 2:m=Math.min(-x,a[1]+a[2]+a[3]);break;case 3:m=Math.min(-x,a[2]+a[3]);break;case 4:m=
Math.min(-x,a[3]);break;default:m=0}if(0>m+x){var e=d[u].qurious,q=m+x;f.remainingSkills[e]||(f.remainingSkills[e]={total:0});if(3<=e&&0>(g+=q)||3>e&&0>(g+=q/1.25))return!1;f.remainingSkills[e][u]=0;f.remainingSkills[e].total-=q;f.remainingSkills[e][u]-=q;if(!m)continue}for(e=d[u].lvl-2;4>e++&&(!a[e]||(q=Math.min(m,a[e],-c[h][1]),a[e]-=q,c[h][1]+=q,f.decosUsed.push([u,1,`Slot lvl${e+1}`,q]),0!==c[h][1])););}return g})();return[f,a]};
function generateAugmentCombinations(a,c,d,g){a:for(let k=0;k<d.length;k++){const f=d[k];for(let h=k+1;h<d.length;h++){const e=d[h];for(let q=h+1;q<d.length;q++){const u=d[q];let x=3;const m=[];if(f+e+u>g)continue;let p={[f]:1};p[e]=(p[e]||0)+1;p[u]=(p[u]||0)+1;b:for(let n=0,v=Object.entries(p);n<v.length;++n){c:for(let [y,b]of Object.entries(a[v[n][0]]))if("total"!==y)if(c.has(y)){for(x+=b;b++&&x--;)m.push(y);if(0===b)break b}else if(1<b){if(0>=(x+=b))break b;if(0>=(v[n][1]+=b-1))break c}if(!(0<
x)&&(previousBestSolution=[m,f+e+u],f+e+u===g))break a}}}}return previousBestSolution}
const findBestSum3=(a,c)=>{for(let d=0,g=1,k=2,f=a.length;k<f;d++,g++,k++)if(!(a[d]+a[g]+a[k]<c))return a[d]+a[g]+a[k]===c||0===d||a[--d]+a[g]+a[k]<=c||a[d]+a[--g]+a[k]<=c?[a[d],a[g],a[k],a[d]+a[g]+a[k]]:[a[d],a[g],a[k-1],a[d]+a[g]+a[k-1]];return[a[a.length-3],a[a.length-2],a[a.length-1],a[a.length-3]+a[a.length-2]+a[a.length-1]]},findBestSum2=(a,c)=>{for(let d=0,g=1;g<a.length;d++,g++)if(!(a[d]+a[g]<c))return a[d]+a[g]===c||0===d||a[--d]+a[g]<=c?[a[d],a[g],a[d]+a[g]]:[a[d],a[g-1],a[d]+a[g-1]];return[a[a.length-
2],a[a.length-1],a[a.length-2]+a[a.length-1]]},findBestSum1=(a,c)=>{a=a.filter(d=>d<=c).pop();return[a,a]},getQuriousSkills=(a,c,d,g)=>{let {check:k,decosUsed:f,remainingSkills:h}=a;k+=5;var e=0;a=[];let q=0;for(var u in h)q+=h[u].total;u=b=>{let l=0;0<b.fodderSkills.length&&(++l,++b.skillsRemovedCount);const r=5*(1+l);b.augs.push({[l?"-Skill":"-Def"]:[l?b.fodderSkills.pop():r]});f.push([l?b.fodderSkills.pop():r,l?"-Skill":"-Def",b.name,1]);b.quriousPoints+=r;b.unBloatedPoints=~~(b.quriousPoints/
3)};const x=(b,l)=>{for(const r of b){b=h[r];let w=Object.keys(b)[1];if(5===l.innateSkills.size)for(let B=1,D=Object.keys(b);B<D.length;B++){if(h[D[B]]){w=D[B];break}if(B===D.length-1)return}l.augs.push({"+Skill":w});f.push([w,1,l.name,1]);l.innateSkills.add(w);0===--b.total?delete h[r]:0===--b[w]&&delete h[r][w];--q}};for(var m=0;m<c.length;m++){let b={};b={...c[m]};b.augs=[...c[m].augs];b.fodderSkills=[...c[m].fodderSkills];b.skillsRemovedCount=Math.min(3,c[m].fodderCount);b.innateSkills=new Set(Object.keys(c[m].skills));
if(0>=q){a.push(b);continue}e=6-b.augs.length;if(q<e)for(;e>q;)u(b),--e;if(1>e){a.push(b);continue}var p=e,n=1;let l=0,r=0,w=Object.keys(h);for(;p--;)r+=+w[l],p&&++n>h[w[l]].total&&(n=1,++l);if(b.unBloatedPoints<r){if(0>--k)return{quriousAugs:0,finalSkillCheck:0,returnArmors:0,arr:!1};--e;u(b);if(b.unBloatedPoints<(r-=w[l])){if(0>--k)return{quriousAugs:0,finalSkillCheck:0,returnArmors:0,arr:!1};--e;u(b);0===n-1&&--l;if(b.unBloatedPoints<r-w[l]){if(0>--k)return{quriousAugs:0,finalSkillCheck:0,returnArmors:0,
arr:!1};--e;a.push(b);continue}}}p=[];for(var v in h)for(n=Math.min(h[v].total,e);n--;)p.push(+v);n=[];if(3===e)n=findBestSum3(p,b.unBloatedPoints);else if(2===e)n=findBestSum2(p,b.unBloatedPoints);else if(1===e&&b.unBloatedPoints>=p[0])n=findBestSum1(p,b.unBloatedPoints);else{if(0>--k)return{quriousAugs:0,finalSkillCheck:0,returnArmors:0,arr:!1};a.push(b);continue}if(5-thisPiece.innateSkills.size<n.length)satisfySkillsRestriction();else if(0>(b.quriousPoints-=Number(3*n.pop()))){console.log(`${b.name} has ${b.quriousPoints} points}`,
b);debugger}x(n,b);a.push(b)}c=(b,l)=>{b.augs.splice(l,1);l=findBestSum1(Object.keys(h).filter(r=>r<=b.quriousPoints),~~(b.quriousPoints/3));b.quriousPoints-=3*l[1];x([l[0]],b)};if(0<q)for(const b of a)if(!(4<b.innateSkills.size&&Object.entries(h).filter(l=>Object.keys(l[1]).some(r=>b.innateSkills.has(r))))){if(!Object.keys(h).length)break;for(v=b.augs.length-1;--v;)b.augs.some(l=>l["-Def"])&&b.quriousPoints-5>=3*Object.keys(h)[0]?(b.quriousPoints-=5,c(b,v)):b.augs.some(l=>l["-Skill"])&&3*Object.keys(h)[0]<=
b.quriousPoints-10&&(b.quriousPoints-=10,c(b,v))}if(Object.keys(h).length)return{quriousAugs:0,finalSkillCheck:0,returnArmors:0,arr:!1};c=[0,0,0,0,0];let y={};for(let b of a){if(5>b.quriousPoints||!b.fodderCount)continue;const l=Math.min(b.fodderCount,~~(b.quriousPoints/5));Object.keys(b.skills).forEach(r=>{y[r]=y[r]?y[r]+(g[r]?Math.min(d[r].max-g[r],l):l):g[r]?Math.min(d[r].max-g[r],l):l});if(!(4<b.innateSkills.size||8>b.quriousPoints))for(v=b.augs.length,e=b.skillsRemovedCount,u=b.quriousPoints+
0;0<=--v&&!((u-=0<=--e?5:10)<3*v);)for(m=~~(u/v/3);m--;)++c[m]}return{quriousAugs:f,returnArmors:a,theseExtraPoints:c,newSkills:y,arr:!q}},combineDecos=(a,c)=>{const [...d]=c;a.forEach(g=>{d[0]+=g[0];d[1]+=g[1];d[2]+=g[2];d[3]+=g[3]});return d},max=(a,c)=>a>=c?a:c,getMostSkills=(a,c)=>{for(const d of a){for(a=0;4>a;a++)c.remainingSlots[a]=max(c.remainingSlots[a],d.remainingSlots[a]);for(a=0;5>a;a++)c.quriousSkills[a]=max(c.quriousSkills[a],d.quriousSkills[a]);for(const [g,k]of Object.entries(d.armorSkills))c.armorSkills[g]=
max(c.armorSkills[g],k)}};function sumArmorSkills(a,c){const d={};a.forEach(g=>{Object.entries(g.skills).forEach(([k,f])=>{c[k]&&(d[k]=(d[k]||0)+f)})});return d}
self.addEventListener("message",a=>{var c=[0,0];var d={quriousSkills:[0,0,0,0,0],armorSkills:{},remainingSlots:[0,0,0,0]};var g=[];let k=1;a.data.requiredSkills=Object.entries(a.data.skills);for(const f of Object.values(a.data.permutations)){a.data.theseArmors=[a.data.armors.helm[f[0]],a.data.armors.chest[f[1]],a.data.armors.arm[f[2]],a.data.armors.waist[f[3]],a.data.armors.leg[f[4]]];const h=testThisBatch(a.data);h&&(getMostSkills(h,d),c[1]+=h.length,++c[0],k&&g.push(h));k&&25===g.length&&(--k,postMessage([g,
!1,c]),c=[0,0])}postMessage([g,d,c])});
const testThisBatch=a=>{const {thisWeapon:c,theseCharms:d,requiredSkills:g,skillInfo:k,theseArmors:f,skills:h}=a,e=sumArmorSkills(f,h),q=combineDecos([c,f[0].decos,f[1].decos,f[2].decos,f[3].decos,f[4].decos],a.charmSlots);let u=30;f.forEach(m=>u-=m.augs.length);let x=[];d.forEach(m=>{if(!Object.entries(m).some(([t,A])=>e[t]&&e[t]+A>k[t].max)){var p=[],n=-q[0];for(let [t,A]of g){e[t]&&(A+=e[t]);m[t]&&(A+=m[t]);const {lvl:E,max:I}=k[t];if(A>I)return;1===E&&(n-=A);0>A&&p.push([t,A])}a:for(let t=0,A=
f.length;t<A;t++){var v=5-Object.keys(f[t].skills).length,y=6-f[t].augs.length;if(v>=y)continue;let E=~~(f[t].quriousPoints/3);v=y-v;let I=~~(E/y);y=([z,C],G,F=-1)=>{if(!(k[z].qurious<I||k[z].qurious*G>E)){if(-1===F)for(let H=0;H<p.length;H++)if(p[H][0]===z){F=H;break}if(C<=-G&&E>=k[z].qurious*G){C=Math.min(-C,G);f[t].quriousPoints-=k[z].qurious*C*3;f[t].unBloatedPoints=~~(f[t].quriousPoints/3);0<=(p[F][1]+=C)&&p.splice(F,1);for(f[t].skills[z]=(f[t].skills[z]||0)+C;C--;)f[t].augs.push({"+Skill":z});
return!0}}};for(let z of Object.entries(f[t].skills))if(e[z[0]]&&y(z,v))continue a;let J=p.length;for(;--J;)if(y(p[J],v+1,J))continue a}var [b,l]=getDecos(q.slice(0),p,k,u,n);if(!b.check)return!1;var {quriousAugs:r,returnArmors:w,theseExtraPoints:B,newSkills:D,arr:K}=getQuriousSkills(b,f,k,h);if(!K)return!1;if(w.some(t=>void 0==t.name)){debugger;console.log(w)}x.push({usedSkills:[].concat(r,Object.entries(e),Object.entries(m)),armors:[[w[0].name,w[0]],[w[1].name,w[1]],[w[2].name,w[2]],[w[3].name,
w[3]],[w[4]?.name,w[4]]],remainingSlots:l,quriousSkills:B,armorSkills:D,thisCharm:m,decoArr:q})}});x=x.filter(m=>{let p={};m.usedSkills.forEach(n=>{let v=n[3]?n[1]*n[3]:n[1];p[n[0]]=p[n[0]]?p[n[0]]+v:v});if(a.requiredSkills.every(n=>p[n[0]]+=0<=n[1]))return!0;console.log({set:m,ugh:p,skills:h});debugger});if(x[0])return x};
